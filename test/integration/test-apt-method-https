#!/bin/bash
set -e

TESTDIR=$(readlink -f $(dirname $0))
. $TESTDIR/framework

setupenvironment

nginxsetuphttps

# generate key
openssl req -x509 -newkey rsa:4096 -keyout $TMPWORKINGDIRECTORY/nginx/cert.key -out $TMPWORKINGDIRECTORY/nginx/cert.crt -nodes -days 365 -subj '/CN=localhost' &>/dev/null

# add key to apt's config. Also pin the key
cat > $TMPWORKINGDIRECTORY/rootdir/etc/apt/apt.conf.d/80https.conf << END
Acquire::https::CaInfo	"$TMPWORKINGDIRECTORY/nginx/cert.crt";
END

cat > $TMPWORKINGDIRECTORY/rootdir/etc/apt/apt.conf.d/81https-pinning.conf << END
Acquire::https::PinnedCert	"$TMPWORKINGDIRECTORY/nginx/cert.crt";
END

buildpackage 'simple-package'
buildpackage 'conflicting-package-one'

generaterepository "$TMPWORKINGDIRECTORY/usr/src/RPM/RPMS" "$TMPWORKINGDIRECTORY/nginx/repo"

cat > $TMPWORKINGDIRECTORY/rootdir/etc/apt/sources.list << END
rpm https://localhost:8080/ $APT_TEST_USED_ARCH apt-tests
rpm https://localhost:8080/ noarch apt-tests
END

/usr/sbin/nginx -c $TMPWORKINGDIRECTORY/nginx/nginx.conf -p $TMPWORKINGDIRECTORY &>> $TMPWORKINGDIRECTORY/nginx/process-stderr.log &
NGINXPID=$!

addtrap 'prefix' "kill -SIGTERM $NGINXPID; [ \"$EXIT_CODE\" = '0' ] || cat $TMPWORKINGDIRECTORY/nginx/process-stderr.log;"

testsuccess aptget update

testpkgnotinstalled 'simple-package'
testsuccess aptget install simple-package
testpkginstalled 'simple-package'

# generate another key, and pin apt to it. Check key pinning
msgmsg 'Pinning invalid key in apt'
openssl req -x509 -newkey rsa:4096 -keyout $TMPWORKINGDIRECTORY/nginx/cert.invalid.key -out $TMPWORKINGDIRECTORY/nginx/cert.invalid.crt -nodes -days 365 -subj '/CN=localhost' &>/dev/null

cat > $TMPWORKINGDIRECTORY/rootdir/etc/apt/apt.conf.d/81https-pinning.conf << END
Acquire::https::PinnedCert	"$TMPWORKINGDIRECTORY/nginx/cert.invalid.crt";
END

testfailure aptget update

testpkgnotinstalled 'conflicting-package-one'
testfailure aptget install conflicting-package-one
testpkgnotinstalled 'conflicting-package-one'
