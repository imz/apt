/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.21
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#define SWIGPYTHON

#ifdef __cplusplus
template<class T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};                                                    
#endif


#include "Python.h"

/*************************************************************** -*- c -*-
 * python/precommon.swg
 *
 * Rename all exported symbols from common.swg, to avoid symbol
 * clashes if multiple interpreters are included
 *
 ************************************************************************/

#define SWIG_TypeRegister    SWIG_Python_TypeRegister
#define SWIG_TypeCheck       SWIG_Python_TypeCheck
#define SWIG_TypeCast        SWIG_Python_TypeCast
#define SWIG_TypeDynamicCast SWIG_Python_TypeDynamicCast
#define SWIG_TypeName        SWIG_Python_TypeName
#define SWIG_TypeQuery       SWIG_Python_TypeQuery
#define SWIG_TypeClientData  SWIG_Python_TypeClientData
#define SWIG_PackData        SWIG_Python_PackData 
#define SWIG_UnpackData      SWIG_Python_UnpackData 


/***********************************************************************
 * common.swg
 *
 *     This file contains generic SWIG runtime support for pointer
 *     type checking as well as a few commonly used macros to control
 *     external linkage.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 *
 * Copyright (c) 1999-2000, The University of Chicago
 * 
 * This file may be freely redistributed without license or fee provided
 * this copyright message remains intact.
 ************************************************************************/

#include <string.h>

#if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#  if defined(_MSC_VER) || defined(__GNUC__)
#    if defined(STATIC_LINKED)
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) extern a
#    else
#      define SWIGEXPORT(a) __declspec(dllexport) a
#      define SWIGIMPORT(a) extern a
#    endif
#  else
#    if defined(__BORLANDC__)
#      define SWIGEXPORT(a) a _export
#      define SWIGIMPORT(a) a _export
#    else
#      define SWIGEXPORT(a) a
#      define SWIGIMPORT(a) a
#    endif
#  endif
#else
#  define SWIGEXPORT(a) a
#  define SWIGIMPORT(a) a
#endif

#ifdef SWIG_GLOBAL
#  define SWIGRUNTIME(a) SWIGEXPORT(a)
#else
#  define SWIGRUNTIME(a) static a
#endif

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

typedef struct swig_type_info {
  const char             *name;
  swig_converter_func     converter;
  const char             *str;
  void                   *clientdata;
  swig_dycast_func        dcast;
  struct swig_type_info  *next;
  struct swig_type_info  *prev;
} swig_type_info;

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(swig_type_info *) SWIG_TypeRegister(swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeCheck(char *c, swig_type_info *);
SWIGIMPORT(void *)           SWIG_TypeCast(swig_type_info *, void *);
SWIGIMPORT(swig_type_info *) SWIG_TypeDynamicCast(swig_type_info *, void **);
SWIGIMPORT(const char *)     SWIG_TypeName(const swig_type_info *);
SWIGIMPORT(swig_type_info *) SWIG_TypeQuery(const char *);
SWIGIMPORT(void)             SWIG_TypeClientData(swig_type_info *, void *);
SWIGIMPORT(char *)           SWIG_PackData(char *, void *, int);
SWIGIMPORT(char *)           SWIG_UnpackData(char *, void *, int);

#else

static swig_type_info *swig_type_list = 0;

/* Register a type mapping with the type-checking */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeRegister(swig_type_info *ti) {
  swig_type_info *tc, *head, *ret, *next;
  /* Check to see if this type has already been registered */
  tc = swig_type_list;
  while (tc) {
    if (strcmp(tc->name, ti->name) == 0) {
      /* Already exists in the table.  Just add additional types to the list */
      if (tc->clientdata) ti->clientdata = tc->clientdata;
      head = tc;
      next = tc->next;
      goto l1;
    }
    tc = tc->prev;
  }
  head = ti;
  next = 0;

  /* Place in list */
  ti->prev = swig_type_list;
  swig_type_list = ti;

  /* Build linked lists */
  l1:
  ret = head;
  tc = ti + 1;
  /* Patch up the rest of the links */
  while (tc->name) {
    head->next = tc;
    tc->prev = head;
    head = tc;
    tc++;
  }
  if (next) next->prev = head;
  head->next = next;
  return ret;
}

/* Check the typename */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeCheck(char *c, swig_type_info *ty) {
  swig_type_info *s;
  if (!ty) return 0;        /* Void pointer */
  s = ty->next;             /* First element always just a name */
  do {
    if (strcmp(s->name,c) == 0) {
      if (s == ty->next) return s;
      /* Move s to the top of the linked list */
      s->prev->next = s->next;
      if (s->next) {
        s->next->prev = s->prev;
      }
      /* Insert s as second element in the list */
      s->next = ty->next;
      if (ty->next) ty->next->prev = s;
      ty->next = s;
      s->prev = ty;
      return s;
    }
    s = s->next;
  } while (s && (s != ty->next));
  return 0;
}

/* Cast a pointer up an inheritance hierarchy */
SWIGRUNTIME(void *) 
SWIG_TypeCast(swig_type_info *ty, void *ptr) {
  if ((!ty) || (!ty->converter)) return ptr;
  return (*ty->converter)(ptr);
}

/* Dynamic pointer casting. Down an inheritance hierarchy */
SWIGRUNTIME(swig_type_info *) 
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/* Return the name associated with this type */
SWIGRUNTIME(const char *)
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/* Search for a swig_type_info structure */
SWIGRUNTIME(swig_type_info *)
SWIG_TypeQuery(const char *name) {
  swig_type_info *ty = swig_type_list;
  while (ty) {
    if (ty->str && (strcmp(name,ty->str) == 0)) return ty;
    if (ty->name && (strcmp(name,ty->name) == 0)) return ty;
    ty = ty->prev;
  }
  return 0;
}

/* Set the clientdata field for a type */
SWIGRUNTIME(void)
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_type_info *tc, *equiv;
  if (ti->clientdata == clientdata) return;
  ti->clientdata = clientdata;
  equiv = ti->next;
  while (equiv) {
    if (!equiv->converter) {
      tc = swig_type_list;
      while (tc) {
        if ((strcmp(tc->name, equiv->name) == 0))
          SWIG_TypeClientData(tc,clientdata);
        tc = tc->prev;
      }
    }
    equiv = equiv->next;
  }
}

/* Pack binary data into a string */
SWIGRUNTIME(char *)
SWIG_PackData(char *c, void *ptr, int sz) {
  static char hex[17] = "0123456789abcdef";
  int i;
  unsigned char *u = (unsigned char *) ptr;
  register unsigned char uu;
  for (i = 0; i < sz; i++,u++) {
    uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* Unpack binary data from a string */
SWIGRUNTIME(char *)
SWIG_UnpackData(char *c, void *ptr, int sz) {
  register unsigned char uu = 0;
  register int d;
  unsigned char *u = (unsigned char *) ptr;
  int i;
  for (i = 0; i < sz; i++, u++) {
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    *u = uu;
  }
  return c;
}

#endif

#ifdef __cplusplus
}
#endif

/***********************************************************************
 * python.swg
 *
 *     This file contains the runtime support for Python modules
 *     and includes code for managing global variables and pointer
 *     type checking.
 *
 * Author : David Beazley (beazley@cs.uchicago.edu)
 ************************************************************************/

#include "Python.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SWIG_PY_INT     1
#define SWIG_PY_FLOAT   2
#define SWIG_PY_STRING  3
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Flags for pointer conversion */

#define SWIG_POINTER_EXCEPTION     0x1
#define SWIG_POINTER_DISOWN        0x2

/* Exception handling in wrappers */
#define SWIG_fail   goto fail

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

/* Common SWIG API */
#define SWIG_ConvertPtr(obj, pp, type, flags) \
  SWIG_Python_ConvertPtr(obj, pp, type, flags)
#define SWIG_NewPointerObj(p, type, flags) \
  SWIG_Python_NewPointerObj(p, type, flags)
#define SWIG_MustGetPtr(p, type, argnum, flags) \
  SWIG_Python_MustGetPtr(p, type, argnum, flags)

/* Python-specific SWIG API */
#define SWIG_newvarlink() \
  SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr) \
  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_ConvertPacked(obj, ptr, sz, ty, flags) \
  SWIG_Python_ConvertPacked(obj, ptr, sz, ty, flags)
#define SWIG_NewPackedObj(ptr, sz, type) \
  SWIG_Python_NewPackedObj(ptr, sz, type)
#define SWIG_InstallConstants(d, constants) \
  SWIG_Python_InstallConstants(d, constants)

#ifdef SWIG_NOINCLUDE

SWIGIMPORT(int)               SWIG_Python_ConvertPtr(PyObject *, void **, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPointerObj(void *, swig_type_info *,int own);
SWIGIMPORT(void *)            SWIG_Python_MustGetPtr(PyObject *, swig_type_info *, int, int);
SWIGIMPORT(PyObject *)        SWIG_Python_newvarlink(void);
SWIGIMPORT(void)              SWIG_Python_addvarlink(PyObject *, char *, PyObject *(*)(void), int (*)(PyObject *));
SWIGIMPORT(int)               SWIG_Python_ConvertPacked(PyObject *, void *, int sz, swig_type_info *, int);
SWIGIMPORT(PyObject *)        SWIG_Python_NewPackedObj(void *, int sz, swig_type_info *);
SWIGIMPORT(void)              SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]);

#else

/* -----------------------------------------------------------------------------
 * global variable support code.
 * ----------------------------------------------------------------------------- */

typedef struct swig_globalvar {   
  char       *name;                  /* Name of global variable */
  PyObject *(*get_attr)(void);       /* Return the current value */
  int       (*set_attr)(PyObject *); /* Set the value */
  struct swig_globalvar *next;
} swig_globalvar;

typedef struct swig_varlinkobject {
  PyObject_HEAD
  swig_globalvar *vars;
} swig_varlinkobject;

static PyObject *
swig_varlink_repr(swig_varlinkobject *v) {
  v = v;
  return PyString_FromString("<Global variables>");
}

static int
swig_varlink_print(swig_varlinkobject *v, FILE *fp, int flags) {
  swig_globalvar  *var;
  flags = flags;
  fprintf(fp,"Global variables { ");
  for (var = v->vars; var; var=var->next) {
    fprintf(fp,"%s", var->name);
    if (var->next) fprintf(fp,", ");
  }
  fprintf(fp," }\n");
  return 0;
}

static PyObject *
swig_varlink_getattr(swig_varlinkobject *v, char *n) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->get_attr)();
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return NULL;
}

static int
swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
  swig_globalvar *var = v->vars;
  while (var) {
    if (strcmp(var->name,n) == 0) {
      return (*var->set_attr)(p);
    }
    var = var->next;
  }
  PyErr_SetString(PyExc_NameError,"Unknown C global variable");
  return 1;
}

statichere PyTypeObject varlinktype = {
  PyObject_HEAD_INIT(0)              
  0,
  (char *)"swigvarlink",              /* Type name    */
  sizeof(swig_varlinkobject),         /* Basic size   */
  0,                                  /* Itemsize     */
  0,                                  /* Deallocator  */ 
  (printfunc) swig_varlink_print,     /* Print        */
  (getattrfunc) swig_varlink_getattr, /* get attr     */
  (setattrfunc) swig_varlink_setattr, /* Set attr     */
  0,                                  /* tp_compare   */
  (reprfunc) swig_varlink_repr,       /* tp_repr      */    
  0,                                  /* tp_as_number */
  0,                                  /* tp_as_mapping*/
  0,                                  /* tp_hash      */
};

/* Create a variable linking object for use later */
SWIGRUNTIME(PyObject *)
SWIG_Python_newvarlink(void) {
  swig_varlinkobject *result = 0;
  result = PyMem_NEW(swig_varlinkobject,1);
  varlinktype.ob_type = &PyType_Type;    /* Patch varlinktype into a PyType */
  result->ob_type = &varlinktype;
  result->vars = 0;
  result->ob_refcnt = 0;
  Py_XINCREF((PyObject *) result);
  return ((PyObject*) result);
}

SWIGRUNTIME(void)
SWIG_Python_addvarlink(PyObject *p, char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
  swig_varlinkobject *v;
  swig_globalvar *gv;
  v= (swig_varlinkobject *) p;
  gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
  gv->name = (char *) malloc(strlen(name)+1);
  strcpy(gv->name,name);
  gv->get_attr = get_attr;
  gv->set_attr = set_attr;
  gv->next = v->vars;
  v->vars = gv;
}

/* Convert a pointer value */
SWIGRUNTIME(int)
SWIG_Python_ConvertPtr(PyObject *obj, void **ptr, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c = 0;
  static PyObject *SWIG_this = 0;
  int    newref = 0;
  PyObject  *pyobj = 0;

  if (!obj) return 0;
  if (obj == Py_None) {
    *ptr = 0;
    return 0;
  }
#ifdef SWIG_COBJECT_TYPES
  if (!(PyCObject_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyCObject_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  }  
  *ptr = PyCObject_AsVoidPtr(obj);
  c = (char *) PyCObject_GetDesc(obj);
  if (newref) Py_DECREF(obj);
  goto cobject;
#else
  if (!(PyString_Check(obj))) {
    if (!SWIG_this)
      SWIG_this = PyString_FromString("this");
    pyobj = obj;
    obj = PyObject_GetAttr(obj,SWIG_this);
    newref = 1;
    if (!obj) goto type_error;
    if (!PyString_Check(obj)) {
      Py_DECREF(obj);
      goto type_error;
    }
  } 
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) {
      if (newref) { Py_DECREF(obj); }
      return 0;
    } else {
      if (newref) { Py_DECREF(obj); }
      goto type_error;
    }
  }
  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (newref) { Py_DECREF(obj); }
#endif

#ifdef SWIG_COBJECT_TYPES
cobject:
#endif

  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
    *ptr = SWIG_TypeCast(tc,(void*) *ptr);
  }

  if ((pyobj) && (flags & SWIG_POINTER_DISOWN)) {
    PyObject *zero = PyInt_FromLong(0);
    PyObject_SetAttrString(pyobj,(char*)"thisown",zero);
    Py_DECREF(zero);
  }
  return 0;

type_error:
  if (flags & SWIG_POINTER_EXCEPTION) {
    if (ty && c) {
      char *temp = (char *) malloc(64+strlen(ty->name)+strlen(c));
      sprintf(temp,"Type error. Got %s, expected %s", c, ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME(void *)
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int argnum, int flags) {
  void *result;
  SWIG_Python_ConvertPtr(obj, &result, ty, flags | SWIG_POINTER_EXCEPTION);
  return result;
}

/* Convert a packed value value */
SWIGRUNTIME(int)
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, int sz, swig_type_info *ty, int flags) {
  swig_type_info *tc;
  char  *c = 0;

  if ((!obj) || (!PyString_Check(obj))) goto type_error;
  c = PyString_AsString(obj);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return 0;

type_error:

  if (flags) {
    if (ty && c) {
      char *temp = (char *) malloc(64+strlen(ty->name)+strlen(c));
      sprintf(temp,"Type error. Got %s, expected %s", c, ty->name);
      PyErr_SetString(PyExc_TypeError, temp);
      free((char *) temp);
    } else {
      PyErr_SetString(PyExc_TypeError,"Expected a pointer");
    }
  }
  return -1;
}

/* Create a new pointer object */
SWIGRUNTIME(PyObject *)
SWIG_Python_NewPointerObj(void *ptr, swig_type_info *type, int own) {
  PyObject *robj;
  if (!ptr) {
    Py_INCREF(Py_None);
    return Py_None;
  }
#ifdef SWIG_COBJECT_TYPES
  robj = PyCObject_FromVoidPtrAndDesc((void *) ptr, (char *) type->name, NULL);
#else
  {
    char result[1024];
    char *r = result;
    *(r++) = '_';
    r = SWIG_PackData(r,&ptr,sizeof(void *));
    strcpy(r,type->name);
    robj = PyString_FromString(result);
  }
#endif
  if (!robj || (robj == Py_None)) return robj;
  if (type->clientdata) {
    PyObject *inst;
    PyObject *args = Py_BuildValue((char*)"(O)", robj);
    Py_DECREF(robj);
    inst = PyObject_CallObject((PyObject *) type->clientdata, args);
    Py_DECREF(args);
    if (inst) {
      if (own) {
        PyObject *n = PyInt_FromLong(1);
        PyObject_SetAttrString(inst,(char*)"thisown",n);
        Py_DECREF(n);
      }
      robj = inst;
    }
  }
  return robj;
}

SWIGRUNTIME(PyObject *)
SWIG_Python_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return PyString_FromString(result);
}

/* Install Constants */
SWIGRUNTIME(void)
SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
  int i;
  PyObject *obj;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_PY_INT:
      obj = PyInt_FromLong(constants[i].lvalue);
      break;
    case SWIG_PY_FLOAT:
      obj = PyFloat_FromDouble(constants[i].dvalue);
      break;
    case SWIG_PY_STRING:
      obj = PyString_FromString((char *) constants[i].pvalue);
      break;
    case SWIG_PY_POINTER:
      obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
      break;
    case SWIG_PY_BINARY:
      obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
      break;
    default:
      obj = 0;
      break;
    }
    if (obj) {
      PyDict_SetItemString(d,constants[i].name,obj);
      Py_DECREF(obj);
    }
  }
}

#endif

/* Contract support */

#define SWIG_contract_assert(expr, msg) if (!(expr)) { PyErr_SetString(PyExc_RuntimeError, (char *) msg ); goto fail; } else

#ifdef __cplusplus
}
#endif


/* -------- TYPES TABLE (BEGIN) -------- */

#define  SWIGTYPE_p_PackageFile swig_types[0] 
#define  SWIGTYPE_p_pkgCache__PackageFile swig_types[1] 
#define  SWIGTYPE_p_pkgAcquire__UriIterator swig_types[2] 
#define  SWIGTYPE_p_pkgCache__VerFileIterator swig_types[3] 
#define  SWIGTYPE_p_PkgFileIterator swig_types[4] 
#define  SWIGTYPE_p_pkgCache__PrvIterator swig_types[5] 
#define  SWIGTYPE_p_pkgCache__DepIterator swig_types[6] 
#define  SWIGTYPE_p_VerFileIterator swig_types[7] 
#define  SWIGTYPE_p_pkgCache__VerIterator swig_types[8] 
#define  SWIGTYPE_p_PrvIterator swig_types[9] 
#define  SWIGTYPE_p_pkgCache__PkgIterator swig_types[10] 
#define  SWIGTYPE_p_pkgCache__PkgFileIterator swig_types[11] 
#define  SWIGTYPE_p_VerIterator swig_types[12] 
#define  SWIGTYPE_p_PkgIterator swig_types[13] 
#define  SWIGTYPE_p_DepIterator swig_types[14] 
#define  SWIGTYPE_p_pkgSourceList__const_iterator swig_types[15] 
#define  SWIGTYPE_p_Configuration__Item swig_types[16] 
#define  SWIGTYPE_p_pkgCache__Header swig_types[17] 
#define  SWIGTYPE_p_Header swig_types[18] 
#define  SWIGTYPE_p_pkgPolicy swig_types[19] 
#define  SWIGTYPE_p_Policy swig_types[20] 
#define  SWIGTYPE_p_Lua swig_types[21] 
#define  SWIGTYPE_p_Configuration swig_types[22] 
#define  SWIGTYPE_p_pkgAcqIndexRel swig_types[23] 
#define  SWIGTYPE_p_pkgAcquire swig_types[24] 
#define  SWIGTYPE_p_map_ptrloc swig_types[25] 
#define  SWIGTYPE_p_Dependency swig_types[26] 
#define  SWIGTYPE_p_pkgCache__Dependency swig_types[27] 
#define  SWIGTYPE_p_GlobalError swig_types[28] 
#define  SWIGTYPE_p_pkgAcqIndex swig_types[29] 
#define  SWIGTYPE_p_LuaCacheControl swig_types[30] 
#define  SWIGTYPE_p_std__vectorTpkgCache__Package_p_t swig_types[31] 
#define  SWIGTYPE_p_StateCache swig_types[32] 
#define  SWIGTYPE_p_pkgDepCache__StateCache swig_types[33] 
#define  SWIGTYPE_p_Item swig_types[34] 
#define  SWIGTYPE_p_void swig_types[35] 
#define  SWIGTYPE_p_pkgAcquire__Item swig_types[36] 
#define  SWIGTYPE_p_MMap swig_types[37] 
#define  SWIGTYPE_p_std__vectorTchar_const_p_t swig_types[38] 
#define  SWIGTYPE_p_lua_State swig_types[39] 
#define  SWIGTYPE_p_pkgRecords__Parser swig_types[40] 
#define  SWIGTYPE_p_p_pkgCache__Version swig_types[41] 
#define  SWIGTYPE_p_p_Version swig_types[42] 
#define  SWIGTYPE_p_pkgCache__Version swig_types[43] 
#define  SWIGTYPE_p_Version swig_types[44] 
#define  SWIGTYPE_p_std__vectorTpkgIndexFile_p_t swig_types[45] 
#define  SWIGTYPE_p_time_t swig_types[46] 
#define  SWIGTYPE_p_p_pkgIndexFile swig_types[47] 
#define  SWIGTYPE_p_pkgProblemResolver swig_types[48] 
#define  SWIGTYPE_p_pkgAcqArchive swig_types[49] 
#define  SWIGTYPE_p_std__vectorTstd__string_t swig_types[50] 
#define  SWIGTYPE_p_p_char swig_types[51] 
#define  SWIGTYPE_p_pkgAcquireStatusDumb swig_types[52] 
#define  SWIGTYPE_p_pkgCacheFile swig_types[53] 
#define  SWIGTYPE_p_pkgAcquire__ItemDesc swig_types[54] 
#define  SWIGTYPE_p_pkgAcquireStatus swig_types[55] 
#define  SWIGTYPE_lua_CFunction swig_types[56] 
#define  SWIGTYPE_p_pkgDepCache swig_types[57] 
#define  SWIGTYPE_p_DynamicMMap__Pool swig_types[58] 
#define  SWIGTYPE_p_pkgPackageManager swig_types[59] 
#define  SWIGTYPE_p_OpTextProgress swig_types[60] 
#define  SWIGTYPE_p_OpProgress swig_types[61] 
#define  SWIGTYPE_p_ROpPyProgress swig_types[62] 
#define  SWIGTYPE_p_Provides swig_types[63] 
#define  SWIGTYPE_p_pkgCache__Provides swig_types[64] 
#define  SWIGTYPE_p_pkgRepository swig_types[65] 
#define  SWIGTYPE_p_std__ostream swig_types[66] 
#define  SWIGTYPE_p_pkgAcqFile swig_types[67] 
#define  SWIGTYPE_p_pkgSourceList swig_types[68] 
#define  SWIGTYPE_p_string swig_types[69] 
#define  SWIGTYPE_p_p_pkgVersioningSystem swig_types[70] 
#define  SWIGTYPE_p_pkgSystem swig_types[71] 
#define  SWIGTYPE_p_p_pkgSystem swig_types[72] 
#define  SWIGTYPE_p_pkgVersioningSystem swig_types[73] 
#define  SWIGTYPE_p_VerFile swig_types[74] 
#define  SWIGTYPE_p_pkgCache__VerFile swig_types[75] 
#define  SWIGTYPE_p_pkgAcquire__MethodConfig swig_types[76] 
#define  SWIGTYPE_p_Package swig_types[77] 
#define  SWIGTYPE_p_pkgCache__Package swig_types[78] 
#define  SWIGTYPE_p_unsigned_char swig_types[79] 
#define  SWIGTYPE_p_pkgRecords swig_types[80] 
#define  SWIGTYPE_p_pkgAcquire__Worker swig_types[81] 
#define  SWIGTYPE_p_pkgCache swig_types[82] 
#define  SWIGTYPE_p_pkgCache__StringItem swig_types[83] 
static swig_type_info *swig_types[85];

/* -------- TYPES TABLE (END) -------- */


/*-----------------------------------------------
              @(target):= _apt.so
  ------------------------------------------------*/
#define SWIG_init    init_apt

#define SWIG_name    "_apt"

#define  SWIG_MemoryError    1
#define  SWIG_IOError        2
#define  SWIG_RuntimeError   3
#define  SWIG_IndexError     4
#define  SWIG_TypeError      5
#define  SWIG_DivisionByZero 6
#define  SWIG_OverflowError  7
#define  SWIG_SyntaxError    8
#define  SWIG_ValueError     9
#define  SWIG_SystemError   10
#define  SWIG_UnknownError  99


static void SWIG_exception_(int code, const char *msg) {
  switch(code) {
  case SWIG_MemoryError:
    PyErr_SetString(PyExc_MemoryError,msg);
    break;
  case SWIG_IOError:
    PyErr_SetString(PyExc_IOError,msg);
    break;
  case SWIG_RuntimeError:
    PyErr_SetString(PyExc_RuntimeError,msg);
    break;
  case SWIG_IndexError:
    PyErr_SetString(PyExc_IndexError,msg);
    break;
  case SWIG_TypeError:
    PyErr_SetString(PyExc_TypeError,msg);
    break;
  case SWIG_DivisionByZero:
    PyErr_SetString(PyExc_ZeroDivisionError,msg);
    break;
  case SWIG_OverflowError:
    PyErr_SetString(PyExc_OverflowError,msg);
    break;
  case SWIG_SyntaxError:
    PyErr_SetString(PyExc_SyntaxError,msg);
    break;
  case SWIG_ValueError:
    PyErr_SetString(PyExc_ValueError,msg);
    break;
  case SWIG_SystemError:
    PyErr_SetString(PyExc_SystemError,msg);
    break;
  default:
    PyErr_SetString(PyExc_RuntimeError,msg);
    break;
  }
}

#define SWIG_exception(a,b) { SWIG_exception_(a,b); SWIG_fail; }


#include <string>


#include <string>

PyObject* SwigInt_FromBool(bool b) {
    return PyInt_FromLong(b ? 1L : 0L);
}
double SwigNumber_Check(PyObject* o) {
    return PyFloat_Check(o) || PyInt_Check(o) || PyLong_Check(o);
}
double SwigNumber_AsDouble(PyObject* o) {
    return PyFloat_Check(o) ? PyFloat_AsDouble(o) 
        : (PyInt_Check(o) ?   double(PyInt_AsLong(o))
                            : double(PyLong_AsLong(o)));
}
PyObject* SwigString_FromString(const std::string& s) {
    return PyString_FromStringAndSize(s.data(),s.size());
}
std::string SwigString_AsString(PyObject* o) {
    return std::string(PyString_AsString(o));
}


#include <vector>
#include <algorithm>
#include <stdexcept>


#include <apt-pkg/init.h>
#include <apt-pkg/pkgcache.h>
#include <apt-pkg/depcache.h>
#include <apt-pkg/cachefile.h>
#include <apt-pkg/mmap.h>
#include <apt-pkg/cacheiterators.h>
#include <apt-pkg/algorithms.h>
#include <apt-pkg/pkgsystem.h>
#include <apt-pkg/contrib/configuration.h>
#include <apt-pkg/contrib/progress.h>
#include <apt-pkg/version.h>
#include <apt-pkg/pkgrecords.h>
#include <apt-pkg/acquire-item.h>
#include <apt-pkg/acquire.h>
#include <apt-pkg/packagemanager.h>
#include <apt-pkg/sourcelist.h>
#include <apt-pkg/contrib/error.h>
#include <apt-pkg/luaiface.h>

#include <string>
#include <time.h>


typedef pkgCache::VerIterator VerIterator;
typedef pkgCache::PkgIterator PkgIterator;
typedef pkgCache::DepIterator DepIterator;
typedef pkgCache::PrvIterator PrvIterator;
typedef pkgCache::PkgFileIterator PkgFileIterator;
typedef pkgCache::VerFileIterator VerFileIterator;
typedef pkgCache::Header Header;
typedef pkgCache::Package Package;
typedef pkgCache::PackageFile PackageFile;
typedef pkgCache::VerFile VerFile;
typedef pkgCache::Version Version;
typedef pkgCache::Dependency Dependency;
typedef pkgCache::Provides Provides;
typedef pkgCache::StringItem StringItem;
typedef pkgCache::Dep Dep;
typedef pkgCache::State State;
typedef pkgCache::Flag Flag;
typedef pkgDepCache::Policy Policy;
typedef pkgDepCache::StateCache StateCache;
typedef Configuration::Item Item;
typedef pkgRecords::Parser Parser;


inline bool pkgInit() 
{
   return pkgInitConfig(*_config) && pkgInitSystem(*_config,_system);
}


#define pkgAcquire_Item_DestFile_get(x) ((x)->DestFile.c_str())
#define pkgAcquire_Item_ErrorText_get(x) ((x)->ErrorText.c_str())


#define Configuration_Item_Tag_get(x) ((x)->Tag.c_str())
#define Configuration_Item_Value_get(x) ((x)->Value.c_str())
#define Configuration_Item_Tag_set(x,y) ((x)->Tag = (y))
#define Configuration_Item_Value_set(x,y) ((x)->Value = (y))

extern char const *pkgVersion;
extern char const *pkgLibVersion;
extern char const *pkgOS;
extern char const *pkgCPU;
bool pkgCache_PkgIterator___nonzero__(pkgCache::PkgIterator *self){ return self->end() == false; }
pkgCache::PkgIterator *pkgCache_PkgIterator_next(pkgCache::PkgIterator *self){  		if (self->end() == true) {  			PyErr_SetObject(PyExc_StopIteration, Py_None);  			return NULL;  		}  		pkgCache::PkgIterator *ret = new pkgCache::PkgIterator(*self);  		(*self)++;  		return ret;  	}
pkgCache::PkgIterator *pkgCache_PkgIterator___iter__(pkgCache::PkgIterator *self){ return new pkgCache::PkgIterator(*self); }
bool pkgCache_VerIterator___nonzero__(pkgCache::VerIterator *self){ return self->end() == false; }
pkgCache::VerIterator *pkgCache_VerIterator_next(pkgCache::VerIterator *self){  		if (self->end() == true) {  			PyErr_SetObject(PyExc_StopIteration, Py_None);  			return NULL;  		}  		pkgCache::VerIterator *ret = new pkgCache::VerIterator(*self);  		(*self)++;  		return ret;  	}
pkgCache::VerIterator *pkgCache_VerIterator___iter__(pkgCache::VerIterator *self){ return new pkgCache::VerIterator(*self); }
bool pkgCache_DepIterator___nonzero__(pkgCache::DepIterator *self){ return self->end() == false; }
pkgCache::DepIterator *pkgCache_DepIterator_next(pkgCache::DepIterator *self){  		if (self->end() == true) {  			PyErr_SetObject(PyExc_StopIteration, Py_None);  			return NULL;  		}  		pkgCache::DepIterator *ret = new pkgCache::DepIterator(*self);  		(*self)++;  		return ret;  	}
pkgCache::DepIterator *pkgCache_DepIterator___iter__(pkgCache::DepIterator *self){ return new pkgCache::DepIterator(*self); }
bool pkgCache_PrvIterator___nonzero__(pkgCache::PrvIterator *self){ return self->end() == false; }
pkgCache::PrvIterator *pkgCache_PrvIterator_next(pkgCache::PrvIterator *self){  		if (self->end() == true) {  			PyErr_SetObject(PyExc_StopIteration, Py_None);  			return NULL;  		}  		pkgCache::PrvIterator *ret = new pkgCache::PrvIterator(*self);  		(*self)++;  		return ret;  	}
pkgCache::PrvIterator *pkgCache_PrvIterator___iter__(pkgCache::PrvIterator *self){ return new pkgCache::PrvIterator(*self); }
bool pkgCache_PkgFileIterator___nonzero__(pkgCache::PkgFileIterator *self){ return self->end() == false; }
pkgCache::PkgFileIterator *pkgCache_PkgFileIterator_next(pkgCache::PkgFileIterator *self){  		if (self->end() == true) {  			PyErr_SetObject(PyExc_StopIteration, Py_None);  			return NULL;  		}  		pkgCache::PkgFileIterator *ret = new pkgCache::PkgFileIterator(*self);  		(*self)++;  		return ret;  	}
pkgCache::PkgFileIterator *pkgCache_PkgFileIterator___iter__(pkgCache::PkgFileIterator *self){ return new pkgCache::PkgFileIterator(*self); }
bool pkgCache_VerFileIterator___nonzero__(pkgCache::VerFileIterator *self){ return self->end() == false; }
pkgCache::VerFileIterator *pkgCache_VerFileIterator_next(pkgCache::VerFileIterator *self){  		if (self->end() == true) {  			PyErr_SetObject(PyExc_StopIteration, Py_None);  			return NULL;  		}  		pkgCache::VerFileIterator *ret = new pkgCache::VerFileIterator(*self);  		(*self)++;  		return ret;  	}
pkgCache::VerFileIterator *pkgCache_VerFileIterator___iter__(pkgCache::VerFileIterator *self){ return new pkgCache::VerFileIterator(*self); }
extern pkgSystem *_system;
extern Configuration *_config;
PyObject *pkgAcquire_ItemsIter(pkgAcquire *self){
	static swig_type_info *ItemDescr = NULL;
	PyObject *list, *o;
	pkgAcquire::ItemIterator I;
	if (!ItemDescr) {
		ItemDescr = SWIG_TypeQuery("pkgAcquire::Item *");
		assert(ItemDescr);
	}
	list = PyList_New(0);
	if (list == NULL)
		return NULL;
	for (I = self->ItemsBegin(); I != self->ItemsEnd(); I++) {
		o = SWIG_NewPointerObj((void *)(*I), ItemDescr, 0);
		if (!o || PyList_Append(list, o) == -1) {
			Py_XDECREF(o);
			Py_DECREF(list);
			return NULL;
	    	}
		Py_DECREF(o);
	}
	return list;
}

class pkgAcquireStatusDumb : public pkgAcquireStatus
{
   virtual bool MediaChange(string Media,string Drive) {};
};


class ROpPyProgress : public OpProgress {
	PyObject *PyObj;

	public:
	OpProgress::Op;
	OpProgress::SubOp;
	OpProgress::Percent;
	OpProgress::MajorChange;
	OpProgress::CheckChange;

	virtual void Update()
	{
		if (PyObject_HasAttrString(PyObj, "Update")) {
			PyObject *Ret;
			Ret = PyObject_CallMethod(PyObj, "Update", NULL);
			Py_XDECREF(Ret);
		}
	};

	virtual void Done()
	{
		if (PyObject_HasAttrString(PyObj, "Done")) {
			PyObject *Ret;
			Ret = PyObject_CallMethod(PyObj, "Done", NULL);
			Py_XDECREF(Ret);
		}
	};
	
	ROpPyProgress(PyObject *PyObj) : PyObj(PyObj) {Py_INCREF(PyObj);};
	~ROpPyProgress() {Py_DECREF(PyObj);};
};


#define ROpPyProgress_Op_get(x) ((x)->Op.c_str())
#define ROpPyProgress_Op_set(x,y) ((x)->Op = (y))
#define ROpPyProgress_SubOp_get(x) ((x)->SubOp.c_str())
#define ROpPyProgress_SubOp_set(x,y) ((x)->SubOp = (y))

#ifdef __cplusplus
extern "C" {
#endif
static PyObject *_wrap_pkgInit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bool result;
    
    if(!PyArg_ParseTuple(args,(char *)":pkgInit")) goto fail;
    result = (bool)pkgInit();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static int _wrap__error_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable _error is read-only.");
    return 1;
}


static PyObject *_wrap__error_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) _error, SWIGTYPE_p_GlobalError, 0);
    return pyobj;
}


static int _wrap__lua_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable _lua is read-only.");
    return 1;
}


static PyObject *_wrap__lua_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) _lua, SWIGTYPE_p_Lua, 0);
    return pyobj;
}


static int _wrap_pkgVersion_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable pkgVersion is read-only.");
    return 1;
}


static PyObject *_wrap_pkgVersion_get() {
    PyObject *pyobj;
    
    pyobj = pkgVersion ? PyString_FromString(pkgVersion) : Py_BuildValue((char*)"");
    return pyobj;
}


static int _wrap_pkgLibVersion_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable pkgLibVersion is read-only.");
    return 1;
}


static PyObject *_wrap_pkgLibVersion_get() {
    PyObject *pyobj;
    
    pyobj = pkgLibVersion ? PyString_FromString(pkgLibVersion) : Py_BuildValue((char*)"");
    return pyobj;
}


static int _wrap_pkgOS_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable pkgOS is read-only.");
    return 1;
}


static PyObject *_wrap_pkgOS_get() {
    PyObject *pyobj;
    
    pyobj = pkgOS ? PyString_FromString(pkgOS) : Py_BuildValue((char*)"");
    return pyobj;
}


static int _wrap_pkgCPU_set(PyObject *_val) {
    PyErr_SetString(PyExc_TypeError,"Variable pkgCPU is read-only.");
    return 1;
}


static PyObject *_wrap_pkgCPU_get() {
    PyObject *pyobj;
    
    pyobj = pkgCPU ? PyString_FromString(pkgCPU) : Py_BuildValue((char*)"");
    return pyobj;
}


static PyObject *_wrap_pkgInitConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgInitConfig",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)pkgInitConfig(*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgInitSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = 0 ;
    pkgSystem **arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgInitSystem",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)pkgInitSystem(*arg1,*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_HeaderP_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Header *arg2 = (pkgCache::Header *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_HeaderP_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->HeaderP = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_HeaderP_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Header *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_HeaderP_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::Header *) ((arg1)->HeaderP);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Header, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_PkgP_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Package *arg2 = (pkgCache::Package *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_PkgP_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->PkgP = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_PkgP_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Package *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_PkgP_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::Package *) ((arg1)->PkgP);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Package, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_VerFileP_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::VerFile *arg2 = (pkgCache::VerFile *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_VerFileP_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->VerFileP = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_VerFileP_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::VerFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_VerFileP_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::VerFile *) ((arg1)->VerFileP);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_PkgFileP_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::PackageFile *arg2 = (pkgCache::PackageFile *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_PkgFileP_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->PkgFileP = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_PkgFileP_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::PackageFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_PkgFileP_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::PackageFile *) ((arg1)->PkgFileP);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PackageFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_VerP_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Version *arg2 = (pkgCache::Version *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_VerP_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->VerP = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_VerP_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Version *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_VerP_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::Version *) ((arg1)->VerP);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Version, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_ProvideP_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Provides *arg2 = (pkgCache::Provides *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_ProvideP_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->ProvideP = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_ProvideP_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Provides *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_ProvideP_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::Provides *) ((arg1)->ProvideP);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Provides, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_DepP_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Dependency *arg2 = (pkgCache::Dependency *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_DepP_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->DepP = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_DepP_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Dependency *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_DepP_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::Dependency *) ((arg1)->DepP);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Dependency, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_StringItemP_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::StringItem *arg2 = (pkgCache::StringItem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_StringItemP_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__StringItem,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->StringItemP = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_StringItemP_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::StringItem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_StringItemP_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::StringItem *) ((arg1)->StringItemP);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__StringItem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_StrP_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:pkgCache_StrP_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg1->StrP) delete [] arg1->StrP;
        if (arg2) {
            arg1->StrP = (char *) (new char[strlen(arg2)+1]);
            strcpy((char *) arg1->StrP,arg2);
        } else {
            arg1->StrP = 0;
        }
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_StrP_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_StrP_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->StrP);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_ReMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_ReMap",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ReMap();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_Sync(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_Sync",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Sync();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_GetMap(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    MMap *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_GetMap",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        MMap &_result_ref = (arg1)->GetMap();
        result = (MMap *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_MMap, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_DataEnd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_DataEnd",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->DataEnd();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_Hash__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    string arg2 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_Hash",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (unsigned long)((pkgCache const *)arg1)->Hash(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_Hash__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    char *arg2 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:pkgCache_Hash",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((pkgCache const *)arg1)->Hash((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_Hash(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_pkgCache_Hash__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_pkgCache_Hash__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCache_Hash'");
    return NULL;
}


static PyObject *_wrap_pkgCache_Priority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    unsigned char arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_Priority",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)(arg1)->Priority(arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_FindPkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    string arg2 ;
    pkgCache::PkgIterator result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_FindPkg",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (arg1)->FindPkg(arg2);
    
    {
        pkgCache::PkgIterator * resultptr;
        resultptr = new pkgCache::PkgIterator((pkgCache::PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_pkgCache__PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_FindPackage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    char *arg2 ;
    pkgCache::Package *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:pkgCache_FindPackage",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::Package *)(arg1)->FindPackage((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Package, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::Header *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        pkgCache::Header &_result_ref = (arg1)->Head();
        result = (pkgCache::Header *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Header, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_PkgIter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::PkgIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_PkgIter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->PkgBegin();
    
    {
        pkgCache::PkgIterator * resultptr;
        resultptr = new pkgCache::PkgIterator((pkgCache::PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_pkgCache__PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_FileIter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgCache::PkgFileIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_FileIter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->FileBegin();
    
    {
        pkgCache::PkgFileIterator * resultptr;
        resultptr = new pkgCache::PkgFileIterator((pkgCache::PkgFileIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_pkgCache__PkgFileIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_VS_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgVersioningSystem *arg2 = (pkgVersioningSystem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCache_VS_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->VS = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_VS_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    pkgVersioningSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_VS_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgVersioningSystem *) ((arg1)->VS);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgVersioningSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_CompTypeDeb(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned char arg1 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_CompTypeDeb",&obj0)) goto fail;
    arg1 = (unsigned char) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)pkgCache::CompTypeDeb(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_CompType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned char arg1 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_CompType",&obj0)) goto fail;
    arg1 = (unsigned char) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)pkgCache::CompType(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCache_DepType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    unsigned char arg1 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCache_DepType",&obj0)) goto fail;
    arg1 = (unsigned char) PyInt_AsLong(obj0);
    if (PyErr_Occurred()) SWIG_fail;
    result = (char *)pkgCache::DepType(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    MMap *arg1 = (MMap *) 0 ;
    bool arg2 = (bool) true ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:new_pkgCache",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_MMap,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (pkgCache *)new pkgCache(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCache_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheHeader_Signature_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_Signature_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Signature = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_Signature_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_Signature_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->Signature);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_MajorVersion_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    short arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oh:pkgCacheHeader_MajorVersion_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->MajorVersion = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_MajorVersion_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_MajorVersion_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (short) ((arg1)->MajorVersion);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_MinorVersion_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    short arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oh:pkgCacheHeader_MinorVersion_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->MinorVersion = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_MinorVersion_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_MinorVersion_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (short) ((arg1)->MinorVersion);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_Dirty_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_Dirty_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Dirty = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_Dirty_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_Dirty_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->Dirty);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_HasFileDeps_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_HasFileDeps_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->HasFileDeps = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_HasFileDeps_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_HasFileDeps_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->HasFileDeps);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_OptionsHash_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_OptionsHash_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->OptionsHash = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_OptionsHash_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_OptionsHash_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->OptionsHash);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_HeaderSz_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_HeaderSz_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->HeaderSz = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_HeaderSz_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_HeaderSz_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->HeaderSz);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_PackageSz_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_PackageSz_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->PackageSz = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_PackageSz_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_PackageSz_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->PackageSz);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_PackageFileSz_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_PackageFileSz_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->PackageFileSz = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_PackageFileSz_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_PackageFileSz_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->PackageFileSz);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VersionSz_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_VersionSz_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->VersionSz = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VersionSz_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_VersionSz_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->VersionSz);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_DependencySz_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_DependencySz_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->DependencySz = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_DependencySz_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_DependencySz_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->DependencySz);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_ProvidesSz_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_ProvidesSz_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->ProvidesSz = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_ProvidesSz_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_ProvidesSz_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->ProvidesSz);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VerFileSz_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_VerFileSz_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->VerFileSz = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VerFileSz_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_VerFileSz_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->VerFileSz);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_PackageCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_PackageCount_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->PackageCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_PackageCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_PackageCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->PackageCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VersionCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_VersionCount_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->VersionCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VersionCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_VersionCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->VersionCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_DependsCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_DependsCount_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->DependsCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_DependsCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_DependsCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->DependsCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_PackageFileCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_PackageFileCount_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->PackageFileCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_PackageFileCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_PackageFileCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->PackageFileCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VerFileCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_VerFileCount_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->VerFileCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VerFileCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_VerFileCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->VerFileCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_ProvidesCount_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_ProvidesCount_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->ProvidesCount = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_ProvidesCount_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_ProvidesCount_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->ProvidesCount);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_FileList_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheHeader_FileList_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->FileList = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_FileList_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_FileList_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->FileList);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_StringList_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheHeader_StringList_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->StringList = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_StringList_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_StringList_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->StringList);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VerSysName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheHeader_VerSysName_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->VerSysName = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_VerSysName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_VerSysName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->VerSysName);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_Architecture_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheHeader_Architecture_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Architecture = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_Architecture_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_Architecture_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Architecture);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_MaxVerFileSize_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_MaxVerFileSize_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->MaxVerFileSize = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_MaxVerFileSize_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_MaxVerFileSize_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->MaxVerFileSize);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_Pools_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    DynamicMMap::Pool *arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_Pools_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_DynamicMMap__Pool,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        DynamicMMap::Pool *b = (DynamicMMap::Pool *) arg1->Pools;
        for (ii = 0; ii < 7; ii++) b[ii] = *((DynamicMMap::Pool *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_Pools_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    DynamicMMap::Pool *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_Pools_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (DynamicMMap::Pool *)(DynamicMMap::Pool *) ((arg1)->Pools);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_DynamicMMap__Pool, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_HashTable_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc *arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_HashTable_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_map_ptrloc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        int ii;
        map_ptrloc *b = (map_ptrloc *) arg1->HashTable;
        for (ii = 0; ii < 8*1048; ii++) b[ii] = *((map_ptrloc *) arg2 + ii);
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_HashTable_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    map_ptrloc *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheHeader_HashTable_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (map_ptrloc *)(map_ptrloc *) ((arg1)->HashTable);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_map_ptrloc, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheHeader_CheckSizes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    Header *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheHeader_CheckSizes",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::Header const *)arg1)->CheckSizes(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheHeader(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheHeader")) goto fail;
    result = (pkgCache::Header *)new pkgCache::Header();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Header, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheHeader(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Header *arg1 = (pkgCache::Header *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheHeader",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Header,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheHeader_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__Header, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCachePackage_Name_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackage_Name_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Name = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_Name_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_Name_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Name);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_VersionList_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackage_VersionList_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->VersionList = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_VersionList_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_VersionList_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->VersionList);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_CurrentVer_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackage_CurrentVer_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->CurrentVer = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_CurrentVer_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_CurrentVer_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->CurrentVer);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_Section_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackage_Section_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Section = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_Section_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_Section_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Section);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_NextPackage_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackage_NextPackage_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->NextPackage = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_NextPackage_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_NextPackage_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->NextPackage);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_RevDepends_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackage_RevDepends_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->RevDepends = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_RevDepends_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_RevDepends_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->RevDepends);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_ProvidesList_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackage_ProvidesList_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ProvidesList = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_ProvidesList_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_ProvidesList_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->ProvidesList);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_SelectedState_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePackage_SelectedState_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->SelectedState = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_SelectedState_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_SelectedState_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->SelectedState);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_InstState_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePackage_InstState_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->InstState = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_InstState_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_InstState_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->InstState);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_CurrentState_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePackage_CurrentState_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->CurrentState = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_CurrentState_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_CurrentState_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->CurrentState);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_ID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePackage_ID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->ID = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_ID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_ID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->ID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_Flags_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePackage_Flags_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Flags = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackage_Flags_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackage_Flags_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->Flags);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePackage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCachePackage")) goto fail;
    result = (pkgCache::Package *)new pkgCache::Package();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Package, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCachePackage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Package *arg1 = (pkgCache::Package *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCachePackage",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCachePackage_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__Package, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCachePackageFile_FileName_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_FileName_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->FileName = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_FileName_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_FileName_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->FileName);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Archive_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_Archive_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Archive = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Archive_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_Archive_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Archive);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Component_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_Component_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Component = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Component_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_Component_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Component);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Version_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_Version_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Version = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Version_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_Version_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Version);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Origin_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_Origin_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Origin = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Origin_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_Origin_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Origin);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Label_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_Label_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Label = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Label_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_Label_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Label);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Architecture_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_Architecture_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Architecture = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Architecture_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_Architecture_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Architecture);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Site_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_Site_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Site = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Site_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_Site_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Site);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_IndexType_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_IndexType_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->IndexType = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_IndexType_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_IndexType_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->IndexType);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Size_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePackageFile_Size_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Size = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Size_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_Size_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->Size);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Flags_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePackageFile_Flags_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Flags = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_Flags_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_Flags_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->Flags);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_NextFile_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCachePackageFile_NextFile_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->NextFile = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_NextFile_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_NextFile_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->NextFile);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_ID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePackageFile_ID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->ID = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_ID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_ID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->ID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_mtime_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    time_t arg2 ;
    time_t *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePackageFile_mtime_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_time_t,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if (arg1) (arg1)->mtime = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePackageFile_mtime_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    time_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePackageFile_mtime_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->mtime);
    
    {
        time_t * resultptr;
        resultptr = new time_t((time_t &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_time_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePackageFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCachePackageFile")) goto fail;
    result = (pkgCache::PackageFile *)new pkgCache::PackageFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PackageFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCachePackageFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PackageFile *arg1 = (pkgCache::PackageFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCachePackageFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCachePackageFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__PackageFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheVerFile_File_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *arg1 = (pkgCache::VerFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVerFile_File_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->File = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFile_File_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *arg1 = (pkgCache::VerFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFile_File_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->File);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFile_NextFile_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *arg1 = (pkgCache::VerFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVerFile_NextFile_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->NextFile = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFile_NextFile_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *arg1 = (pkgCache::VerFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFile_NextFile_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->NextFile);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFile_Offset_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *arg1 = (pkgCache::VerFile *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVerFile_Offset_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Offset = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFile_Offset_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *arg1 = (pkgCache::VerFile *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFile_Offset_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Offset);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFile_Size_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *arg1 = (pkgCache::VerFile *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVerFile_Size_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Size = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFile_Size_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *arg1 = (pkgCache::VerFile *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFile_Size_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->Size);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheVerFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheVerFile")) goto fail;
    result = (pkgCache::VerFile *)new pkgCache::VerFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheVerFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFile *arg1 = (pkgCache::VerFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheVerFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheVerFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__VerFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheVersion_VerStr_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_VerStr_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->VerStr = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_VerStr_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_VerStr_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->VerStr);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Section_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_Section_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Section = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Section_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_Section_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Section);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Arch_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_Arch_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Arch = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Arch_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_Arch_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Arch);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_FileList_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_FileList_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->FileList = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_FileList_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_FileList_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->FileList);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_NextVer_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_NextVer_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->NextVer = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_NextVer_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_NextVer_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->NextVer);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_DependsList_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_DependsList_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->DependsList = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_DependsList_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_DependsList_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->DependsList);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_ParentPkg_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_ParentPkg_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ParentPkg = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_ParentPkg_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_ParentPkg_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->ParentPkg);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_ProvidesList_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_ProvidesList_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ProvidesList = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_ProvidesList_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_ProvidesList_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->ProvidesList);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Size_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_Size_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Size = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Size_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_Size_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Size);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_InstalledSize_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheVersion_InstalledSize_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->InstalledSize = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_InstalledSize_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_InstalledSize_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->InstalledSize);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Hash_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVersion_Hash_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Hash = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Hash_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_Hash_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->Hash);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_ID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVersion_ID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->ID = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_ID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_ID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->ID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Priority_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVersion_Priority_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Priority = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVersion_Priority_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVersion_Priority_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->Priority);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheVersion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheVersion")) goto fail;
    result = (pkgCache::Version *)new pkgCache::Version();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Version, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheVersion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Version *arg1 = (pkgCache::Version *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheVersion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheVersion_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__Version, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheDependency_Version_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheDependency_Version_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Version = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_Version_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDependency_Version_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Version);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_Package_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheDependency_Package_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Package = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_Package_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDependency_Package_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Package);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_NextDepends_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheDependency_NextDepends_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->NextDepends = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_NextDepends_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDependency_NextDepends_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->NextDepends);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_NextRevDepends_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheDependency_NextRevDepends_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->NextRevDepends = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_NextRevDepends_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDependency_NextRevDepends_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->NextRevDepends);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_ParentVer_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheDependency_ParentVer_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ParentVer = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_ParentVer_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDependency_ParentVer_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->ParentVer);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_ID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheDependency_ID_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ID = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_ID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDependency_ID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->ID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_Type_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheDependency_Type_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Type = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_Type_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDependency_Type_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->Type);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_CompareOp_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheDependency_CompareOp_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->CompareOp = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDependency_CompareOp_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDependency_CompareOp_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->CompareOp);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheDependency(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheDependency")) goto fail;
    result = (pkgCache::Dependency *)new pkgCache::Dependency();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Dependency, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheDependency(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Dependency *arg1 = (pkgCache::Dependency *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheDependency",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheDependency_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__Dependency, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheProvides_ParentPkg_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheProvides_ParentPkg_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ParentPkg = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheProvides_ParentPkg_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheProvides_ParentPkg_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->ParentPkg);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheProvides_Version_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheProvides_Version_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Version = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheProvides_Version_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheProvides_Version_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->Version);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheProvides_ProvideVersion_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheProvides_ProvideVersion_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->ProvideVersion = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheProvides_ProvideVersion_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheProvides_ProvideVersion_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->ProvideVersion);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheProvides_NextProvides_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheProvides_NextProvides_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->NextProvides = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheProvides_NextProvides_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheProvides_NextProvides_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->NextProvides);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheProvides_NextPkgProv_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheProvides_NextPkgProv_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->NextPkgProv = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheProvides_NextPkgProv_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheProvides_NextPkgProv_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->NextPkgProv);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheProvides(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheProvides")) goto fail;
    result = (pkgCache::Provides *)new pkgCache::Provides();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Provides, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheProvides(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::Provides *arg1 = (pkgCache::Provides *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheProvides",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheProvides_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__Provides, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheStringItem_String_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::StringItem *arg1 = (pkgCache::StringItem *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheStringItem_String_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__StringItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->String = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheStringItem_String_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::StringItem *arg1 = (pkgCache::StringItem *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheStringItem_String_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__StringItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->String);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheStringItem_NextItem_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::StringItem *arg1 = (pkgCache::StringItem *) 0 ;
    map_ptrloc arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgCacheStringItem_NextItem_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__StringItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->NextItem = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheStringItem_NextItem_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::StringItem *arg1 = (pkgCache::StringItem *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheStringItem_NextItem_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__StringItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((arg1)->NextItem);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheStringItem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::StringItem *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheStringItem")) goto fail;
    result = (pkgCache::StringItem *)new pkgCache::StringItem();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__StringItem, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheStringItem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::StringItem *arg1 = (pkgCache::StringItem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheStringItem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__StringItem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheStringItem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__StringItem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgDepCache_BuildGroupOrs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    VerIterator *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache_BuildGroupOrs",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->BuildGroupOrs((VerIterator const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_UpdateVerState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    PkgIterator arg2 ;
    PkgIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache_UpdateVerState",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->UpdateVerState(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    Header *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Header &_result_ref = (arg1)->Head();
        result = (Header *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Header, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_PkgIter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    PkgIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_PkgIter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->PkgBegin();
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_FindPkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    string *arg2 = 0 ;
    PkgIterator result;
    std::string temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache_FindPkg",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1),
            PyString_Size(obj1));
            arg2 = &temp2;
        } else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    result = (arg1)->FindPkg((string const &)*arg2);
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_GetCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_GetCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        pkgCache &_result_ref = (arg1)->GetCache();
        result = (pkgCache *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_VS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    pkgVersioningSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_VS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        pkgVersioningSystem &_result_ref = (arg1)->VS();
        result = (pkgVersioningSystem *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgVersioningSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_GetCandidateVer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    PkgIterator arg2 ;
    VerIterator result;
    PkgIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache_GetCandidateVer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (arg1)->GetCandidateVer(arg2);
    
    {
        VerIterator * resultptr;
        resultptr = new VerIterator((VerIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_IsImportantDep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    DepIterator arg2 ;
    bool result;
    DepIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache_IsImportantDep",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_DepIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)(arg1)->IsImportantDep(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_GetPolicy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    Policy *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_GetPolicy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Policy &_result_ref = (arg1)->GetPolicy();
        result = (Policy *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Policy, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_GetPkgPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    pkgCache::PkgIterator *arg2 = 0 ;
    short result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache_GetPkgPriority",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (short)(arg1)->GetPkgPriority((pkgCache::PkgIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache___getitem____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    PkgIterator *arg2 = 0 ;
    StateCache *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache___getitem__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        StateCache &_result_ref = (arg1)->operator []((PkgIterator const &)*arg2);
        result = (StateCache *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_StateCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache___getitem____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    DepIterator *arg2 = 0 ;
    unsigned char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache___getitem__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        unsigned char &_result_ref = (arg1)->operator []((DepIterator const &)*arg2);
        result = (unsigned char *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_unsigned_char, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache___getitem__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgDepCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PkgIterator, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_pkgDepCache___getitem____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgDepCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_DepIterator, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_pkgDepCache___getitem____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgDepCache___getitem__'");
    return NULL;
}


static PyObject *_wrap_pkgDepCache_MarkKeep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:pkgDepCache_MarkKeep",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->MarkKeep((PkgIterator const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_MarkDelete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:pkgDepCache_MarkDelete",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->MarkDelete((PkgIterator const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_MarkInstall(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool arg3 = (bool) true ;
    unsigned long arg4 = (unsigned long) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:pkgDepCache_MarkInstall",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (unsigned long) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (arg1)->MarkInstall((PkgIterator const &)*arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_SetReInstall(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgDepCache_SetReInstall",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetReInstall((PkgIterator const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_SetCandidateVersion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    VerIterator arg2 ;
    VerIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache_SetCandidateVersion",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_VerIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->SetCandidateVersion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_Update(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    OpProgress *arg2 = (OpProgress *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:pkgDepCache_Update",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (arg1)->Update(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_UsrSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_UsrSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)(arg1)->UsrSize();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_DebSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_DebSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)(arg1)->DebSize();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_DelCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_DelCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(arg1)->DelCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_KeepCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_KeepCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(arg1)->KeepCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_InstCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_InstCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(arg1)->InstCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_BrokenCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_BrokenCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(arg1)->BrokenCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_BadCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCache_BadCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(arg1)->BadCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCache_Init(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    OpProgress *arg2 = (OpProgress *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCache_Init",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Init(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgDepCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = (pkgCache *) 0 ;
    Policy *arg2 = (Policy *) 0 ;
    pkgDepCache *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:new_pkgDepCache",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Policy,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (pkgDepCache *)new pkgDepCache(arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgDepCache, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgDepCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgDepCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgDepCache_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgDepCache, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgDepCacheStateCache_CandVersion_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_CandVersion_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->CandVersion);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_CurVersion_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_CurVersion_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->CurVersion);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_CandidateVer_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    Version *arg2 = (Version *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCacheStateCache_CandidateVer_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Version,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->CandidateVer = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_CandidateVer_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    Version *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_CandidateVer_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Version *) ((arg1)->CandidateVer);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Version, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_InstallVer_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    Version *arg2 = (Version *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCacheStateCache_InstallVer_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Version,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->InstallVer = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_InstallVer_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    Version *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_InstallVer_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Version *) ((arg1)->InstallVer);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Version, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Flags_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCacheStateCache_Flags_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Flags = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Flags_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Flags_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->Flags);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_iFlags_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    unsigned short arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCacheStateCache_iFlags_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned short) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->iFlags = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_iFlags_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_iFlags_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((arg1)->iFlags);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Status_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    signed char arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ob:pkgDepCacheStateCache_Status_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Status = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Status_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    signed char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Status_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (signed char) ((arg1)->Status);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Mode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCacheStateCache_Mode_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Mode = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Mode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Mode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->Mode);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_DepState_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    unsigned char arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCacheStateCache_DepState_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned char) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->DepState = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_DepState_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_DepState_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((arg1)->DepState);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_StripEpoch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:pkgDepCacheStateCache_StripEpoch",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->StripEpoch((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Update(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    PkgIterator arg2 ;
    pkgCache *arg3 = 0 ;
    PkgIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgDepCacheStateCache_Update",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Update(arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_NewInstall(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_NewInstall",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->NewInstall();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Delete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Delete",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->Delete();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Keep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Keep",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->Keep();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Upgrade(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Upgrade",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->Upgrade();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Upgradable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Upgradable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->Upgradable();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Downgrade(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Downgrade",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->Downgrade();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Held(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Held",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->Held();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_NowBroken(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_NowBroken",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->NowBroken();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_InstBroken(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_InstBroken",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->InstBroken();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_Install(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDepCacheStateCache_Install",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgDepCache::StateCache const *)arg1)->Install();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_InstVerIter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    pkgCache *arg2 = 0 ;
    VerIterator result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCacheStateCache_InstVerIter",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->InstVerIter(*arg2);
    
    {
        VerIterator * resultptr;
        resultptr = new VerIterator((VerIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgDepCacheStateCache_CandidateVerIter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    pkgCache *arg2 = 0 ;
    VerIterator result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgDepCacheStateCache_CandidateVerIter",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (arg1)->CandidateVerIter(*arg2);
    
    {
        VerIterator * resultptr;
        resultptr = new VerIterator((VerIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgDepCacheStateCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgDepCacheStateCache")) goto fail;
    result = (pkgDepCache::StateCache *)new pkgDepCache::StateCache();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgDepCache__StateCache, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgDepCacheStateCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache::StateCache *arg1 = (pkgDepCache::StateCache *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgDepCacheStateCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache__StateCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgDepCacheStateCache_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgDepCache__StateCache, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCachePkgIterator___nonzero__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator___nonzero__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)pkgCache_PkgIterator___nonzero__(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    pkgCache::PkgIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        result = (pkgCache::PkgIterator *)pkgCache_PkgIterator_next(arg1);
        
        /* Pass ahead the StopIteration exception. */
        if (!result) return NULL;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PkgIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator___iter__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    pkgCache::PkgIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator___iter__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::PkgIterator *)pkgCache_PkgIterator___iter__(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PkgIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_end(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_end",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgCache::PkgIterator const *)arg1)->end();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePkgIterator___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::PkgIterator const *)arg1)->operator ==((PkgIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePkgIterator___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::PkgIterator const *)arg1)->operator !=((PkgIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator___deref____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    Package *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Package *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Package, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator___deref____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    Package *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Package *)((pkgCache::PkgIterator const *)arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Package, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator___deref__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__PkgIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCachePkgIterator___deref____SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__PkgIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCachePkgIterator___deref____SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCachePkgIterator___deref__'");
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator___mul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    Package *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Package const &_result_ref = ((pkgCache::PkgIterator const *)arg1)->operator *();
        result = (Package *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Package, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_Package(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    Package *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_Package",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Package *)(arg1)->operator Package *();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Package, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_Cache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_Cache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache *)(arg1)->Cache();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_Name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_Name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgIterator const *)arg1)->Name();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_Section(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_Section",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgIterator const *)arg1)->Section();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_Purge(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_Purge",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgCache::PkgIterator const *)arg1)->Purge();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_VersionList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    VerIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_VersionList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::PkgIterator const *)arg1)->VersionList();
    
    {
        VerIterator * resultptr;
        resultptr = new VerIterator((VerIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_CurrentVer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    VerIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_CurrentVer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::PkgIterator const *)arg1)->CurrentVer();
    
    {
        VerIterator * resultptr;
        resultptr = new VerIterator((VerIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_RevDependsList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    DepIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_RevDependsList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::PkgIterator const *)arg1)->RevDependsList();
    
    {
        DepIterator * resultptr;
        resultptr = new DepIterator((DepIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_DepIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_ProvidesList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    SwigValueWrapper< PrvIterator > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_ProvidesList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::PkgIterator const *)arg1)->ProvidesList();
    
    {
        PrvIterator * resultptr;
        resultptr = new PrvIterator((PrvIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PrvIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_Index(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_Index",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((pkgCache::PkgIterator const *)arg1)->Index();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_State(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_State",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((pkgCache::PkgIterator const *)arg1)->State();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePkgIterator__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    Package *arg2 = (Package *) 0 ;
    pkgCache::PkgIterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_pkgCachePkgIterator",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::PkgIterator *)new pkgCache::PkgIterator(*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PkgIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePkgIterator__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCachePkgIterator")) goto fail;
    result = (pkgCache::PkgIterator *)new pkgCache::PkgIterator();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PkgIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePkgIterator(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_pkgCachePkgIterator__SWIG_1(self,args);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Package, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_pkgCachePkgIterator__SWIG_0(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_pkgCachePkgIterator'");
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_NextPackage_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_NextPackage_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->NextPackage);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_RevDepends_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_RevDepends_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->RevDepends);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_SelectedState_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_SelectedState_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((*arg1)->SelectedState);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_InstState_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_InstState_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((*arg1)->InstState);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_CurrentState_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_CurrentState_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((*arg1)->CurrentState);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_ID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_ID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((*arg1)->ID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgIterator_Flags_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgIterator_Flags_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((*arg1)->Flags);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCachePkgIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgIterator *arg1 = (pkgCache::PkgIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCachePkgIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCachePkgIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__PkgIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheVerIterator___nonzero__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator___nonzero__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)pkgCache_VerIterator___nonzero__(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    pkgCache::VerIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        result = (pkgCache::VerIterator *)pkgCache_VerIterator_next(arg1);
        
        /* Pass ahead the StopIteration exception. */
        if (!result) return NULL;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator___iter__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    pkgCache::VerIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator___iter__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::VerIterator *)pkgCache_VerIterator___iter__(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_end(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_end",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgCache::VerIterator const *)arg1)->end();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_assign(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    VerIterator *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVerIterator_assign",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->operator =((VerIterator const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    VerIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVerIterator___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::VerIterator const *)arg1)->operator ==((VerIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    VerIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVerIterator___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::VerIterator const *)arg1)->operator !=((VerIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_CompareVer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    VerIterator *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVerIterator_CompareVer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)((pkgCache::VerIterator const *)arg1)->CompareVer((VerIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator___deref____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    Version *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Version *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Version, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator___deref____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    Version *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Version *)((pkgCache::VerIterator const *)arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Version, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator___deref__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__VerIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheVerIterator___deref____SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__VerIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheVerIterator___deref____SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCacheVerIterator___deref__'");
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator___mul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    Version *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Version &_result_ref = (arg1)->operator *();
        result = (Version *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Version, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator___mul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    Version *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Version const &_result_ref = ((pkgCache::VerIterator const *)arg1)->operator *();
        result = (Version *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Version, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator___mul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__VerIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheVerIterator___mul____SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__VerIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheVerIterator___mul____SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCacheVerIterator___mul__'");
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Version(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    Version *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Version",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Version *)(arg1)->operator Version *();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Version, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Cache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Cache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache *)(arg1)->Cache();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_VerStr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_VerStr",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::VerIterator const *)arg1)->VerStr();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Section(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Section",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::VerIterator const *)arg1)->Section();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Arch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Arch",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::VerIterator const *)arg1)->Arch();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_ParentPkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    PkgIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_ParentPkg",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::VerIterator const *)arg1)->ParentPkg();
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_DependsList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    DepIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_DependsList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::VerIterator const *)arg1)->DependsList();
    
    {
        DepIterator * resultptr;
        resultptr = new DepIterator((DepIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_DepIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_ProvidesList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    SwigValueWrapper< PrvIterator > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_ProvidesList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::VerIterator const *)arg1)->ProvidesList();
    
    {
        PrvIterator * resultptr;
        resultptr = new PrvIterator((PrvIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PrvIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_FileList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    VerFileIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_FileList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::VerIterator const *)arg1)->FileList();
    
    {
        VerFileIterator * resultptr;
        resultptr = new VerFileIterator((VerFileIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerFileIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Index(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Index",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((pkgCache::VerIterator const *)arg1)->Index();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Downloadable(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Downloadable",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgCache::VerIterator const *)arg1)->Downloadable();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_PriorityType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_PriorityType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->PriorityType();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_RelStr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_RelStr",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->RelStr();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Automatic(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Automatic",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgCache::VerIterator const *)arg1)->Automatic();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_NewestFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    VerFileIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_NewestFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::VerIterator const *)arg1)->NewestFile();
    
    {
        VerFileIterator * resultptr;
        resultptr = new VerFileIterator((VerFileIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerFileIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheVerIterator__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheVerIterator")) goto fail;
    result = (pkgCache::VerIterator *)new pkgCache::VerIterator();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheVerIterator__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    Version *arg2 = (Version *) 0 ;
    pkgCache::VerIterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:new_pkgCacheVerIterator",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (pkgCache::VerIterator *)new pkgCache::VerIterator(*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheVerIterator(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_pkgCacheVerIterator__SWIG_0(self,args);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_new_pkgCacheVerIterator__SWIG_1(self,args);
            }
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Version, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_pkgCacheVerIterator__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_pkgCacheVerIterator'");
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_NextVer_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_NextVer_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->NextVer);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Size_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Size_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->Size);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_InstalledSize_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_InstalledSize_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->InstalledSize);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Hash_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Hash_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((*arg1)->Hash);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_ID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_ID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((*arg1)->ID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerIterator_Priority_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerIterator_Priority_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((*arg1)->Priority);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheVerIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerIterator *arg1 = (pkgCache::VerIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheVerIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheVerIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__VerIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheDepIterator___nonzero__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator___nonzero__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)pkgCache_DepIterator___nonzero__(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    pkgCache::DepIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        result = (pkgCache::DepIterator *)pkgCache_DepIterator_next(arg1);
        
        /* Pass ahead the StopIteration exception. */
        if (!result) return NULL;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__DepIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator___iter__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    pkgCache::DepIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator___iter__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::DepIterator *)pkgCache_DepIterator___iter__(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__DepIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_end(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_end",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgCache::DepIterator const *)arg1)->end();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    DepIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheDepIterator___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::DepIterator const *)arg1)->operator ==((DepIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    DepIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheDepIterator___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::DepIterator const *)arg1)->operator !=((DepIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator___deref____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    Dependency *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Dependency *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Dependency, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator___deref____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    Dependency *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Dependency *)((pkgCache::DepIterator const *)arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Dependency, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator___deref__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__DepIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheDepIterator___deref____SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__DepIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheDepIterator___deref____SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCacheDepIterator___deref__'");
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator___mul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    Dependency *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Dependency &_result_ref = (arg1)->operator *();
        result = (Dependency *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Dependency, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator___mul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    Dependency *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Dependency const &_result_ref = ((pkgCache::DepIterator const *)arg1)->operator *();
        result = (Dependency *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Dependency, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator___mul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__DepIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheDepIterator___mul____SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__DepIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheDepIterator___mul____SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCacheDepIterator___mul__'");
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_Dependency(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    Dependency *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_Dependency",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Dependency *)(arg1)->operator Dependency *();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Dependency, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_Cache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_Cache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache *)(arg1)->Cache();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_TargetVer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_TargetVer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::DepIterator const *)arg1)->TargetVer();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_TargetPkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    PkgIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_TargetPkg",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->TargetPkg();
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_SmartTargetPkg__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    PkgIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_SmartTargetPkg",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->SmartTargetPkg();
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_ParentVer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    VerIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_ParentVer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->ParentVer();
    
    {
        VerIterator * resultptr;
        resultptr = new VerIterator((VerIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_ParentPkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    PkgIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_ParentPkg",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->ParentPkg();
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_Reverse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_Reverse",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Reverse();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_Index(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_Index",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((pkgCache::DepIterator const *)arg1)->Index();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_IsCritical(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_IsCritical",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsCritical();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_GlobOr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    DepIterator *arg2 = 0 ;
    DepIterator *arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgCacheDepIterator_GlobOr",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GlobOr(*arg2,*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_AllTargets(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    Version **result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_AllTargets",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Version **)(arg1)->AllTargets();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_p_Version, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_SmartTargetPkg__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheDepIterator_SmartTargetPkg",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->SmartTargetPkg(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_SmartTargetPkg(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__DepIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheDepIterator_SmartTargetPkg__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__DepIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PkgIterator, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_pkgCacheDepIterator_SmartTargetPkg__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCacheDepIterator_SmartTargetPkg'");
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_CompType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_CompType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->CompType();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_DepType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_DepType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->DepType();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheDepIterator__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    Dependency *arg2 = (Dependency *) 0 ;
    Version *arg3 = (Version *) 0 ;
    pkgCache::DepIterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:new_pkgCacheDepIterator",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (pkgCache::DepIterator *)new pkgCache::DepIterator(*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__DepIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheDepIterator__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    Dependency *arg2 = (Dependency *) 0 ;
    Package *arg3 = (Package *) 0 ;
    pkgCache::DepIterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_pkgCacheDepIterator",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Dependency,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::DepIterator *)new pkgCache::DepIterator(*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__DepIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheDepIterator__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheDepIterator")) goto fail;
    result = (pkgCache::DepIterator *)new pkgCache::DepIterator();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__DepIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheDepIterator(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_pkgCacheDepIterator__SWIG_2(self,args);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Dependency, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_new_pkgCacheDepIterator__SWIG_0(self,args);
                }
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_Version, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_pkgCacheDepIterator__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Dependency, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_Package, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_pkgCacheDepIterator__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_pkgCacheDepIterator'");
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_Version_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_Version_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->Version);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_Package_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_Package_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->Package);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_NextDepends_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_NextDepends_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->NextDepends);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_NextRevDepends_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_NextRevDepends_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->NextRevDepends);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_ID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_ID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->ID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_Type_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_Type_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((*arg1)->Type);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheDepIterator_CompareOp_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    unsigned char result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheDepIterator_CompareOp_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned char) ((*arg1)->CompareOp);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheDepIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::DepIterator *arg1 = (pkgCache::DepIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheDepIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheDepIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__DepIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCachePrvIterator___nonzero__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator___nonzero__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)pkgCache_PrvIterator___nonzero__(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    pkgCache::PrvIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        result = (pkgCache::PrvIterator *)pkgCache_PrvIterator_next(arg1);
        
        /* Pass ahead the StopIteration exception. */
        if (!result) return NULL;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PrvIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator___iter__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    pkgCache::PrvIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator___iter__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::PrvIterator *)pkgCache_PrvIterator___iter__(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PrvIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_end(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_end",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgCache::PrvIterator const *)arg1)->end();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    PrvIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePrvIterator___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::PrvIterator const *)arg1)->operator ==((PrvIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    PrvIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePrvIterator___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::PrvIterator const *)arg1)->operator !=((PrvIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator___deref____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    Provides *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Provides *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Provides, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator___deref____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    Provides *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Provides *)((pkgCache::PrvIterator const *)arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Provides, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator___deref__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__PrvIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCachePrvIterator___deref____SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__PrvIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCachePrvIterator___deref____SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCachePrvIterator___deref__'");
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator___mul____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    Provides *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Provides &_result_ref = (arg1)->operator *();
        result = (Provides *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Provides, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator___mul____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    Provides *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Provides const &_result_ref = ((pkgCache::PrvIterator const *)arg1)->operator *();
        result = (Provides *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Provides, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator___mul__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__PrvIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCachePrvIterator___mul____SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__PrvIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCachePrvIterator___mul____SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCachePrvIterator___mul__'");
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_Provides(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    Provides *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_Provides",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Provides *)(arg1)->operator Provides *();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Provides, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_Cache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_Cache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache *)(arg1)->Cache();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_Name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_Name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PrvIterator const *)arg1)->Name();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_ProvideVersion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_ProvideVersion",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PrvIterator const *)arg1)->ProvideVersion();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_ParentPkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    PkgIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_ParentPkg",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->ParentPkg();
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_OwnerVer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    VerIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_OwnerVer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->OwnerVer();
    
    {
        VerIterator * resultptr;
        resultptr = new VerIterator((VerIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_OwnerPkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    PkgIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_OwnerPkg",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->OwnerPkg();
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_Index(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_Index",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((pkgCache::PrvIterator const *)arg1)->Index();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePrvIterator__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    Provides *arg2 = (Provides *) 0 ;
    Version *arg3 = (Version *) 0 ;
    pkgCache::PrvIterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_pkgCachePrvIterator",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::PrvIterator *)new pkgCache::PrvIterator(*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PrvIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePrvIterator__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    Provides *arg2 = (Provides *) 0 ;
    Package *arg3 = (Package *) 0 ;
    pkgCache::PrvIterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:new_pkgCachePrvIterator",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Provides,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::PrvIterator *)new pkgCache::PrvIterator(*arg1,arg2,arg3);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PrvIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePrvIterator(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Provides, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_Version, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_pkgCachePrvIterator__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_Provides, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_Package, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_new_pkgCachePrvIterator__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_pkgCachePrvIterator'");
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_Version_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_Version_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->Version);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_NextProvides_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_NextProvides_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->NextProvides);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePrvIterator_NextPkgProv_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePrvIterator_NextPkgProv_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->NextPkgProv);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCachePrvIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PrvIterator *arg1 = (pkgCache::PrvIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCachePrvIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PrvIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCachePrvIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__PrvIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCachePkgFileIterator___nonzero__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator___nonzero__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)pkgCache_PkgFileIterator___nonzero__(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    pkgCache::PkgFileIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        result = (pkgCache::PkgFileIterator *)pkgCache_PkgFileIterator_next(arg1);
        
        /* Pass ahead the StopIteration exception. */
        if (!result) return NULL;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PkgFileIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator___iter__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    pkgCache::PkgFileIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator___iter__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::PkgFileIterator *)pkgCache_PkgFileIterator___iter__(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PkgFileIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_end(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_end",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgCache::PkgFileIterator const *)arg1)->end();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    PkgFileIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePkgFileIterator___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::PkgFileIterator const *)arg1)->operator ==((PkgFileIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    PkgFileIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCachePkgFileIterator___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::PkgFileIterator const *)arg1)->operator !=((PkgFileIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator___deref____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    PackageFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PackageFile *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_PackageFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator___deref____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    PackageFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PackageFile *)((pkgCache::PkgFileIterator const *)arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_PackageFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator___deref__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__PkgFileIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCachePkgFileIterator___deref____SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__PkgFileIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCachePkgFileIterator___deref____SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCachePkgFileIterator___deref__'");
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator___mul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    PackageFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        PackageFile const &_result_ref = ((pkgCache::PkgFileIterator const *)arg1)->operator *();
        result = (PackageFile *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_PackageFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_PackageFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    PackageFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_PackageFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PackageFile *)(arg1)->operator PackageFile *();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_PackageFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Cache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Cache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache *)(arg1)->Cache();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_FileName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_FileName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgFileIterator const *)arg1)->FileName();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Archive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Archive",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgFileIterator const *)arg1)->Archive();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Component(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Component",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgFileIterator const *)arg1)->Component();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Version(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Version",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgFileIterator const *)arg1)->Version();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Origin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Origin",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgFileIterator const *)arg1)->Origin();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Label(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Label",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgFileIterator const *)arg1)->Label();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Site(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Site",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgFileIterator const *)arg1)->Site();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Architecture(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Architecture",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgFileIterator const *)arg1)->Architecture();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_IndexType(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_IndexType",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)((pkgCache::PkgFileIterator const *)arg1)->IndexType();
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Index(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Index",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((pkgCache::PkgFileIterator const *)arg1)->Index();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_IsOk(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_IsOk",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->IsOk();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_RelStr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_RelStr",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->RelStr();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePkgFileIterator__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCachePkgFileIterator")) goto fail;
    result = (pkgCache::PkgFileIterator *)new pkgCache::PkgFileIterator();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PkgFileIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePkgFileIterator__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    pkgCache::PkgFileIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_pkgCachePkgFileIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pkgCache::PkgFileIterator *)new pkgCache::PkgFileIterator(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PkgFileIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePkgFileIterator__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    PackageFile *arg2 = (PackageFile *) 0 ;
    pkgCache::PkgFileIterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_pkgCachePkgFileIterator",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PackageFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::PkgFileIterator *)new pkgCache::PkgFileIterator(*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__PkgFileIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCachePkgFileIterator(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_pkgCachePkgFileIterator__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_pkgCachePkgFileIterator__SWIG_1(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_PackageFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_pkgCachePkgFileIterator__SWIG_2(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_pkgCachePkgFileIterator'");
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Size_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Size_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((*arg1)->Size);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_Flags_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_Flags_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((*arg1)->Flags);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_NextFile_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_NextFile_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->NextFile);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_ID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_ID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((*arg1)->ID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCachePkgFileIterator_mtime_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    time_t result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCachePkgFileIterator_mtime_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->mtime);
    
    {
        time_t * resultptr;
        resultptr = new time_t((time_t &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_time_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCachePkgFileIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::PkgFileIterator *arg1 = (pkgCache::PkgFileIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCachePkgFileIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCachePkgFileIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__PkgFileIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheVerFileIterator___nonzero__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator___nonzero__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)pkgCache_VerFileIterator___nonzero__(arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator_next(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    pkgCache::VerFileIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator_next",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        result = (pkgCache::VerFileIterator *)pkgCache_VerFileIterator_next(arg1);
        
        /* Pass ahead the StopIteration exception. */
        if (!result) return NULL;
    }
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerFileIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator___iter__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    pkgCache::VerFileIterator *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator___iter__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::VerFileIterator *)pkgCache_VerFileIterator___iter__(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerFileIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator_end(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator_end",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgCache::VerFileIterator const *)arg1)->end();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator___eq__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    VerFileIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVerFileIterator___eq__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::VerFileIterator const *)arg1)->operator ==((VerFileIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator___ne__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    VerFileIterator *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheVerFileIterator___ne__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgCache::VerFileIterator const *)arg1)->operator !=((VerFileIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator___deref____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    VerFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (VerFile *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_VerFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator___deref____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    VerFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (VerFile *)((pkgCache::VerFileIterator const *)arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_VerFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator___deref__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__VerFileIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheVerFileIterator___deref____SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache__VerFileIterator, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_pkgCacheVerFileIterator___deref____SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCacheVerFileIterator___deref__'");
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator___mul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    VerFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        VerFile const &_result_ref = ((pkgCache::VerFileIterator const *)arg1)->operator *();
        result = (VerFile *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_VerFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator_VerFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    VerFile *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator_VerFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (VerFile *)(arg1)->operator VerFile *();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_VerFile, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator_Cache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator_Cache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache *)(arg1)->Cache();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator_File(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    PkgFileIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator_File",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgCache::VerFileIterator const *)arg1)->File();
    
    {
        PkgFileIterator * resultptr;
        resultptr = new PkgFileIterator((PkgFileIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgFileIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator_Index(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator_Index",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((pkgCache::VerFileIterator const *)arg1)->Index();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheVerFileIterator__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheVerFileIterator")) goto fail;
    result = (pkgCache::VerFileIterator *)new pkgCache::VerFileIterator();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerFileIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheVerFileIterator__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    VerFile *arg2 = (VerFile *) 0 ;
    pkgCache::VerFileIterator *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:new_pkgCacheVerFileIterator",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_VerFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::VerFileIterator *)new pkgCache::VerFileIterator(*arg1,arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__VerFileIterator, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheVerFileIterator(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_pkgCacheVerFileIterator__SWIG_0(self,args);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCache, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_VerFile, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_new_pkgCacheVerFileIterator__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_pkgCacheVerFileIterator'");
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator_NextFile_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator_NextFile_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->NextFile);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator_Offset_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    map_ptrloc result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator_Offset_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result =  ((*arg1)->Offset);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheVerFileIterator_Size_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    unsigned short result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheVerFileIterator_Size_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned short) ((*arg1)->Size);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheVerFileIterator(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache::VerFileIterator *arg1 = (pkgCache::VerFileIterator *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheVerFileIterator",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheVerFileIterator_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCache__VerFileIterator, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgCacheFile_Policy_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgPolicy *arg2 = (pkgPolicy *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile_Policy_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgPolicy,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->Policy = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_Policy_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgPolicy *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_Policy_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgPolicy *) ((arg1)->Policy);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgPolicy, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_pkgCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_pkgCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache *)(arg1)->operator pkgCache *();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_pkgDepCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgDepCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_pkgDepCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgDepCache *)(arg1)->operator pkgDepCache *();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgDepCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile___deref__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgDepCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile___deref__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgDepCache *)(arg1)->operator ->();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgDepCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile___mul__(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgDepCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile___mul__",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        pkgDepCache &_result_ref = (arg1)->operator *();
        result = (pkgDepCache *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgDepCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile___getitem____SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgCache::PkgIterator *arg2 = 0 ;
    pkgDepCache::StateCache *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile___getitem__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        pkgDepCache::StateCache &_result_ref = (arg1)->operator []((pkgCache::PkgIterator const &)*arg2);
        result = (pkgDepCache::StateCache *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgDepCache__StateCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile___getitem____SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgCache::DepIterator *arg2 = 0 ;
    unsigned char *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile___getitem__",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        unsigned char &_result_ref = (arg1)->operator []((pkgCache::DepIterator const &)*arg2);
        result = (unsigned char *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_unsigned_char, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile___getitem__(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCacheFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_pkgCache__PkgIterator, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_pkgCacheFile___getitem____SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgCacheFile, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_pkgCache__DepIterator, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_pkgCacheFile___getitem____SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgCacheFile___getitem__'");
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_BuildCaches(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    OpProgress *arg2 = 0 ;
    bool arg3 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:pkgCacheFile_BuildCaches",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->BuildCaches(*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_Open(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    OpProgress *arg2 = 0 ;
    bool arg3 = (bool) true ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:pkgCacheFile_Open",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->Open(*arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_Close(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_Close",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Close();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgCacheFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgCacheFile")) goto fail;
    result = (pkgCacheFile *)new pkgCacheFile();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCacheFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgCacheFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgCacheFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_BuildGroupOrs(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    VerIterator *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile_BuildGroupOrs",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (*arg1)->BuildGroupOrs((VerIterator const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_UpdateVerState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    PkgIterator arg2 ;
    PkgIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile_UpdateVerState",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (*arg1)->UpdateVerState(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_Head(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    Header *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_Head",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Header &_result_ref = (*arg1)->Head();
        result = (Header *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Header, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_PkgIter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    PkgIterator result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_PkgIter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (*arg1)->PkgBegin();
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_FindPkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    string *arg2 = 0 ;
    PkgIterator result;
    std::string temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile_FindPkg",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1),
            PyString_Size(obj1));
            arg2 = &temp2;
        } else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    result = (*arg1)->FindPkg((string const &)*arg2);
    
    {
        PkgIterator * resultptr;
        resultptr = new PkgIterator((PkgIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_PkgIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_GetCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_GetCache",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        pkgCache &_result_ref = (*arg1)->GetCache();
        result = (pkgCache *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_VS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgVersioningSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_VS",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        pkgVersioningSystem &_result_ref = (*arg1)->VS();
        result = (pkgVersioningSystem *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgVersioningSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_GetCandidateVer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    PkgIterator arg2 ;
    VerIterator result;
    PkgIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile_GetCandidateVer",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (*arg1)->GetCandidateVer(arg2);
    
    {
        VerIterator * resultptr;
        resultptr = new VerIterator((VerIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_VerIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_IsImportantDep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    DepIterator arg2 ;
    bool result;
    DepIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile_IsImportantDep",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_DepIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    result = (bool)(*arg1)->IsImportantDep(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_GetPolicy(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    Policy *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_GetPolicy",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Policy &_result_ref = (*arg1)->GetPolicy();
        result = (Policy *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Policy, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_GetPkgPriority(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    pkgCache::PkgIterator *arg2 = 0 ;
    short result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile_GetPkgPriority",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (short)(*arg1)->GetPkgPriority((pkgCache::PkgIterator const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_MarkKeep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:pkgCacheFile_MarkKeep",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (*arg1)->MarkKeep((PkgIterator const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_MarkDelete(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool arg3 = (bool) false ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:pkgCacheFile_MarkDelete",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    (*arg1)->MarkDelete((PkgIterator const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_MarkInstall(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool arg3 = (bool) true ;
    unsigned long arg4 = (unsigned long) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:pkgCacheFile_MarkInstall",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (unsigned long) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    (*arg1)->MarkInstall((PkgIterator const &)*arg2,arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_SetReInstall(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    PkgIterator *arg2 = 0 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgCacheFile_SetReInstall",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_PkgIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (*arg1)->SetReInstall((PkgIterator const &)*arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_SetCandidateVersion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    VerIterator arg2 ;
    VerIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile_SetCandidateVersion",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_VerIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (*arg1)->SetCandidateVersion(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_Update(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    OpProgress *arg2 = (OpProgress *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:pkgCacheFile_Update",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    (*arg1)->Update(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_UsrSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_UsrSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)(*arg1)->UsrSize();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_DebSize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_DebSize",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)(*arg1)->DebSize();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_DelCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_DelCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(*arg1)->DelCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_KeepCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_KeepCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(*arg1)->KeepCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_InstCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_InstCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(*arg1)->InstCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_BrokenCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_BrokenCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(*arg1)->BrokenCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_BadCount(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgCacheFile_BadCount",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)(*arg1)->BadCount();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgCacheFile_Init(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCacheFile *arg1 = (pkgCacheFile *) 0 ;
    OpProgress *arg2 = (OpProgress *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgCacheFile_Init",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCacheFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(*arg1)->Init(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgCacheFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgCacheFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgProblemResolver_Protect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgProblemResolver *arg1 = (pkgProblemResolver *) 0 ;
    pkgCache::PkgIterator arg2 ;
    pkgCache::PkgIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgProblemResolver_Protect",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->Protect(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgProblemResolver_Remove(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgProblemResolver *arg1 = (pkgProblemResolver *) 0 ;
    pkgCache::PkgIterator arg2 ;
    pkgCache::PkgIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgProblemResolver_Remove",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->Remove(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgProblemResolver_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgProblemResolver *arg1 = (pkgProblemResolver *) 0 ;
    pkgCache::PkgIterator arg2 ;
    pkgCache::PkgIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgProblemResolver_Clear",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_pkgCache__PkgIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    (arg1)->Clear(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgProblemResolver_Resolve(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgProblemResolver *arg1 = (pkgProblemResolver *) 0 ;
    bool arg2 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:pkgProblemResolver_Resolve",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->Resolve(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgProblemResolver_ResolveByKeep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgProblemResolver *arg1 = (pkgProblemResolver *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgProblemResolver_ResolveByKeep",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ResolveByKeep();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgProblemResolver_InstallProtect(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgProblemResolver *arg1 = (pkgProblemResolver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgProblemResolver_InstallProtect",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->InstallProtect();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgProblemResolver_RemoveDepends(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgProblemResolver *arg1 = (pkgProblemResolver *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgProblemResolver_RemoveDepends",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RemoveDepends();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgProblemResolver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    pkgProblemResolver *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_pkgProblemResolver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgProblemResolver *)new pkgProblemResolver(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgProblemResolver, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgProblemResolver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgProblemResolver *arg1 = (pkgProblemResolver *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgProblemResolver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgProblemResolver_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgProblemResolver, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgDistUpgrade(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgDistUpgrade",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)pkgDistUpgrade(*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgApplyStatus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgApplyStatus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)pkgApplyStatus(*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgFixBroken(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgFixBroken",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)pkgFixBroken(*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAllUpgrade(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAllUpgrade",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)pkgAllUpgrade(*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgMinimizeUpgrade(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgMinimizeUpgrade",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)pkgMinimizeUpgrade(*arg1);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgPrioSortList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    pkgCache::Version **arg2 = (pkgCache::Version **) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgPrioSortList",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_pkgCache__Version,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    pkgPrioSortList(*arg1,arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static int _wrap_pkgSystem_GlobalList_set(PyObject *_val) {
    {
        void *temp;
        if ((SWIG_ConvertPtr(_val,(void **) &temp, SWIGTYPE_p_p_pkgSystem, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN)) == -1) {
            PyErr_SetString(PyExc_TypeError, "C variable 'pkgSystem::GlobalList (pkgSystem **)'");
            return 1;
        }
        pkgSystem::GlobalList = (pkgSystem **) temp;
    }
    return 0;
}


static PyObject *_wrap_pkgSystem_GlobalList_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) pkgSystem::GlobalList, SWIGTYPE_p_p_pkgSystem, 0);
    return pyobj;
}


static int _wrap_pkgSystem_GlobalListLen_set(PyObject *_val) {
    {
        long temp = PyInt_AsLong(_val);
        if (PyErr_Occurred()) {
            PyErr_SetString(PyExc_TypeError, "C variable 'pkgSystem::GlobalListLen (unsigned long)'");
            return 1;
        }
        pkgSystem::GlobalListLen = (unsigned long) temp;
    }
    return 0;
}


static PyObject *_wrap_pkgSystem_GlobalListLen_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)pkgSystem::GlobalListLen);
    return pyobj;
}


static PyObject *_wrap_pkgSystem_GetSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    pkgSystem *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:pkgSystem_GetSystem",&arg1)) goto fail;
    result = (pkgSystem *)pkgSystem::GetSystem((char const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_Label_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSystem_Label_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->Label);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_VS_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    pkgVersioningSystem *arg2 = (pkgVersioningSystem *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSystem_VS_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->VS = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_VS_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    pkgVersioningSystem *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSystem_VS_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgVersioningSystem *) ((arg1)->VS);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgVersioningSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_Lock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSystem_Lock",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Lock();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_UnLock(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    bool arg2 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:pkgSystem_UnLock",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        arg2 = PyInt_AsLong(obj1) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->UnLock(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_LockRead(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSystem_LockRead",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->LockRead();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_CacheBuilt(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSystem_CacheBuilt",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->CacheBuilt();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_CreatePM(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    pkgDepCache *arg2 = (pkgDepCache *) 0 ;
    pkgPackageManager *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSystem_CreatePM",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgPackageManager *)((pkgSystem const *)arg1)->CreatePM(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgPackageManager, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_Initialize(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    Configuration *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSystem_Initialize",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->Initialize(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_ArchiveSupported(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:pkgSystem_ArchiveSupported",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ArchiveSupported((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_AddStatusFiles(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    std::vector<pkgIndexFile * > *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSystem_AddStatusFiles",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_std__vectorTpkgIndexFile_p_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AddStatusFiles(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_AddSourceFiles(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    std::vector<pkgIndexFile * > *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSystem_AddSourceFiles",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_std__vectorTpkgIndexFile_p_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->AddSourceFiles(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_FindIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    pkgCache::PkgFileIterator arg2 ;
    pkgIndexFile **arg3 = 0 ;
    bool result;
    pkgCache::PkgFileIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgSystem_FindIndex",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_p_pkgIndexFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgSystem const *)arg1)->FindIndex(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_Score(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    Configuration *arg2 = 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSystem_Score",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (int)(arg1)->Score((Configuration const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_PreProcess(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    pkgIndexFile **arg2 = (pkgIndexFile **) 0 ;
    pkgIndexFile **arg3 = (pkgIndexFile **) 0 ;
    OpProgress *arg4 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:pkgSystem_PreProcess",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_pkgIndexFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_p_pkgIndexFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->PreProcess(arg2,arg3,*arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_ProcessCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    pkgDepCache *arg2 = 0 ;
    pkgProblemResolver *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgSystem_ProcessCache",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->ProcessCache(*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_IgnoreDep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    pkgVersioningSystem *arg2 = 0 ;
    pkgCache::DepIterator *arg3 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgSystem_IgnoreDep",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->IgnoreDep(*arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSystem_OptionsHash(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSystem_OptionsHash",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long)((pkgSystem const *)arg1)->OptionsHash();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSystem *arg1 = (pkgSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgSystem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgSystem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap__system_set(PyObject *_val) {
    {
        void *temp;
        if ((SWIG_ConvertPtr(_val,(void **) &temp, SWIGTYPE_p_pkgSystem, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN)) == -1) {
            PyErr_SetString(PyExc_TypeError, "C variable '_system (pkgSystem *)'");
            return 1;
        }
        _system = (pkgSystem *) temp;
    }
    return 0;
}


static PyObject *_wrap__system_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) _system, SWIGTYPE_p_pkgSystem, 0);
    return pyobj;
}


static PyObject *_wrap_Configuration_Find__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|s:Configuration_Find",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((Configuration const *)arg1)->Find((char const *)arg2,(char const *)arg3);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Find__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    string arg2 ;
    char *arg3 = (char *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|s:Configuration_Find",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = ((Configuration const *)arg1)->Find(arg2,(char const *)arg3);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Find(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_Configuration_Find__SWIG_0(self,args);
                }
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Configuration_Find__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_Configuration_Find__SWIG_1(self,args);
                }
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Configuration_Find__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Configuration_Find'");
    return NULL;
}


static PyObject *_wrap_Configuration_FindFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|s:Configuration_FindFile",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((Configuration const *)arg1)->FindFile((char const *)arg2,(char const *)arg3);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_FindDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|s:Configuration_FindDir",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((Configuration const *)arg1)->FindDir((char const *)arg2,(char const *)arg3);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_FindI__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    int arg3 = (int) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|i:Configuration_FindI",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)((Configuration const *)arg1)->FindI((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_FindI__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    string arg2 ;
    int arg3 = (int) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|i:Configuration_FindI",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (int)((Configuration const *)arg1)->FindI(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_FindI(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_Configuration_FindI__SWIG_0(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Configuration_FindI__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_Configuration_FindI__SWIG_1(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Configuration_FindI__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Configuration_FindI'");
    return NULL;
}


static PyObject *_wrap_Configuration_FindB__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:Configuration_FindB",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)((Configuration const *)arg1)->FindB((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_FindB__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    string arg2 ;
    bool arg3 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:Configuration_FindB",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)((Configuration const *)arg1)->FindB(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_FindB(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_Configuration_FindB__SWIG_0(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Configuration_FindB__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_Configuration_FindB__SWIG_1(self,args);
                }
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Configuration_FindB__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Configuration_FindB'");
    return NULL;
}


static PyObject *_wrap_Configuration_FindAny(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|s:Configuration_FindAny",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((Configuration const *)arg1)->FindAny((char const *)arg2,(char const *)arg3);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Set__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    string arg2 ;
    string arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:Configuration_Set",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    (arg1)->Set(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_CndSet(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    string arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:Configuration_CndSet",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    (arg1)->CndSet((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Set__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    string arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:Configuration_Set",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    (arg1)->Set((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Set__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:Configuration_Set",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Set((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Set(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Configuration_Set__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Configuration_Set__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Configuration_Set__SWIG_0(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Configuration_Set'");
    return NULL;
}


static PyObject *_wrap_Configuration_Exists__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    string arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Configuration_Exists",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (bool)((Configuration const *)arg1)->Exists(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Exists__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Configuration_Exists",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((Configuration const *)arg1)->Exists((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Exists(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_Configuration_Exists__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_Configuration_Exists__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Configuration_Exists'");
    return NULL;
}


static PyObject *_wrap_Configuration_ExistsAny(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Configuration_ExistsAny",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((Configuration const *)arg1)->ExistsAny((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Clear(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    string arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Configuration_Clear",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    (arg1)->Clear(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Tree(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    char *arg2 ;
    Item *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Configuration_Tree",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Item *)((Configuration const *)arg1)->Tree((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Item, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Dump__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Configuration_Dump",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Dump();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Dump__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    std::ostream *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Configuration_Dump",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_std__ostream,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Dump(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Configuration_Dump(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_Configuration_Dump__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                void *ptr;
                if (SWIG_ConvertPtr(argv[1], (void **) &ptr, SWIGTYPE_p_std__ostream, 0) == -1) {
                    _v = 0;
                    PyErr_Clear();
                } else {
                    _v = 1;
                }
            }
            if (_v) {
                return _wrap_Configuration_Dump__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Configuration_Dump'");
    return NULL;
}


static PyObject *_wrap_new_Configuration__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = 0 ;
    Configuration *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Configuration",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (Configuration *)new Configuration(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Configuration, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Configuration__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Item *arg1 = (Item *) 0 ;
    Configuration *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_Configuration",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Configuration *)new Configuration((Item const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Configuration, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Configuration__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Configuration")) goto fail;
    result = (Configuration *)new Configuration();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Configuration, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Configuration(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_Configuration__SWIG_2(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Item, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_Configuration__SWIG_1(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_Configuration__SWIG_0(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_Configuration'");
    return NULL;
}


static PyObject *_wrap_delete_Configuration(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = (Configuration *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Configuration",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Configuration_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Configuration, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap__config_set(PyObject *_val) {
    {
        void *temp;
        if ((SWIG_ConvertPtr(_val,(void **) &temp, SWIGTYPE_p_Configuration, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN)) == -1) {
            PyErr_SetString(PyExc_TypeError, "C variable '_config (Configuration *)'");
            return 1;
        }
        _config = (Configuration *) temp;
    }
    return 0;
}


static PyObject *_wrap__config_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) _config, SWIGTYPE_p_Configuration, 0);
    return pyobj;
}


static PyObject *_wrap_ReadConfigFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = 0 ;
    string arg2 ;
    bool arg3 = (bool) false ;
    unsigned int arg4 = (unsigned int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:ReadConfigFile",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (unsigned int) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)ReadConfigFile(*arg1,arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ReadConfigDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = 0 ;
    string arg2 ;
    bool arg3 = (bool) false ;
    unsigned int arg4 = (unsigned int) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|OO:ReadConfigDir",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    if (obj3) {
        arg4 = (unsigned int) PyInt_AsLong(obj3);
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)ReadConfigDir(*arg1,arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Tag_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:ConfigurationItem_Tag_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    Configuration_Item_Tag_set(arg1,(char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Tag_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ConfigurationItem_Tag_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)Configuration_Item_Tag_get(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Value_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:ConfigurationItem_Value_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    Configuration_Item_Value_set(arg1,(char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Value_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ConfigurationItem_Value_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)Configuration_Item_Value_get(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Parent_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    Item *arg2 = (Item *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ConfigurationItem_Parent_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Item,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->Parent = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Parent_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    Item *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ConfigurationItem_Parent_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Item *) ((arg1)->Parent);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Item, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Child_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    Item *arg2 = (Item *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ConfigurationItem_Child_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Item,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->Child = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Child_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    Item *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ConfigurationItem_Child_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Item *) ((arg1)->Child);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Item, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Next_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    Item *arg2 = (Item *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ConfigurationItem_Next_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Item,SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN )) == -1) SWIG_fail;
    if (arg1) (arg1)->Next = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_Next_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    Item *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ConfigurationItem_Next_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (Item *) ((arg1)->Next);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Item, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ConfigurationItem_FullTag(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    Item *arg2 = (Item *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:ConfigurationItem_FullTag",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = ((Configuration::Item const *)arg1)->FullTag((Item const *)arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ConfigurationItem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_ConfigurationItem")) goto fail;
    result = (Configuration::Item *)new Configuration::Item();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Configuration__Item, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ConfigurationItem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration::Item *arg1 = (Configuration::Item *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ConfigurationItem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ConfigurationItem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Configuration__Item, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_OpProgress_Progress(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    OpProgress *arg1 = (OpProgress *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OpProgress_Progress",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Progress(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OpProgress_SubProgress__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    OpProgress *arg1 = (OpProgress *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:OpProgress_SubProgress",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SubProgress(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OpProgress_SubProgress__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    OpProgress *arg1 = (OpProgress *) 0 ;
    unsigned long arg2 ;
    string arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:OpProgress_SubProgress",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    (arg1)->SubProgress(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OpProgress_SubProgress(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_OpProgress, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_OpProgress_SubProgress__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_OpProgress, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_OpProgress_SubProgress__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'OpProgress_SubProgress'");
    return NULL;
}


static PyObject *_wrap_OpProgress_OverallProgress(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    OpProgress *arg1 = (OpProgress *) 0 ;
    unsigned long arg2 ;
    unsigned long arg3 ;
    unsigned long arg4 ;
    string arg5 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:OpProgress_OverallProgress",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (unsigned long) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    arg4 = (unsigned long) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    {
        if (PyString_Check(obj4))
        arg5 = std::string(PyString_AsString(obj4),
        PyString_Size(obj4));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    (arg1)->OverallProgress(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_OpProgress_Done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    OpProgress *arg1 = (OpProgress *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OpProgress_Done",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Done();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_OpProgress(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    OpProgress *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_OpProgress")) goto fail;
    result = (OpProgress *)new OpProgress();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_OpProgress, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_OpProgress(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    OpProgress *arg1 = (OpProgress *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OpProgress",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_OpProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OpProgress_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_OpProgress, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_OpTextProgress_Done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    OpTextProgress *arg1 = (OpTextProgress *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:OpTextProgress_Done",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_OpTextProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Done();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_OpTextProgress__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    bool arg1 = (bool) false ;
    OpTextProgress *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:new_OpTextProgress",&obj0)) goto fail;
    if (obj0) {
        arg1 = PyInt_AsLong(obj0) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (OpTextProgress *)new OpTextProgress(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_OpTextProgress, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_OpTextProgress__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Configuration *arg1 = 0 ;
    OpTextProgress *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_OpTextProgress",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Configuration,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (OpTextProgress *)new OpTextProgress(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_OpTextProgress, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_OpTextProgress(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 0) && (argc <= 1)) {
        int _v;
        if (argc <= 0) {
            return _wrap_new_OpTextProgress__SWIG_0(self,args);
        }
        {
            _v = (PyInt_Check(argv[0]) || PyLong_Check(argv[0])) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_OpTextProgress__SWIG_0(self,args);
        }
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Configuration, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_new_OpTextProgress__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_OpTextProgress'");
    return NULL;
}


static PyObject *_wrap_delete_OpTextProgress(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    OpTextProgress *arg1 = (OpTextProgress *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_OpTextProgress",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_OpTextProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * OpTextProgress_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_OpTextProgress, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static int _wrap_pkgVersioningSystem_GlobalList_set(PyObject *_val) {
    {
        void *temp;
        if ((SWIG_ConvertPtr(_val,(void **) &temp, SWIGTYPE_p_p_pkgVersioningSystem, SWIG_POINTER_EXCEPTION | SWIG_POINTER_DISOWN)) == -1) {
            PyErr_SetString(PyExc_TypeError, "C variable 'pkgVersioningSystem::GlobalList (pkgVersioningSystem **)'");
            return 1;
        }
        pkgVersioningSystem::GlobalList = (pkgVersioningSystem **) temp;
    }
    return 0;
}


static PyObject *_wrap_pkgVersioningSystem_GlobalList_get() {
    PyObject *pyobj;
    
    pyobj = SWIG_NewPointerObj((void *) pkgVersioningSystem::GlobalList, SWIGTYPE_p_p_pkgVersioningSystem, 0);
    return pyobj;
}


static int _wrap_pkgVersioningSystem_GlobalListLen_set(PyObject *_val) {
    {
        long temp = PyInt_AsLong(_val);
        if (PyErr_Occurred()) {
            PyErr_SetString(PyExc_TypeError, "C variable 'pkgVersioningSystem::GlobalListLen (unsigned long)'");
            return 1;
        }
        pkgVersioningSystem::GlobalListLen = (unsigned long) temp;
    }
    return 0;
}


static PyObject *_wrap_pkgVersioningSystem_GlobalListLen_get() {
    PyObject *pyobj;
    
    pyobj = PyInt_FromLong((long)pkgVersioningSystem::GlobalListLen);
    return pyobj;
}


static PyObject *_wrap_pkgVersioningSystem_GetVS(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    char *arg1 ;
    pkgVersioningSystem *result;
    
    if(!PyArg_ParseTuple(args,(char *)"s:pkgVersioningSystem_GetVS",&arg1)) goto fail;
    result = (pkgVersioningSystem *)pkgVersioningSystem::GetVS((char const *)arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgVersioningSystem, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_Label_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgVersioningSystem_Label_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->Label);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_DoCmpVersion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    char *arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossss:pkgVersioningSystem_DoCmpVersion",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DoCmpVersion((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_DoCmpVersionArch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    char *arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    char *arg6 ;
    char *arg7 ;
    char *arg8 ;
    char *arg9 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossssssss:pkgVersioningSystem_DoCmpVersionArch",&obj0,&arg2,&arg3,&arg4,&arg5,&arg6,&arg7,&arg8,&arg9)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DoCmpVersionArch((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5,(char const *)arg6,(char const *)arg7,(char const *)arg8,(char const *)arg9);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpVersionArch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    string arg2 ;
    string arg3 ;
    char *arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOss:pkgVersioningSystem_CmpVersionArch",&obj0,&obj1,&obj2,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (int)(arg1)->CmpVersionArch(arg2,arg3,(char const *)arg4,(char const *)arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CheckDep__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    char *arg2 ;
    pkgCache::DepIterator arg3 ;
    bool result;
    pkgCache::DepIterator *argp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:pkgVersioningSystem_CheckDep",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &argp3, SWIGTYPE_p_pkgCache__DepIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg3 = *argp3; 
    result = (bool)(arg1)->CheckDep((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CheckDep__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    char *arg2 ;
    int arg3 ;
    char *arg4 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osis:pkgVersioningSystem_CheckDep",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->CheckDep((char const *)arg2,arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CheckDep(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_pkgCache__DepIterator, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_pkgVersioningSystem_CheckDep__SWIG_0(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_pkgVersioningSystem_CheckDep__SWIG_1(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgVersioningSystem_CheckDep'");
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_DoCmpReleaseVer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    char *arg2 ;
    char *arg3 ;
    char *arg4 ;
    char *arg5 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Ossss:pkgVersioningSystem_DoCmpReleaseVer",&obj0,&arg2,&arg3,&arg4,&arg5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->DoCmpReleaseVer((char const *)arg2,(char const *)arg3,(char const *)arg4,(char const *)arg5);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_UpstreamVersion(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    char *arg2 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:pkgVersioningSystem_UpstreamVersion",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->UpstreamVersion((char const *)arg2);
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_TestCompatibility(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    pkgVersioningSystem *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgVersioningSystem_TestCompatibility",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->TestCompatibility((pkgVersioningSystem const &)*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpVersion__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    char *arg2 ;
    char *arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osss:pkgVersioningSystem_CmpVersion",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CmpVersion((char const *)arg2,(char const *)arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpVersion__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    string arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:pkgVersioningSystem_CmpVersion",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (int)(arg1)->CmpVersion(arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpVersion__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    string arg2 ;
    string arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgVersioningSystem_CmpVersion",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (int)(arg1)->CmpVersion(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpVersion__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    string arg2 ;
    char *arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss:pkgVersioningSystem_CmpVersion",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (int)(arg1)->CmpVersion(arg2,(char const *)arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpVersion(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_pkgVersioningSystem_CmpVersion__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_pkgVersioningSystem_CmpVersion__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_pkgVersioningSystem_CmpVersion__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_pkgVersioningSystem_CmpVersion__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgVersioningSystem_CmpVersion'");
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpReleaseVer__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    char *arg2 ;
    char *arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osss:pkgVersioningSystem_CmpReleaseVer",&obj0,&arg2,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->CmpReleaseVer((char const *)arg2,(char const *)arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpReleaseVer__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    string arg2 ;
    char *arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOs:pkgVersioningSystem_CmpReleaseVer",&obj0,&obj1,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (int)(arg1)->CmpReleaseVer(arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpReleaseVer__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    string arg2 ;
    string arg3 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgVersioningSystem_CmpReleaseVer",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (int)(arg1)->CmpReleaseVer(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpReleaseVer__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    string arg2 ;
    char *arg3 ;
    char *arg4 ;
    int result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOss:pkgVersioningSystem_CmpReleaseVer",&obj0,&obj1,&arg3,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (int)(arg1)->CmpReleaseVer(arg2,(char const *)arg3,(char const *)arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgVersioningSystem_CmpReleaseVer(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_pkgVersioningSystem_CmpReleaseVer__SWIG_1(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_pkgVersioningSystem_CmpReleaseVer__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_pkgVersioningSystem_CmpReleaseVer__SWIG_0(self,args);
                    }
                }
            }
        }
    }
    if (argc == 4) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_pkgVersioningSystem, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    {
                        _v = PyString_Check(argv[3]) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_pkgVersioningSystem_CmpReleaseVer__SWIG_3(self,args);
                    }
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'pkgVersioningSystem_CmpReleaseVer'");
    return NULL;
}


static PyObject *_wrap_delete_pkgVersioningSystem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgVersioningSystem *arg1 = (pkgVersioningSystem *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgVersioningSystem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgVersioningSystem,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgVersioningSystem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgVersioningSystem, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgRecords_Lookup(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords *arg1 = (pkgRecords *) 0 ;
    pkgCache::VerFileIterator *arg2 = 0 ;
    pkgRecords::Parser *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgRecords_Lookup",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache__VerFileIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    {
        pkgRecords::Parser &_result_ref = (arg1)->Lookup((pkgCache::VerFileIterator const &)*arg2);
        result = (pkgRecords::Parser *) &_result_ref;
    }
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgRecords__Parser, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgRecords(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgCache *arg1 = 0 ;
    pkgRecords *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_pkgRecords",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pkgRecords *)new pkgRecords(*arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgRecords, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgRecords(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords *arg1 = (pkgRecords *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgRecords",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgRecords_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgRecords, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgRecordsParser_FileName(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgRecordsParser_FileName",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->FileName();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgRecordsParser_MD5Hash(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgRecordsParser_MD5Hash",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->MD5Hash();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgRecordsParser_SHA1Hash(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgRecordsParser_SHA1Hash",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->SHA1Hash();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgRecordsParser_SourcePkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgRecordsParser_SourcePkg",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->SourcePkg();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgRecordsParser_Maintainer(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgRecordsParser_Maintainer",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Maintainer();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgRecordsParser_ShortDesc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgRecordsParser_ShortDesc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->ShortDesc();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgRecordsParser_LongDesc(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgRecordsParser_LongDesc",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->LongDesc();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgRecordsParser_Name(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgRecordsParser_Name",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Name();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgRecordsParser_GetRec(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    char **arg2 = 0 ;
    char **arg3 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgRecordsParser_GetRec",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_p_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_p_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->GetRec((char const *&)*arg2,(char const *&)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgRecordsParser_HasFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:pkgRecordsParser_HasFile",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasFile((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgRecordsParser(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgRecords::Parser *arg1 = (pkgRecords::Parser *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgRecordsParser",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgRecords__Parser,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgRecordsParser_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgRecords__Parser, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgAcquireItem_DestFile_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_DestFile_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)pkgAcquire_Item_DestFile_get(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_ErrorText_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_ErrorText_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)pkgAcquire_Item_ErrorText_get(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Status_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    int arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oi:pkgAcquireItem_Status_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Status = (enum pkgAcquire::Item::StatusFlags)arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Status_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_Status_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int) ((arg1)->Status);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_FileSize_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireItem_FileSize_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->FileSize = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_FileSize_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_FileSize_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->FileSize);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_PartialSize_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireItem_PartialSize_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->PartialSize = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_PartialSize_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_PartialSize_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->PartialSize);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Mode_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:pkgAcquireItem_Mode_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (arg2) {
            arg1->Mode = (char const *) (new char[strlen(arg2)+1]);
            strcpy((char *) arg1->Mode,arg2);
        } else {
            arg1->Mode = 0;
        }
    }
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Mode_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_Mode_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *) ((arg1)->Mode);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_ID_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    unsigned long arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireItem_ID_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->ID = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_ID_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    unsigned long result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_ID_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned long) ((arg1)->ID);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Complete_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireItem_Complete_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Complete = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Complete_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_Complete_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->Complete);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Local_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireItem_Local_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Local = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Local_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_Local_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->Local);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_QueueCounter_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    unsigned int arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireItem_QueueCounter_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned int) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->QueueCounter = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_QueueCounter_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_QueueCounter_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int) ((arg1)->QueueCounter);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Failed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    string arg2 ;
    pkgAcquire::MethodConfig *arg3 = (pkgAcquire::MethodConfig *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgAcquireItem_Failed",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgAcquire__MethodConfig,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Failed(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    string arg2 ;
    unsigned long arg3 ;
    string arg4 ;
    pkgAcquire::MethodConfig *arg5 = (pkgAcquire::MethodConfig *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:pkgAcquireItem_Done",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    arg3 = (unsigned long) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    {
        if (PyString_Check(obj3))
        arg4 = std::string(PyString_AsString(obj3),
        PyString_Size(obj3));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_pkgAcquire__MethodConfig,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Done(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Start(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    string arg2 ;
    unsigned long arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgAcquireItem_Start",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    arg3 = (unsigned long) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Start(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Custom600Headers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_Custom600Headers",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Custom600Headers();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_DescURI(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_DescURI",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->DescURI();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_Finished(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_Finished",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Finished();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_MD5Sum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_MD5Sum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->MD5Sum();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireItem_GetOwner(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    pkgAcquire *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireItem_GetOwner",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgAcquire *)(arg1)->GetOwner();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcquire, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgAcquireItem(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire::Item *arg1 = (pkgAcquire::Item *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgAcquireItem",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire__Item,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgAcquireItem_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgAcquire__Item, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgAcqIndex_Done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqIndex *arg1 = (pkgAcqIndex *) 0 ;
    string arg2 ;
    unsigned long arg3 ;
    string arg4 ;
    pkgAcquire::MethodConfig *arg5 = (pkgAcquire::MethodConfig *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:pkgAcqIndex_Done",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    arg3 = (unsigned long) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    {
        if (PyString_Check(obj3))
        arg4 = std::string(PyString_AsString(obj3),
        PyString_Size(obj3));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_pkgAcquire__MethodConfig,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Done(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqIndex_Custom600Headers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqIndex *arg1 = (pkgAcqIndex *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcqIndex_Custom600Headers",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Custom600Headers();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqIndex_DescURI(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqIndex *arg1 = (pkgAcqIndex *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcqIndex_DescURI",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->DescURI();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgAcqIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    pkgRepository *arg2 = (pkgRepository *) 0 ;
    string arg3 ;
    string arg4 ;
    string arg5 ;
    pkgAcqIndex *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:new_pkgAcqIndex",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgRepository,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj3))
        arg4 = std::string(PyString_AsString(obj3),
        PyString_Size(obj3));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj4))
        arg5 = std::string(PyString_AsString(obj4),
        PyString_Size(obj4));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (pkgAcqIndex *)new pkgAcqIndex(arg1,arg2,arg3,arg4,arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcqIndex, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgAcqIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqIndex *arg1 = (pkgAcqIndex *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgAcqIndex",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqIndex,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgAcqIndex_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgAcqIndex, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgAcqIndexRel_Failed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqIndexRel *arg1 = (pkgAcqIndexRel *) 0 ;
    string arg2 ;
    pkgAcquire::MethodConfig *arg3 = (pkgAcquire::MethodConfig *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgAcqIndexRel_Failed",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqIndexRel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgAcquire__MethodConfig,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Failed(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqIndexRel_Done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqIndexRel *arg1 = (pkgAcqIndexRel *) 0 ;
    string arg2 ;
    unsigned long arg3 ;
    string arg4 ;
    pkgAcquire::MethodConfig *arg5 = (pkgAcquire::MethodConfig *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:pkgAcqIndexRel_Done",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqIndexRel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    arg3 = (unsigned long) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    {
        if (PyString_Check(obj3))
        arg4 = std::string(PyString_AsString(obj3),
        PyString_Size(obj3));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_pkgAcquire__MethodConfig,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Done(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqIndexRel_Custom600Headers(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqIndexRel *arg1 = (pkgAcqIndexRel *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcqIndexRel_Custom600Headers",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqIndexRel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->Custom600Headers();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqIndexRel_DescURI(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqIndexRel *arg1 = (pkgAcqIndexRel *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcqIndexRel_DescURI",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqIndexRel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->DescURI();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgAcqIndexRel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    pkgRepository *arg2 = (pkgRepository *) 0 ;
    string arg3 ;
    string arg4 ;
    string arg5 ;
    bool arg6 = (bool) false ;
    pkgAcqIndexRel *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO|O:new_pkgAcqIndexRel",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgRepository,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj3))
        arg4 = std::string(PyString_AsString(obj3),
        PyString_Size(obj3));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj4))
        arg5 = std::string(PyString_AsString(obj4),
        PyString_Size(obj4));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if (obj5) {
        arg6 = PyInt_AsLong(obj5) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (pkgAcqIndexRel *)new pkgAcqIndexRel(arg1,arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcqIndexRel, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgAcqIndexRel(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqIndexRel *arg1 = (pkgAcqIndexRel *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgAcqIndexRel",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqIndexRel,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgAcqIndexRel_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgAcqIndexRel, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgAcqArchive_Failed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqArchive *arg1 = (pkgAcqArchive *) 0 ;
    string arg2 ;
    pkgAcquire::MethodConfig *arg3 = (pkgAcquire::MethodConfig *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgAcqArchive_Failed",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqArchive,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgAcquire__MethodConfig,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Failed(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqArchive_Done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqArchive *arg1 = (pkgAcqArchive *) 0 ;
    string arg2 ;
    unsigned long arg3 ;
    string arg4 ;
    pkgAcquire::MethodConfig *arg5 = (pkgAcquire::MethodConfig *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:pkgAcqArchive_Done",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqArchive,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    arg3 = (unsigned long) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    {
        if (PyString_Check(obj3))
        arg4 = std::string(PyString_AsString(obj3),
        PyString_Size(obj3));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_pkgAcquire__MethodConfig,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Done(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqArchive_MD5Sum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqArchive *arg1 = (pkgAcqArchive *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcqArchive_MD5Sum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqArchive,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->MD5Sum();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqArchive_DescURI(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqArchive *arg1 = (pkgAcqArchive *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcqArchive_DescURI",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqArchive,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->DescURI();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqArchive_Finished(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqArchive *arg1 = (pkgAcqArchive *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcqArchive_Finished",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqArchive,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Finished();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgAcqArchive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    pkgSourceList *arg2 = (pkgSourceList *) 0 ;
    pkgRecords *arg3 = (pkgRecords *) 0 ;
    pkgCache::VerIterator *arg4 = 0 ;
    string *arg5 = 0 ;
    pkgAcqArchive *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:new_pkgAcqArchive",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgRecords,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_pkgCache__VerIterator,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg4 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_string,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg5 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (pkgAcqArchive *)new pkgAcqArchive(arg1,arg2,arg3,(pkgCache::VerIterator const &)*arg4,*arg5);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcqArchive, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgAcqArchive(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqArchive *arg1 = (pkgAcqArchive *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgAcqArchive",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqArchive,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgAcqArchive_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgAcqArchive, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgAcqFile_Failed(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqFile *arg1 = (pkgAcqFile *) 0 ;
    string arg2 ;
    pkgAcquire::MethodConfig *arg3 = (pkgAcquire::MethodConfig *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgAcqFile_Failed",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgAcquire__MethodConfig,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Failed(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqFile_Done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqFile *arg1 = (pkgAcqFile *) 0 ;
    string arg2 ;
    unsigned long arg3 ;
    string arg4 ;
    pkgAcquire::MethodConfig *arg5 = (pkgAcquire::MethodConfig *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOO:pkgAcqFile_Done",&obj0,&obj1,&obj2,&obj3,&obj4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    arg3 = (unsigned long) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    {
        if (PyString_Check(obj3))
        arg4 = std::string(PyString_AsString(obj3),
        PyString_Size(obj3));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    if ((SWIG_ConvertPtr(obj4,(void **) &arg5, SWIGTYPE_p_pkgAcquire__MethodConfig,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Done(arg2,arg3,arg4,arg5);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqFile_MD5Sum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqFile *arg1 = (pkgAcqFile *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcqFile_MD5Sum",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->MD5Sum();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcqFile_DescURI(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqFile *arg1 = (pkgAcqFile *) 0 ;
    string result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcqFile_DescURI",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->DescURI();
    
    {
        resultobj = PyString_FromStringAndSize((&result)->data(),(&result)->size());
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgAcqFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    string arg2 ;
    string arg3 ;
    unsigned long arg4 ;
    string arg5 ;
    string arg6 ;
    pkgAcqFile *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    PyObject * obj4 = 0 ;
    PyObject * obj5 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOOOO:new_pkgAcqFile",&obj0,&obj1,&obj2,&obj3,&obj4,&obj5)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    arg4 = (unsigned long) PyInt_AsLong(obj3);
    if (PyErr_Occurred()) SWIG_fail;
    {
        if (PyString_Check(obj4))
        arg5 = std::string(PyString_AsString(obj4),
        PyString_Size(obj4));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj5))
        arg6 = std::string(PyString_AsString(obj5),
        PyString_Size(obj5));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (pkgAcqFile *)new pkgAcqFile(arg1,arg2,arg3,arg4,arg5,arg6);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcqFile, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgAcqFile(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcqFile *arg1 = (pkgAcqFile *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgAcqFile",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcqFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgAcqFile_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgAcqFile, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgAcquire_ItemsIter(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    PyObject *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquire_ItemsIter",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (PyObject *)pkgAcquire_ItemsIter(arg1);
    
    resultobj = result;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_GetConfig(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    string arg2 ;
    pkgAcquire::MethodConfig *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquire_GetConfig",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (pkgAcquire::MethodConfig *)(arg1)->GetConfig(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcquire__MethodConfig, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_Run(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquire_Run",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (int)(arg1)->Run();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_Shutdown(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquire_Shutdown",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Shutdown();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_WorkersBegin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    pkgAcquire::Worker *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquire_WorkersBegin",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgAcquire::Worker *)(arg1)->WorkersBegin();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcquire__Worker, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_WorkerStep(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    pkgAcquire::Worker *arg2 = (pkgAcquire::Worker *) 0 ;
    pkgAcquire::Worker *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquire_WorkerStep",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgAcquire__Worker,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgAcquire::Worker *)(arg1)->WorkerStep(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcquire__Worker, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_UriBegin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    SwigValueWrapper< pkgAcquire::UriIterator > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquire_UriBegin",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->UriBegin();
    
    {
        pkgAcquire::UriIterator * resultptr;
        resultptr = new pkgAcquire::UriIterator((pkgAcquire::UriIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_pkgAcquire__UriIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_UriEnd(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    SwigValueWrapper< pkgAcquire::UriIterator > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquire_UriEnd",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->UriEnd();
    
    {
        pkgAcquire::UriIterator * resultptr;
        resultptr = new pkgAcquire::UriIterator((pkgAcquire::UriIterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_pkgAcquire__UriIterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_Clean(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    string arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquire_Clean",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (bool)(arg1)->Clean(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_TotalNeeded(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquire_TotalNeeded",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)(arg1)->TotalNeeded();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_FetchNeeded(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquire_FetchNeeded",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)(arg1)->FetchNeeded();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquire_PartialPresent(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquire_PartialPresent",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)(arg1)->PartialPresent();
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgAcquire(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    pkgAcquire *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"|O:new_pkgAcquire",&obj0)) goto fail;
    if (obj0) {
        if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (pkgAcquire *)new pkgAcquire(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcquire, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgAcquire(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquire *arg1 = (pkgAcquire *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgAcquire",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgAcquire_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgAcquire, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgAcquireStatus_Update_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireStatus_Update_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->Update = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_Update_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireStatus_Update_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->Update);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_MorePulses_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireStatus_MorePulses_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->MorePulses = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_MorePulses_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireStatus_MorePulses_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->MorePulses);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_Fetched(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    unsigned long arg2 ;
    unsigned long arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgAcquireStatus_Fetched",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = (unsigned long) PyInt_AsLong(obj1);
    if (PyErr_Occurred()) SWIG_fail;
    arg3 = (unsigned long) PyInt_AsLong(obj2);
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->Fetched(arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_MediaChange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    string arg2 ;
    string arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgAcquireStatus_MediaChange",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    {
        if (PyString_Check(obj2))
        arg3 = std::string(PyString_AsString(obj2),
        PyString_Size(obj2));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (bool)(arg1)->MediaChange(arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_IMSHit(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    pkgAcquire::ItemDesc *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireStatus_IMSHit",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgAcquire__ItemDesc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->IMSHit(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_Fetch(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    pkgAcquire::ItemDesc *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireStatus_Fetch",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgAcquire__ItemDesc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Fetch(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_Done(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    pkgAcquire::ItemDesc *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireStatus_Done",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgAcquire__ItemDesc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Done(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_Fail(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    pkgAcquire::ItemDesc *arg2 = 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireStatus_Fail",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgAcquire__ItemDesc,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->Fail(*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_Pulse(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    pkgAcquire *arg2 = (pkgAcquire *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgAcquireStatus_Pulse",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Pulse(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_Start(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireStatus_Start",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Start();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgAcquireStatus_Stop(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgAcquireStatus_Stop",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Stop();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgAcquireStatus(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatus *arg1 = (pkgAcquireStatus *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgAcquireStatus",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatus,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgAcquireStatus_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgAcquireStatus, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgPackageManager_GetArchives(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgPackageManager *arg1 = (pkgPackageManager *) 0 ;
    pkgAcquire *arg2 = (pkgAcquire *) 0 ;
    pkgSourceList *arg3 = (pkgSourceList *) 0 ;
    pkgRecords *arg4 = (pkgRecords *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    PyObject * obj3 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOOO:pkgPackageManager_GetArchives",&obj0,&obj1,&obj2,&obj3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgPackageManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj3,(void **) &arg4, SWIGTYPE_p_pkgRecords,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetArchives(arg2,arg3,arg4);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgPackageManager_DoInstall(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgPackageManager *arg1 = (pkgPackageManager *) 0 ;
    int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgPackageManager_DoInstall",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgPackageManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        Py_BEGIN_ALLOW_THREADS
        result = (int)(arg1)->DoInstall();
        
        Py_END_ALLOW_THREADS
    }
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgPackageManager_FixMissing(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgPackageManager *arg1 = (pkgPackageManager *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgPackageManager_FixMissing",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgPackageManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->FixMissing();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgPackageManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgDepCache *arg1 = (pkgDepCache *) 0 ;
    pkgPackageManager *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_pkgPackageManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgPackageManager *)new pkgPackageManager(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgPackageManager, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgPackageManager(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgPackageManager *arg1 = (pkgPackageManager *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgPackageManager",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgPackageManager,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgPackageManager_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgPackageManager, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_pkgSourceList_ReadMainList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSourceList_ReadMainList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ReadMainList();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_Read(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    string arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSourceList_Read",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (bool)(arg1)->Read(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_ReadVendors(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSourceList_ReadVendors",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->ReadVendors();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_Reset(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSourceList_Reset",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Reset();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_ReadAppend(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    string arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSourceList_ReadAppend",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (bool)(arg1)->ReadAppend(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_ReadSourceDir(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    string arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSourceList_ReadSourceDir",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1))
        arg2 = std::string(PyString_AsString(obj1),
        PyString_Size(obj1));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (bool)(arg1)->ReadSourceDir(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_begin(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    SwigValueWrapper< pkgSourceList::const_iterator > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSourceList_begin",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgSourceList const *)arg1)->begin();
    
    {
        pkgSourceList::const_iterator * resultptr;
        resultptr = new pkgSourceList::const_iterator((pkgSourceList::const_iterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_pkgSourceList__const_iterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_end(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    SwigValueWrapper< pkgSourceList::const_iterator > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSourceList_end",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = ((pkgSourceList const *)arg1)->end();
    
    {
        pkgSourceList::const_iterator * resultptr;
        resultptr = new pkgSourceList::const_iterator((pkgSourceList::const_iterator &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_pkgSourceList__const_iterator, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_size(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    unsigned int result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSourceList_size",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (unsigned int)((pkgSourceList const *)arg1)->size();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:pkgSourceList_empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgSourceList const *)arg1)->empty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_FindIndex(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    pkgCache::PkgFileIterator arg2 ;
    pkgIndexFile **arg3 = 0 ;
    bool result;
    pkgCache::PkgFileIterator *argp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OOO:pkgSourceList_FindIndex",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &argp2, SWIGTYPE_p_pkgCache__PkgFileIterator,SWIG_POINTER_EXCEPTION) == -1)) SWIG_fail;
    arg2 = *argp2; 
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_p_pkgIndexFile,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)((pkgSourceList const *)arg1)->FindIndex(arg2,*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_GetIndexes(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    pkgAcquire *arg2 = (pkgAcquire *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSourceList_GetIndexes",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgSourceList const *)arg1)->GetIndexes(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_pkgSourceList_GetReleases(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    pkgAcquire *arg2 = (pkgAcquire *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:pkgSourceList_GetReleases",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgAcquire,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)((pkgSourceList const *)arg1)->GetReleases(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgSourceList__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgSourceList")) goto fail;
    result = (pkgSourceList *)new pkgSourceList();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgSourceList, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgSourceList__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    string arg1 ;
    pkgSourceList *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_pkgSourceList",&obj0)) goto fail;
    {
        if (PyString_Check(obj0))
        arg1 = std::string(PyString_AsString(obj0),
        PyString_Size(obj0));
        else
        SWIG_exception(SWIG_TypeError, "string expected");
    }
    result = (pkgSourceList *)new pkgSourceList(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgSourceList, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgSourceList(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[2];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 1); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 0) {
        return _wrap_new_pkgSourceList__SWIG_0(self,args);
    }
    if (argc == 1) {
        int _v;
        {
            _v = PyString_Check(argv[0]) ? 1 : 0;
        }
        if (_v) {
            return _wrap_new_pkgSourceList__SWIG_1(self,args);
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'new_pkgSourceList'");
    return NULL;
}


static PyObject *_wrap_delete_pkgSourceList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgSourceList *arg1 = (pkgSourceList *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgSourceList",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgSourceList,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgSourceList_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgSourceList, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_GlobalError_PushState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GlobalError_PushState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->PushState();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_PopState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GlobalError_PopState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->PopState();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_PopBackState(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GlobalError_PopBackState",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->PopBackState();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_Errno(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:GlobalError_Errno",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Errno((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_WarningE(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    char *arg2 ;
    char *arg3 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:GlobalError_WarningE",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->WarningE((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_Error(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:GlobalError_Error",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Error((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_Warning(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:GlobalError_Warning",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->Warning((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_PendingError(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GlobalError_PendingError",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->PendingError();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_empty(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GlobalError_empty",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->empty();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_PopMessage(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    string *arg2 = 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:GlobalError_PopMessage",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_string,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg2 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    result = (bool)(arg1)->PopMessage(*arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_Discard(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GlobalError_Discard",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Discard();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_GlobalError_DumpErrors(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:GlobalError_DumpErrors",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->DumpErrors();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_GlobalError(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_GlobalError")) goto fail;
    result = (GlobalError *)new GlobalError();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_GlobalError, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_GlobalError(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *arg1 = (GlobalError *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_GlobalError",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_GlobalError,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * GlobalError_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_GlobalError, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap__GetErrorObj(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    GlobalError *result;
    
    if(!PyArg_ParseTuple(args,(char *)":_GetErrorObj")) goto fail;
    result = (GlobalError *)_GetErrorObj();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_GlobalError, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LuaCacheControl_Open__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    LuaCacheControl *arg1 = (LuaCacheControl *) 0 ;
    pkgDepCache *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LuaCacheControl_Open",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_LuaCacheControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgDepCache *)(arg1)->Open();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgDepCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LuaCacheControl_Open__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    LuaCacheControl *arg1 = (LuaCacheControl *) 0 ;
    bool arg2 ;
    pkgDepCache *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:LuaCacheControl_Open",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_LuaCacheControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    result = (pkgDepCache *)(arg1)->Open(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgDepCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_LuaCacheControl_Open(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 1) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_LuaCacheControl, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            return _wrap_LuaCacheControl_Open__SWIG_0(self,args);
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_LuaCacheControl, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = (PyInt_Check(argv[1]) || PyLong_Check(argv[1])) ? 1 : 0;
            }
            if (_v) {
                return _wrap_LuaCacheControl_Open__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'LuaCacheControl_Open'");
    return NULL;
}


static PyObject *_wrap_LuaCacheControl_Close(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    LuaCacheControl *arg1 = (LuaCacheControl *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:LuaCacheControl_Close",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_LuaCacheControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->Close();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_LuaCacheControl(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    LuaCacheControl *arg1 = (LuaCacheControl *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_LuaCacheControl",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_LuaCacheControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * LuaCacheControl_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_LuaCacheControl, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_Lua_RunInteractive__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 = (char *) NULL ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|s:Lua_RunInteractive",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->RunInteractive((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_RunInteractive__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    string *arg2 = 0 ;
    std::string temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Lua_RunInteractive",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1),
            PyString_Size(obj1));
            arg2 = &temp2;
        } else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->RunInteractive((string const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_RunInteractive(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 1) && (argc <= 2)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            if (argc <= 1) {
                return _wrap_Lua_RunInteractive__SWIG_0(self,args);
            }
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_Lua_RunInteractive__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_Lua_RunInteractive__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Lua_RunInteractive'");
    return NULL;
}


static PyObject *_wrap_Lua_RunScript__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    string *arg2 = 0 ;
    string const &arg3_defvalue = "" ;
    string *arg3 = (string *) &arg3_defvalue ;
    bool result;
    std::string temp2 ;
    std::string temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO|O:Lua_RunScript",&obj0,&obj1,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1),
            PyString_Size(obj1));
            arg2 = &temp2;
        } else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    if (obj2) {
        {
            if (PyString_Check(obj2)) {
                temp3 = std::string(PyString_AsString(obj2),
                PyString_Size(obj2));
                arg3 = &temp3;
            } else {
                SWIG_exception(SWIG_TypeError, "string expected");
            }
        }
    }
    result = (bool)(arg1)->RunScript((string const &)*arg2,(string const &)*arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_RunScript__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    char *arg3 = (char *) NULL ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|s:Lua_RunScript",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->RunScript((char const *)arg2,(char const *)arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_RunScript(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[4];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 3); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_Lua_RunScript__SWIG_0(self,args);
                }
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Lua_RunScript__SWIG_0(self,args);
                }
            }
        }
    }
    if ((argc >= 2) && (argc <= 3)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                if (argc <= 2) {
                    return _wrap_Lua_RunScript__SWIG_1(self,args);
                }
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Lua_RunScript__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Lua_RunScript'");
    return NULL;
}


static PyObject *_wrap_Lua_RunScripts(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    bool arg3 = (bool) false ;
    bool result;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os|O:Lua_RunScripts",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj2) {
        arg3 = PyInt_AsLong(obj2) ? true : false;
        if (PyErr_Occurred()) SWIG_fail;
    }
    result = (bool)(arg1)->RunScripts((char const *)arg2,arg3);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_HasScripts(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_HasScripts",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->HasScripts((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_ResetScript__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    string *arg2 = 0 ;
    std::string temp2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Lua_ResetScript",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj1)) {
            temp2 = std::string(PyString_AsString(obj1),
            PyString_Size(obj1));
            arg2 = &temp2;
        } else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->ResetScript((string const &)*arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_ResetScript__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_ResetScript",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetScript((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_ResetScript(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[3];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 2); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_Lua_ResetScript__SWIG_0(self,args);
            }
        }
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_Lua_ResetScript__SWIG_1(self,args);
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Lua_ResetScript'");
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_0(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_SetGlobal",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetGlobal((char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_1(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    char *arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Oss:Lua_SetGlobal",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetGlobal((char const *)arg2,(char const *)arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_2(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    bool arg3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:Lua_SetGlobal",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg3 = PyInt_AsLong(obj2) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    (arg1)->SetGlobal((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_3(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    double arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osd:Lua_SetGlobal",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetGlobal((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_4(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    void *arg3 = (void *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:Lua_SetGlobal",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, 0, SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetGlobal((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_5(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    string *arg3 = 0 ;
    std::string temp3 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:Lua_SetGlobal",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    {
        if (PyString_Check(obj2)) {
            temp3 = std::string(PyString_AsString(obj2),
            PyString_Size(obj2));
            arg3 = &temp3;
        } else {
            SWIG_exception(SWIG_TypeError, "string expected");
        }
    }
    (arg1)->SetGlobal((char const *)arg2,(string const &)*arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_6(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    int arg3 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Osi:Lua_SetGlobal",&obj0,&arg2,&arg3)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetGlobal((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_7(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    lua_CFunction arg3 = (lua_CFunction) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:Lua_SetGlobal",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_lua_CFunction,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetGlobal((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_8(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    char **arg3 = (char **) 0 ;
    int arg4 = (int) -1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:Lua_SetGlobal",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_p_char,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetGlobal((char const *)arg2,(char const **)arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_9(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    pkgCache::Package *arg3 = (pkgCache::Package *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO:Lua_SetGlobal",&obj0,&arg2,&obj2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_pkgCache__Package,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetGlobal((char const *)arg2,arg3);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_10(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    std::vector<char const * > *arg3 = 0 ;
    int arg4 = (int) -1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:Lua_SetGlobal",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_std__vectorTchar_const_p_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetGlobal((char const *)arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_11(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    std::vector<string > *arg3 = 0 ;
    int arg4 = (int) -1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:Lua_SetGlobal",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_std__vectorTstd__string_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetGlobal((char const *)arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal__SWIG_12(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    std::vector<pkgCache::Package * > *arg3 = 0 ;
    int arg4 = (int) -1 ;
    PyObject * obj0 = 0 ;
    PyObject * obj2 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OsO|i:Lua_SetGlobal",&obj0,&arg2,&obj2,&arg4)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj2,(void **) &arg3, SWIGTYPE_p_std__vectorTpkgCache__Package_p_t,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg3 == NULL) {
        PyErr_SetString(PyExc_TypeError,"null reference"); SWIG_fail; 
    }
    (arg1)->SetGlobal((char const *)arg2,*arg3,arg4);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetGlobal(PyObject *self, PyObject *args) {
    int argc;
    PyObject *argv[5];
    int ii;
    
    argc = PyObject_Length(args);
    for (ii = 0; (ii < argc) && (ii < 4); ii++) {
        argv[ii] = PyTuple_GetItem(args,ii);
    }
    if (argc == 2) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                return _wrap_Lua_SetGlobal__SWIG_0(self,args);
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_lua_CFunction, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Lua_SetGlobal__SWIG_7(self,args);
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_p_char, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_Lua_SetGlobal__SWIG_8(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_Lua_SetGlobal__SWIG_8(self,args);
                    }
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_pkgCache__Package, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Lua_SetGlobal__SWIG_9(self,args);
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_std__vectorTchar_const_p_t, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_Lua_SetGlobal__SWIG_10(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_Lua_SetGlobal__SWIG_10(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_std__vectorTstd__string_t, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_Lua_SetGlobal__SWIG_11(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_Lua_SetGlobal__SWIG_11(self,args);
                    }
                }
            }
        }
    }
    if ((argc >= 3) && (argc <= 4)) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, SWIGTYPE_p_std__vectorTpkgCache__Package_p_t, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    if (argc <= 3) {
                        return _wrap_Lua_SetGlobal__SWIG_12(self,args);
                    }
                    {
                        _v = (PyInt_Check(argv[3]) || PyLong_Check(argv[3])) ? 1 : 0;
                    }
                    if (_v) {
                        return _wrap_Lua_SetGlobal__SWIG_12(self,args);
                    }
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    void *ptr;
                    if (SWIG_ConvertPtr(argv[2], (void **) &ptr, 0, 0) == -1) {
                        _v = 0;
                        PyErr_Clear();
                    } else {
                        _v = 1;
                    }
                }
                if (_v) {
                    return _wrap_Lua_SetGlobal__SWIG_4(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Lua_SetGlobal__SWIG_2(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Lua_SetGlobal__SWIG_6(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = (PyFloat_Check(argv[2]) || PyInt_Check(argv[2]) || PyLong_Check(argv[2])) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Lua_SetGlobal__SWIG_3(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Lua_SetGlobal__SWIG_5(self,args);
                }
            }
        }
    }
    if (argc == 3) {
        int _v;
        {
            void *ptr;
            if (SWIG_ConvertPtr(argv[0], (void **) &ptr, SWIGTYPE_p_Lua, 0) == -1) {
                _v = 0;
                PyErr_Clear();
            } else {
                _v = 1;
            }
        }
        if (_v) {
            {
                _v = PyString_Check(argv[1]) ? 1 : 0;
            }
            if (_v) {
                {
                    _v = PyString_Check(argv[2]) ? 1 : 0;
                }
                if (_v) {
                    return _wrap_Lua_SetGlobal__SWIG_1(self,args);
                }
            }
        }
    }
    
    PyErr_SetString(PyExc_TypeError,"No matching function for overloaded 'Lua_SetGlobal'");
    return NULL;
}


static PyObject *_wrap_Lua_ResetGlobals(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Lua_ResetGlobals",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetGlobals();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetGlobalStr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_GetGlobalStr",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)(arg1)->GetGlobalStr((char const *)arg2);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetGlobalStrList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    std::vector<string > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_GetGlobalStrList",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetGlobalStrList((char const *)arg2);
    
    {
        std::vector<string > * resultptr;
        resultptr = new std::vector<string >((std::vector<string > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_std__vectorTstd__string_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetGlobalNum(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    double result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_GetGlobalNum",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (double)(arg1)->GetGlobalNum((char const *)arg2);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetGlobalBool(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_GetGlobalBool",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetGlobalBool((char const *)arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetGlobalPtr(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    void *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_GetGlobalPtr",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (void *)(arg1)->GetGlobalPtr((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_void, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetGlobalPkg(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    pkgCache::Package *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_GetGlobalPkg",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgCache::Package *)(arg1)->GetGlobalPkg((char const *)arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache__Package, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetGlobalPkgList(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    char *arg2 ;
    SwigValueWrapper< std::vector<pkgCache::Package * > > result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:Lua_GetGlobalPkgList",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (arg1)->GetGlobalPkgList((char const *)arg2);
    
    {
        std::vector<pkgCache::Package * > * resultptr;
        resultptr = new std::vector<pkgCache::Package * >((std::vector<pkgCache::Package * > &) result);
        resultobj = SWIG_NewPointerObj((void *) resultptr, SWIGTYPE_p_std__vectorTpkgCache__Package_p_t, 1);
    }
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetDepCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    pkgDepCache *arg2 = (pkgDepCache *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Lua_SetDepCache",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgDepCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDepCache(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    pkgCache *arg2 = (pkgCache *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Lua_SetCache",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgCache,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCache(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetCacheControl(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    LuaCacheControl *arg2 = (LuaCacheControl *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Lua_SetCacheControl",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_LuaCacheControl,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetCacheControl(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetProblemResolver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    pkgProblemResolver *arg2 = (pkgProblemResolver *) 0 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:Lua_SetProblemResolver",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_pkgProblemResolver,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetProblemResolver(arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_SetDontFix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Lua_SetDontFix",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->SetDontFix();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_ResetCaches(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Lua_ResetCaches",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    (arg1)->ResetCaches();
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetDepCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    lua_State *arg2 = (lua_State *) NULL ;
    pkgDepCache *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:Lua_GetDepCache",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_lua_State,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (pkgDepCache *)(arg1)->GetDepCache(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgDepCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetCache(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    lua_State *arg2 = (lua_State *) NULL ;
    pkgCache *result;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|O:Lua_GetCache",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (obj1) {
        if ((SWIG_ConvertPtr(obj1,(void **) &arg2, SWIGTYPE_p_lua_State,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    }
    result = (pkgCache *)(arg1)->GetCache(arg2);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgCache, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetCacheControl(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    LuaCacheControl *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Lua_GetCacheControl",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (LuaCacheControl *)(arg1)->GetCacheControl();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_LuaCacheControl, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetProblemResolver(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    pkgProblemResolver *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Lua_GetProblemResolver",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (pkgProblemResolver *)(arg1)->GetProblemResolver();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgProblemResolver, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_Lua_GetDontFix(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:Lua_GetDontFix",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->GetDontFix();
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_Lua(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_Lua")) goto fail;
    result = (Lua *)new Lua();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Lua, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_Lua(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *arg1 = (Lua *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_Lua",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_Lua,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * Lua_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_Lua, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap__GetLuaObj(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    Lua *result;
    
    if(!PyArg_ParseTuple(args,(char *)":_GetLuaObj")) goto fail;
    result = (Lua *)_GetLuaObj();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_Lua, 0);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_pkgAcquireStatusDumb(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatusDumb *result;
    
    if(!PyArg_ParseTuple(args,(char *)":new_pkgAcquireStatusDumb")) goto fail;
    result = (pkgAcquireStatusDumb *)new pkgAcquireStatusDumb();
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_pkgAcquireStatusDumb, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_pkgAcquireStatusDumb(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    pkgAcquireStatusDumb *arg1 = (pkgAcquireStatusDumb *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_pkgAcquireStatusDumb",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_pkgAcquireStatusDumb,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * pkgAcquireStatusDumb_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_pkgAcquireStatusDumb, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyObject *_wrap_ROpPyProgress_Op_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:ROpPyProgress_Op_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    ROpPyProgress_Op_set(arg1,(char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ROpPyProgress_Op_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ROpPyProgress_Op_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)ROpPyProgress_Op_get(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ROpPyProgress_SubOp_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    char *arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Os:ROpPyProgress_SubOp_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    ROpPyProgress_SubOp_set(arg1,(char const *)arg2);
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ROpPyProgress_SubOp_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    char *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ROpPyProgress_SubOp_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (char *)ROpPyProgress_SubOp_get(arg1);
    
    resultobj = result ? PyString_FromString(result) : Py_BuildValue((char*)"");
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ROpPyProgress_Percent_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    float arg2 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"Of:ROpPyProgress_Percent_set",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    if (arg1) (arg1)->Percent = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ROpPyProgress_Percent_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    float result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ROpPyProgress_Percent_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (float) ((arg1)->Percent);
    
    resultobj = PyFloat_FromDouble(result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ROpPyProgress_MajorChange_set(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    bool arg2 ;
    PyObject * obj0 = 0 ;
    PyObject * obj1 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"OO:ROpPyProgress_MajorChange_set",&obj0,&obj1)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    arg2 = PyInt_AsLong(obj1) ? true : false;
    if (PyErr_Occurred()) SWIG_fail;
    if (arg1) (arg1)->MajorChange = arg2;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ROpPyProgress_MajorChange_get(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:ROpPyProgress_MajorChange_get",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool) ((arg1)->MajorChange);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_ROpPyProgress_CheckChange(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    float arg2 = (float) 0.7 ;
    bool result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O|f:ROpPyProgress_CheckChange",&obj0,&arg2)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    result = (bool)(arg1)->CheckChange(arg2);
    
    resultobj = PyInt_FromLong((long)result);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_new_ROpPyProgress(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    PyObject *arg1 = (PyObject *) 0 ;
    ROpPyProgress *result;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:new_ROpPyProgress",&obj0)) goto fail;
    arg1 = obj0;
    result = (ROpPyProgress *)new ROpPyProgress(arg1);
    
    resultobj = SWIG_NewPointerObj((void *) result, SWIGTYPE_p_ROpPyProgress, 1);
    return resultobj;
    fail:
    return NULL;
}


static PyObject *_wrap_delete_ROpPyProgress(PyObject *self, PyObject *args) {
    PyObject *resultobj;
    ROpPyProgress *arg1 = (ROpPyProgress *) 0 ;
    PyObject * obj0 = 0 ;
    
    if(!PyArg_ParseTuple(args,(char *)"O:delete_ROpPyProgress",&obj0)) goto fail;
    if ((SWIG_ConvertPtr(obj0,(void **) &arg1, SWIGTYPE_p_ROpPyProgress,SWIG_POINTER_EXCEPTION | 0 )) == -1) SWIG_fail;
    delete arg1;
    
    Py_INCREF(Py_None); resultobj = Py_None;
    return resultobj;
    fail:
    return NULL;
}


static PyObject * ROpPyProgress_swigregister(PyObject *self, PyObject *args) {
    PyObject *obj;
    if (!PyArg_ParseTuple(args,(char*)"O", &obj)) return NULL;
    SWIG_TypeClientData(SWIGTYPE_p_ROpPyProgress, obj);
    Py_INCREF(obj);
    return Py_BuildValue((char *)"");
}
static PyMethodDef SwigMethods[] = {
	 { (char *)"pkgInit", _wrap_pkgInit, METH_VARARGS },
	 { (char *)"pkgInitConfig", _wrap_pkgInitConfig, METH_VARARGS },
	 { (char *)"pkgInitSystem", _wrap_pkgInitSystem, METH_VARARGS },
	 { (char *)"pkgCache_HeaderP_set", _wrap_pkgCache_HeaderP_set, METH_VARARGS },
	 { (char *)"pkgCache_HeaderP_get", _wrap_pkgCache_HeaderP_get, METH_VARARGS },
	 { (char *)"pkgCache_PkgP_set", _wrap_pkgCache_PkgP_set, METH_VARARGS },
	 { (char *)"pkgCache_PkgP_get", _wrap_pkgCache_PkgP_get, METH_VARARGS },
	 { (char *)"pkgCache_VerFileP_set", _wrap_pkgCache_VerFileP_set, METH_VARARGS },
	 { (char *)"pkgCache_VerFileP_get", _wrap_pkgCache_VerFileP_get, METH_VARARGS },
	 { (char *)"pkgCache_PkgFileP_set", _wrap_pkgCache_PkgFileP_set, METH_VARARGS },
	 { (char *)"pkgCache_PkgFileP_get", _wrap_pkgCache_PkgFileP_get, METH_VARARGS },
	 { (char *)"pkgCache_VerP_set", _wrap_pkgCache_VerP_set, METH_VARARGS },
	 { (char *)"pkgCache_VerP_get", _wrap_pkgCache_VerP_get, METH_VARARGS },
	 { (char *)"pkgCache_ProvideP_set", _wrap_pkgCache_ProvideP_set, METH_VARARGS },
	 { (char *)"pkgCache_ProvideP_get", _wrap_pkgCache_ProvideP_get, METH_VARARGS },
	 { (char *)"pkgCache_DepP_set", _wrap_pkgCache_DepP_set, METH_VARARGS },
	 { (char *)"pkgCache_DepP_get", _wrap_pkgCache_DepP_get, METH_VARARGS },
	 { (char *)"pkgCache_StringItemP_set", _wrap_pkgCache_StringItemP_set, METH_VARARGS },
	 { (char *)"pkgCache_StringItemP_get", _wrap_pkgCache_StringItemP_get, METH_VARARGS },
	 { (char *)"pkgCache_StrP_set", _wrap_pkgCache_StrP_set, METH_VARARGS },
	 { (char *)"pkgCache_StrP_get", _wrap_pkgCache_StrP_get, METH_VARARGS },
	 { (char *)"pkgCache_ReMap", _wrap_pkgCache_ReMap, METH_VARARGS },
	 { (char *)"pkgCache_Sync", _wrap_pkgCache_Sync, METH_VARARGS },
	 { (char *)"pkgCache_GetMap", _wrap_pkgCache_GetMap, METH_VARARGS },
	 { (char *)"pkgCache_DataEnd", _wrap_pkgCache_DataEnd, METH_VARARGS },
	 { (char *)"pkgCache_Hash", _wrap_pkgCache_Hash, METH_VARARGS },
	 { (char *)"pkgCache_Priority", _wrap_pkgCache_Priority, METH_VARARGS },
	 { (char *)"pkgCache_FindPkg", _wrap_pkgCache_FindPkg, METH_VARARGS },
	 { (char *)"pkgCache_FindPackage", _wrap_pkgCache_FindPackage, METH_VARARGS },
	 { (char *)"pkgCache_Head", _wrap_pkgCache_Head, METH_VARARGS },
	 { (char *)"pkgCache_PkgIter", _wrap_pkgCache_PkgIter, METH_VARARGS },
	 { (char *)"pkgCache_FileIter", _wrap_pkgCache_FileIter, METH_VARARGS },
	 { (char *)"pkgCache_VS_set", _wrap_pkgCache_VS_set, METH_VARARGS },
	 { (char *)"pkgCache_VS_get", _wrap_pkgCache_VS_get, METH_VARARGS },
	 { (char *)"pkgCache_CompTypeDeb", _wrap_pkgCache_CompTypeDeb, METH_VARARGS },
	 { (char *)"pkgCache_CompType", _wrap_pkgCache_CompType, METH_VARARGS },
	 { (char *)"pkgCache_DepType", _wrap_pkgCache_DepType, METH_VARARGS },
	 { (char *)"new_pkgCache", _wrap_new_pkgCache, METH_VARARGS },
	 { (char *)"delete_pkgCache", _wrap_delete_pkgCache, METH_VARARGS },
	 { (char *)"pkgCache_swigregister", pkgCache_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheHeader_Signature_set", _wrap_pkgCacheHeader_Signature_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_Signature_get", _wrap_pkgCacheHeader_Signature_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_MajorVersion_set", _wrap_pkgCacheHeader_MajorVersion_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_MajorVersion_get", _wrap_pkgCacheHeader_MajorVersion_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_MinorVersion_set", _wrap_pkgCacheHeader_MinorVersion_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_MinorVersion_get", _wrap_pkgCacheHeader_MinorVersion_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_Dirty_set", _wrap_pkgCacheHeader_Dirty_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_Dirty_get", _wrap_pkgCacheHeader_Dirty_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_HasFileDeps_set", _wrap_pkgCacheHeader_HasFileDeps_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_HasFileDeps_get", _wrap_pkgCacheHeader_HasFileDeps_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_OptionsHash_set", _wrap_pkgCacheHeader_OptionsHash_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_OptionsHash_get", _wrap_pkgCacheHeader_OptionsHash_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_HeaderSz_set", _wrap_pkgCacheHeader_HeaderSz_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_HeaderSz_get", _wrap_pkgCacheHeader_HeaderSz_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_PackageSz_set", _wrap_pkgCacheHeader_PackageSz_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_PackageSz_get", _wrap_pkgCacheHeader_PackageSz_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_PackageFileSz_set", _wrap_pkgCacheHeader_PackageFileSz_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_PackageFileSz_get", _wrap_pkgCacheHeader_PackageFileSz_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VersionSz_set", _wrap_pkgCacheHeader_VersionSz_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VersionSz_get", _wrap_pkgCacheHeader_VersionSz_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_DependencySz_set", _wrap_pkgCacheHeader_DependencySz_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_DependencySz_get", _wrap_pkgCacheHeader_DependencySz_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_ProvidesSz_set", _wrap_pkgCacheHeader_ProvidesSz_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_ProvidesSz_get", _wrap_pkgCacheHeader_ProvidesSz_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VerFileSz_set", _wrap_pkgCacheHeader_VerFileSz_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VerFileSz_get", _wrap_pkgCacheHeader_VerFileSz_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_PackageCount_set", _wrap_pkgCacheHeader_PackageCount_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_PackageCount_get", _wrap_pkgCacheHeader_PackageCount_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VersionCount_set", _wrap_pkgCacheHeader_VersionCount_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VersionCount_get", _wrap_pkgCacheHeader_VersionCount_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_DependsCount_set", _wrap_pkgCacheHeader_DependsCount_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_DependsCount_get", _wrap_pkgCacheHeader_DependsCount_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_PackageFileCount_set", _wrap_pkgCacheHeader_PackageFileCount_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_PackageFileCount_get", _wrap_pkgCacheHeader_PackageFileCount_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VerFileCount_set", _wrap_pkgCacheHeader_VerFileCount_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VerFileCount_get", _wrap_pkgCacheHeader_VerFileCount_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_ProvidesCount_set", _wrap_pkgCacheHeader_ProvidesCount_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_ProvidesCount_get", _wrap_pkgCacheHeader_ProvidesCount_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_FileList_set", _wrap_pkgCacheHeader_FileList_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_FileList_get", _wrap_pkgCacheHeader_FileList_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_StringList_set", _wrap_pkgCacheHeader_StringList_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_StringList_get", _wrap_pkgCacheHeader_StringList_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VerSysName_set", _wrap_pkgCacheHeader_VerSysName_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_VerSysName_get", _wrap_pkgCacheHeader_VerSysName_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_Architecture_set", _wrap_pkgCacheHeader_Architecture_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_Architecture_get", _wrap_pkgCacheHeader_Architecture_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_MaxVerFileSize_set", _wrap_pkgCacheHeader_MaxVerFileSize_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_MaxVerFileSize_get", _wrap_pkgCacheHeader_MaxVerFileSize_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_Pools_set", _wrap_pkgCacheHeader_Pools_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_Pools_get", _wrap_pkgCacheHeader_Pools_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_HashTable_set", _wrap_pkgCacheHeader_HashTable_set, METH_VARARGS },
	 { (char *)"pkgCacheHeader_HashTable_get", _wrap_pkgCacheHeader_HashTable_get, METH_VARARGS },
	 { (char *)"pkgCacheHeader_CheckSizes", _wrap_pkgCacheHeader_CheckSizes, METH_VARARGS },
	 { (char *)"new_pkgCacheHeader", _wrap_new_pkgCacheHeader, METH_VARARGS },
	 { (char *)"delete_pkgCacheHeader", _wrap_delete_pkgCacheHeader, METH_VARARGS },
	 { (char *)"pkgCacheHeader_swigregister", pkgCacheHeader_swigregister, METH_VARARGS },
	 { (char *)"pkgCachePackage_Name_set", _wrap_pkgCachePackage_Name_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_Name_get", _wrap_pkgCachePackage_Name_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_VersionList_set", _wrap_pkgCachePackage_VersionList_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_VersionList_get", _wrap_pkgCachePackage_VersionList_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_CurrentVer_set", _wrap_pkgCachePackage_CurrentVer_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_CurrentVer_get", _wrap_pkgCachePackage_CurrentVer_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_Section_set", _wrap_pkgCachePackage_Section_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_Section_get", _wrap_pkgCachePackage_Section_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_NextPackage_set", _wrap_pkgCachePackage_NextPackage_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_NextPackage_get", _wrap_pkgCachePackage_NextPackage_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_RevDepends_set", _wrap_pkgCachePackage_RevDepends_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_RevDepends_get", _wrap_pkgCachePackage_RevDepends_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_ProvidesList_set", _wrap_pkgCachePackage_ProvidesList_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_ProvidesList_get", _wrap_pkgCachePackage_ProvidesList_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_SelectedState_set", _wrap_pkgCachePackage_SelectedState_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_SelectedState_get", _wrap_pkgCachePackage_SelectedState_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_InstState_set", _wrap_pkgCachePackage_InstState_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_InstState_get", _wrap_pkgCachePackage_InstState_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_CurrentState_set", _wrap_pkgCachePackage_CurrentState_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_CurrentState_get", _wrap_pkgCachePackage_CurrentState_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_ID_set", _wrap_pkgCachePackage_ID_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_ID_get", _wrap_pkgCachePackage_ID_get, METH_VARARGS },
	 { (char *)"pkgCachePackage_Flags_set", _wrap_pkgCachePackage_Flags_set, METH_VARARGS },
	 { (char *)"pkgCachePackage_Flags_get", _wrap_pkgCachePackage_Flags_get, METH_VARARGS },
	 { (char *)"new_pkgCachePackage", _wrap_new_pkgCachePackage, METH_VARARGS },
	 { (char *)"delete_pkgCachePackage", _wrap_delete_pkgCachePackage, METH_VARARGS },
	 { (char *)"pkgCachePackage_swigregister", pkgCachePackage_swigregister, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_FileName_set", _wrap_pkgCachePackageFile_FileName_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_FileName_get", _wrap_pkgCachePackageFile_FileName_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Archive_set", _wrap_pkgCachePackageFile_Archive_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Archive_get", _wrap_pkgCachePackageFile_Archive_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Component_set", _wrap_pkgCachePackageFile_Component_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Component_get", _wrap_pkgCachePackageFile_Component_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Version_set", _wrap_pkgCachePackageFile_Version_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Version_get", _wrap_pkgCachePackageFile_Version_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Origin_set", _wrap_pkgCachePackageFile_Origin_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Origin_get", _wrap_pkgCachePackageFile_Origin_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Label_set", _wrap_pkgCachePackageFile_Label_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Label_get", _wrap_pkgCachePackageFile_Label_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Architecture_set", _wrap_pkgCachePackageFile_Architecture_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Architecture_get", _wrap_pkgCachePackageFile_Architecture_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Site_set", _wrap_pkgCachePackageFile_Site_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Site_get", _wrap_pkgCachePackageFile_Site_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_IndexType_set", _wrap_pkgCachePackageFile_IndexType_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_IndexType_get", _wrap_pkgCachePackageFile_IndexType_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Size_set", _wrap_pkgCachePackageFile_Size_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Size_get", _wrap_pkgCachePackageFile_Size_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Flags_set", _wrap_pkgCachePackageFile_Flags_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_Flags_get", _wrap_pkgCachePackageFile_Flags_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_NextFile_set", _wrap_pkgCachePackageFile_NextFile_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_NextFile_get", _wrap_pkgCachePackageFile_NextFile_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_ID_set", _wrap_pkgCachePackageFile_ID_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_ID_get", _wrap_pkgCachePackageFile_ID_get, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_mtime_set", _wrap_pkgCachePackageFile_mtime_set, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_mtime_get", _wrap_pkgCachePackageFile_mtime_get, METH_VARARGS },
	 { (char *)"new_pkgCachePackageFile", _wrap_new_pkgCachePackageFile, METH_VARARGS },
	 { (char *)"delete_pkgCachePackageFile", _wrap_delete_pkgCachePackageFile, METH_VARARGS },
	 { (char *)"pkgCachePackageFile_swigregister", pkgCachePackageFile_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheVerFile_File_set", _wrap_pkgCacheVerFile_File_set, METH_VARARGS },
	 { (char *)"pkgCacheVerFile_File_get", _wrap_pkgCacheVerFile_File_get, METH_VARARGS },
	 { (char *)"pkgCacheVerFile_NextFile_set", _wrap_pkgCacheVerFile_NextFile_set, METH_VARARGS },
	 { (char *)"pkgCacheVerFile_NextFile_get", _wrap_pkgCacheVerFile_NextFile_get, METH_VARARGS },
	 { (char *)"pkgCacheVerFile_Offset_set", _wrap_pkgCacheVerFile_Offset_set, METH_VARARGS },
	 { (char *)"pkgCacheVerFile_Offset_get", _wrap_pkgCacheVerFile_Offset_get, METH_VARARGS },
	 { (char *)"pkgCacheVerFile_Size_set", _wrap_pkgCacheVerFile_Size_set, METH_VARARGS },
	 { (char *)"pkgCacheVerFile_Size_get", _wrap_pkgCacheVerFile_Size_get, METH_VARARGS },
	 { (char *)"new_pkgCacheVerFile", _wrap_new_pkgCacheVerFile, METH_VARARGS },
	 { (char *)"delete_pkgCacheVerFile", _wrap_delete_pkgCacheVerFile, METH_VARARGS },
	 { (char *)"pkgCacheVerFile_swigregister", pkgCacheVerFile_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheVersion_VerStr_set", _wrap_pkgCacheVersion_VerStr_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_VerStr_get", _wrap_pkgCacheVersion_VerStr_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Section_set", _wrap_pkgCacheVersion_Section_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Section_get", _wrap_pkgCacheVersion_Section_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Arch_set", _wrap_pkgCacheVersion_Arch_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Arch_get", _wrap_pkgCacheVersion_Arch_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_FileList_set", _wrap_pkgCacheVersion_FileList_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_FileList_get", _wrap_pkgCacheVersion_FileList_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_NextVer_set", _wrap_pkgCacheVersion_NextVer_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_NextVer_get", _wrap_pkgCacheVersion_NextVer_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_DependsList_set", _wrap_pkgCacheVersion_DependsList_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_DependsList_get", _wrap_pkgCacheVersion_DependsList_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_ParentPkg_set", _wrap_pkgCacheVersion_ParentPkg_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_ParentPkg_get", _wrap_pkgCacheVersion_ParentPkg_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_ProvidesList_set", _wrap_pkgCacheVersion_ProvidesList_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_ProvidesList_get", _wrap_pkgCacheVersion_ProvidesList_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Size_set", _wrap_pkgCacheVersion_Size_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Size_get", _wrap_pkgCacheVersion_Size_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_InstalledSize_set", _wrap_pkgCacheVersion_InstalledSize_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_InstalledSize_get", _wrap_pkgCacheVersion_InstalledSize_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Hash_set", _wrap_pkgCacheVersion_Hash_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Hash_get", _wrap_pkgCacheVersion_Hash_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_ID_set", _wrap_pkgCacheVersion_ID_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_ID_get", _wrap_pkgCacheVersion_ID_get, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Priority_set", _wrap_pkgCacheVersion_Priority_set, METH_VARARGS },
	 { (char *)"pkgCacheVersion_Priority_get", _wrap_pkgCacheVersion_Priority_get, METH_VARARGS },
	 { (char *)"new_pkgCacheVersion", _wrap_new_pkgCacheVersion, METH_VARARGS },
	 { (char *)"delete_pkgCacheVersion", _wrap_delete_pkgCacheVersion, METH_VARARGS },
	 { (char *)"pkgCacheVersion_swigregister", pkgCacheVersion_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheDependency_Version_set", _wrap_pkgCacheDependency_Version_set, METH_VARARGS },
	 { (char *)"pkgCacheDependency_Version_get", _wrap_pkgCacheDependency_Version_get, METH_VARARGS },
	 { (char *)"pkgCacheDependency_Package_set", _wrap_pkgCacheDependency_Package_set, METH_VARARGS },
	 { (char *)"pkgCacheDependency_Package_get", _wrap_pkgCacheDependency_Package_get, METH_VARARGS },
	 { (char *)"pkgCacheDependency_NextDepends_set", _wrap_pkgCacheDependency_NextDepends_set, METH_VARARGS },
	 { (char *)"pkgCacheDependency_NextDepends_get", _wrap_pkgCacheDependency_NextDepends_get, METH_VARARGS },
	 { (char *)"pkgCacheDependency_NextRevDepends_set", _wrap_pkgCacheDependency_NextRevDepends_set, METH_VARARGS },
	 { (char *)"pkgCacheDependency_NextRevDepends_get", _wrap_pkgCacheDependency_NextRevDepends_get, METH_VARARGS },
	 { (char *)"pkgCacheDependency_ParentVer_set", _wrap_pkgCacheDependency_ParentVer_set, METH_VARARGS },
	 { (char *)"pkgCacheDependency_ParentVer_get", _wrap_pkgCacheDependency_ParentVer_get, METH_VARARGS },
	 { (char *)"pkgCacheDependency_ID_set", _wrap_pkgCacheDependency_ID_set, METH_VARARGS },
	 { (char *)"pkgCacheDependency_ID_get", _wrap_pkgCacheDependency_ID_get, METH_VARARGS },
	 { (char *)"pkgCacheDependency_Type_set", _wrap_pkgCacheDependency_Type_set, METH_VARARGS },
	 { (char *)"pkgCacheDependency_Type_get", _wrap_pkgCacheDependency_Type_get, METH_VARARGS },
	 { (char *)"pkgCacheDependency_CompareOp_set", _wrap_pkgCacheDependency_CompareOp_set, METH_VARARGS },
	 { (char *)"pkgCacheDependency_CompareOp_get", _wrap_pkgCacheDependency_CompareOp_get, METH_VARARGS },
	 { (char *)"new_pkgCacheDependency", _wrap_new_pkgCacheDependency, METH_VARARGS },
	 { (char *)"delete_pkgCacheDependency", _wrap_delete_pkgCacheDependency, METH_VARARGS },
	 { (char *)"pkgCacheDependency_swigregister", pkgCacheDependency_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheProvides_ParentPkg_set", _wrap_pkgCacheProvides_ParentPkg_set, METH_VARARGS },
	 { (char *)"pkgCacheProvides_ParentPkg_get", _wrap_pkgCacheProvides_ParentPkg_get, METH_VARARGS },
	 { (char *)"pkgCacheProvides_Version_set", _wrap_pkgCacheProvides_Version_set, METH_VARARGS },
	 { (char *)"pkgCacheProvides_Version_get", _wrap_pkgCacheProvides_Version_get, METH_VARARGS },
	 { (char *)"pkgCacheProvides_ProvideVersion_set", _wrap_pkgCacheProvides_ProvideVersion_set, METH_VARARGS },
	 { (char *)"pkgCacheProvides_ProvideVersion_get", _wrap_pkgCacheProvides_ProvideVersion_get, METH_VARARGS },
	 { (char *)"pkgCacheProvides_NextProvides_set", _wrap_pkgCacheProvides_NextProvides_set, METH_VARARGS },
	 { (char *)"pkgCacheProvides_NextProvides_get", _wrap_pkgCacheProvides_NextProvides_get, METH_VARARGS },
	 { (char *)"pkgCacheProvides_NextPkgProv_set", _wrap_pkgCacheProvides_NextPkgProv_set, METH_VARARGS },
	 { (char *)"pkgCacheProvides_NextPkgProv_get", _wrap_pkgCacheProvides_NextPkgProv_get, METH_VARARGS },
	 { (char *)"new_pkgCacheProvides", _wrap_new_pkgCacheProvides, METH_VARARGS },
	 { (char *)"delete_pkgCacheProvides", _wrap_delete_pkgCacheProvides, METH_VARARGS },
	 { (char *)"pkgCacheProvides_swigregister", pkgCacheProvides_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheStringItem_String_set", _wrap_pkgCacheStringItem_String_set, METH_VARARGS },
	 { (char *)"pkgCacheStringItem_String_get", _wrap_pkgCacheStringItem_String_get, METH_VARARGS },
	 { (char *)"pkgCacheStringItem_NextItem_set", _wrap_pkgCacheStringItem_NextItem_set, METH_VARARGS },
	 { (char *)"pkgCacheStringItem_NextItem_get", _wrap_pkgCacheStringItem_NextItem_get, METH_VARARGS },
	 { (char *)"new_pkgCacheStringItem", _wrap_new_pkgCacheStringItem, METH_VARARGS },
	 { (char *)"delete_pkgCacheStringItem", _wrap_delete_pkgCacheStringItem, METH_VARARGS },
	 { (char *)"pkgCacheStringItem_swigregister", pkgCacheStringItem_swigregister, METH_VARARGS },
	 { (char *)"pkgDepCache_BuildGroupOrs", _wrap_pkgDepCache_BuildGroupOrs, METH_VARARGS },
	 { (char *)"pkgDepCache_UpdateVerState", _wrap_pkgDepCache_UpdateVerState, METH_VARARGS },
	 { (char *)"pkgDepCache_Head", _wrap_pkgDepCache_Head, METH_VARARGS },
	 { (char *)"pkgDepCache_PkgIter", _wrap_pkgDepCache_PkgIter, METH_VARARGS },
	 { (char *)"pkgDepCache_FindPkg", _wrap_pkgDepCache_FindPkg, METH_VARARGS },
	 { (char *)"pkgDepCache_GetCache", _wrap_pkgDepCache_GetCache, METH_VARARGS },
	 { (char *)"pkgDepCache_VS", _wrap_pkgDepCache_VS, METH_VARARGS },
	 { (char *)"pkgDepCache_GetCandidateVer", _wrap_pkgDepCache_GetCandidateVer, METH_VARARGS },
	 { (char *)"pkgDepCache_IsImportantDep", _wrap_pkgDepCache_IsImportantDep, METH_VARARGS },
	 { (char *)"pkgDepCache_GetPolicy", _wrap_pkgDepCache_GetPolicy, METH_VARARGS },
	 { (char *)"pkgDepCache_GetPkgPriority", _wrap_pkgDepCache_GetPkgPriority, METH_VARARGS },
	 { (char *)"pkgDepCache___getitem__", _wrap_pkgDepCache___getitem__, METH_VARARGS },
	 { (char *)"pkgDepCache_MarkKeep", _wrap_pkgDepCache_MarkKeep, METH_VARARGS },
	 { (char *)"pkgDepCache_MarkDelete", _wrap_pkgDepCache_MarkDelete, METH_VARARGS },
	 { (char *)"pkgDepCache_MarkInstall", _wrap_pkgDepCache_MarkInstall, METH_VARARGS },
	 { (char *)"pkgDepCache_SetReInstall", _wrap_pkgDepCache_SetReInstall, METH_VARARGS },
	 { (char *)"pkgDepCache_SetCandidateVersion", _wrap_pkgDepCache_SetCandidateVersion, METH_VARARGS },
	 { (char *)"pkgDepCache_Update", _wrap_pkgDepCache_Update, METH_VARARGS },
	 { (char *)"pkgDepCache_UsrSize", _wrap_pkgDepCache_UsrSize, METH_VARARGS },
	 { (char *)"pkgDepCache_DebSize", _wrap_pkgDepCache_DebSize, METH_VARARGS },
	 { (char *)"pkgDepCache_DelCount", _wrap_pkgDepCache_DelCount, METH_VARARGS },
	 { (char *)"pkgDepCache_KeepCount", _wrap_pkgDepCache_KeepCount, METH_VARARGS },
	 { (char *)"pkgDepCache_InstCount", _wrap_pkgDepCache_InstCount, METH_VARARGS },
	 { (char *)"pkgDepCache_BrokenCount", _wrap_pkgDepCache_BrokenCount, METH_VARARGS },
	 { (char *)"pkgDepCache_BadCount", _wrap_pkgDepCache_BadCount, METH_VARARGS },
	 { (char *)"pkgDepCache_Init", _wrap_pkgDepCache_Init, METH_VARARGS },
	 { (char *)"new_pkgDepCache", _wrap_new_pkgDepCache, METH_VARARGS },
	 { (char *)"delete_pkgDepCache", _wrap_delete_pkgDepCache, METH_VARARGS },
	 { (char *)"pkgDepCache_swigregister", pkgDepCache_swigregister, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_CandVersion_get", _wrap_pkgDepCacheStateCache_CandVersion_get, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_CurVersion_get", _wrap_pkgDepCacheStateCache_CurVersion_get, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_CandidateVer_set", _wrap_pkgDepCacheStateCache_CandidateVer_set, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_CandidateVer_get", _wrap_pkgDepCacheStateCache_CandidateVer_get, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_InstallVer_set", _wrap_pkgDepCacheStateCache_InstallVer_set, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_InstallVer_get", _wrap_pkgDepCacheStateCache_InstallVer_get, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Flags_set", _wrap_pkgDepCacheStateCache_Flags_set, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Flags_get", _wrap_pkgDepCacheStateCache_Flags_get, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_iFlags_set", _wrap_pkgDepCacheStateCache_iFlags_set, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_iFlags_get", _wrap_pkgDepCacheStateCache_iFlags_get, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Status_set", _wrap_pkgDepCacheStateCache_Status_set, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Status_get", _wrap_pkgDepCacheStateCache_Status_get, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Mode_set", _wrap_pkgDepCacheStateCache_Mode_set, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Mode_get", _wrap_pkgDepCacheStateCache_Mode_get, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_DepState_set", _wrap_pkgDepCacheStateCache_DepState_set, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_DepState_get", _wrap_pkgDepCacheStateCache_DepState_get, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_StripEpoch", _wrap_pkgDepCacheStateCache_StripEpoch, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Update", _wrap_pkgDepCacheStateCache_Update, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_NewInstall", _wrap_pkgDepCacheStateCache_NewInstall, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Delete", _wrap_pkgDepCacheStateCache_Delete, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Keep", _wrap_pkgDepCacheStateCache_Keep, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Upgrade", _wrap_pkgDepCacheStateCache_Upgrade, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Upgradable", _wrap_pkgDepCacheStateCache_Upgradable, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Downgrade", _wrap_pkgDepCacheStateCache_Downgrade, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Held", _wrap_pkgDepCacheStateCache_Held, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_NowBroken", _wrap_pkgDepCacheStateCache_NowBroken, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_InstBroken", _wrap_pkgDepCacheStateCache_InstBroken, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_Install", _wrap_pkgDepCacheStateCache_Install, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_InstVerIter", _wrap_pkgDepCacheStateCache_InstVerIter, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_CandidateVerIter", _wrap_pkgDepCacheStateCache_CandidateVerIter, METH_VARARGS },
	 { (char *)"new_pkgDepCacheStateCache", _wrap_new_pkgDepCacheStateCache, METH_VARARGS },
	 { (char *)"delete_pkgDepCacheStateCache", _wrap_delete_pkgDepCacheStateCache, METH_VARARGS },
	 { (char *)"pkgDepCacheStateCache_swigregister", pkgDepCacheStateCache_swigregister, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator___nonzero__", _wrap_pkgCachePkgIterator___nonzero__, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_next", _wrap_pkgCachePkgIterator_next, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator___iter__", _wrap_pkgCachePkgIterator___iter__, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_end", _wrap_pkgCachePkgIterator_end, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator___eq__", _wrap_pkgCachePkgIterator___eq__, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator___ne__", _wrap_pkgCachePkgIterator___ne__, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator___deref__", _wrap_pkgCachePkgIterator___deref__, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator___mul__", _wrap_pkgCachePkgIterator___mul__, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_Package", _wrap_pkgCachePkgIterator_Package, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_Cache", _wrap_pkgCachePkgIterator_Cache, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_Name", _wrap_pkgCachePkgIterator_Name, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_Section", _wrap_pkgCachePkgIterator_Section, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_Purge", _wrap_pkgCachePkgIterator_Purge, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_VersionList", _wrap_pkgCachePkgIterator_VersionList, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_CurrentVer", _wrap_pkgCachePkgIterator_CurrentVer, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_RevDependsList", _wrap_pkgCachePkgIterator_RevDependsList, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_ProvidesList", _wrap_pkgCachePkgIterator_ProvidesList, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_Index", _wrap_pkgCachePkgIterator_Index, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_State", _wrap_pkgCachePkgIterator_State, METH_VARARGS },
	 { (char *)"new_pkgCachePkgIterator", _wrap_new_pkgCachePkgIterator, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_NextPackage_get", _wrap_pkgCachePkgIterator_NextPackage_get, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_RevDepends_get", _wrap_pkgCachePkgIterator_RevDepends_get, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_SelectedState_get", _wrap_pkgCachePkgIterator_SelectedState_get, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_InstState_get", _wrap_pkgCachePkgIterator_InstState_get, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_CurrentState_get", _wrap_pkgCachePkgIterator_CurrentState_get, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_ID_get", _wrap_pkgCachePkgIterator_ID_get, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_Flags_get", _wrap_pkgCachePkgIterator_Flags_get, METH_VARARGS },
	 { (char *)"delete_pkgCachePkgIterator", _wrap_delete_pkgCachePkgIterator, METH_VARARGS },
	 { (char *)"pkgCachePkgIterator_swigregister", pkgCachePkgIterator_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator___nonzero__", _wrap_pkgCacheVerIterator___nonzero__, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_next", _wrap_pkgCacheVerIterator_next, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator___iter__", _wrap_pkgCacheVerIterator___iter__, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_end", _wrap_pkgCacheVerIterator_end, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_assign", _wrap_pkgCacheVerIterator_assign, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator___eq__", _wrap_pkgCacheVerIterator___eq__, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator___ne__", _wrap_pkgCacheVerIterator___ne__, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_CompareVer", _wrap_pkgCacheVerIterator_CompareVer, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator___deref__", _wrap_pkgCacheVerIterator___deref__, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator___mul__", _wrap_pkgCacheVerIterator___mul__, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Version", _wrap_pkgCacheVerIterator_Version, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Cache", _wrap_pkgCacheVerIterator_Cache, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_VerStr", _wrap_pkgCacheVerIterator_VerStr, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Section", _wrap_pkgCacheVerIterator_Section, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Arch", _wrap_pkgCacheVerIterator_Arch, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_ParentPkg", _wrap_pkgCacheVerIterator_ParentPkg, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_DependsList", _wrap_pkgCacheVerIterator_DependsList, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_ProvidesList", _wrap_pkgCacheVerIterator_ProvidesList, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_FileList", _wrap_pkgCacheVerIterator_FileList, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Index", _wrap_pkgCacheVerIterator_Index, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Downloadable", _wrap_pkgCacheVerIterator_Downloadable, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_PriorityType", _wrap_pkgCacheVerIterator_PriorityType, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_RelStr", _wrap_pkgCacheVerIterator_RelStr, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Automatic", _wrap_pkgCacheVerIterator_Automatic, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_NewestFile", _wrap_pkgCacheVerIterator_NewestFile, METH_VARARGS },
	 { (char *)"new_pkgCacheVerIterator", _wrap_new_pkgCacheVerIterator, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_NextVer_get", _wrap_pkgCacheVerIterator_NextVer_get, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Size_get", _wrap_pkgCacheVerIterator_Size_get, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_InstalledSize_get", _wrap_pkgCacheVerIterator_InstalledSize_get, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Hash_get", _wrap_pkgCacheVerIterator_Hash_get, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_ID_get", _wrap_pkgCacheVerIterator_ID_get, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_Priority_get", _wrap_pkgCacheVerIterator_Priority_get, METH_VARARGS },
	 { (char *)"delete_pkgCacheVerIterator", _wrap_delete_pkgCacheVerIterator, METH_VARARGS },
	 { (char *)"pkgCacheVerIterator_swigregister", pkgCacheVerIterator_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator___nonzero__", _wrap_pkgCacheDepIterator___nonzero__, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_next", _wrap_pkgCacheDepIterator_next, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator___iter__", _wrap_pkgCacheDepIterator___iter__, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_end", _wrap_pkgCacheDepIterator_end, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator___eq__", _wrap_pkgCacheDepIterator___eq__, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator___ne__", _wrap_pkgCacheDepIterator___ne__, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator___deref__", _wrap_pkgCacheDepIterator___deref__, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator___mul__", _wrap_pkgCacheDepIterator___mul__, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_Dependency", _wrap_pkgCacheDepIterator_Dependency, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_Cache", _wrap_pkgCacheDepIterator_Cache, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_TargetVer", _wrap_pkgCacheDepIterator_TargetVer, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_TargetPkg", _wrap_pkgCacheDepIterator_TargetPkg, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_ParentVer", _wrap_pkgCacheDepIterator_ParentVer, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_ParentPkg", _wrap_pkgCacheDepIterator_ParentPkg, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_Reverse", _wrap_pkgCacheDepIterator_Reverse, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_Index", _wrap_pkgCacheDepIterator_Index, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_IsCritical", _wrap_pkgCacheDepIterator_IsCritical, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_GlobOr", _wrap_pkgCacheDepIterator_GlobOr, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_AllTargets", _wrap_pkgCacheDepIterator_AllTargets, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_SmartTargetPkg", _wrap_pkgCacheDepIterator_SmartTargetPkg, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_CompType", _wrap_pkgCacheDepIterator_CompType, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_DepType", _wrap_pkgCacheDepIterator_DepType, METH_VARARGS },
	 { (char *)"new_pkgCacheDepIterator", _wrap_new_pkgCacheDepIterator, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_Version_get", _wrap_pkgCacheDepIterator_Version_get, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_Package_get", _wrap_pkgCacheDepIterator_Package_get, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_NextDepends_get", _wrap_pkgCacheDepIterator_NextDepends_get, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_NextRevDepends_get", _wrap_pkgCacheDepIterator_NextRevDepends_get, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_ID_get", _wrap_pkgCacheDepIterator_ID_get, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_Type_get", _wrap_pkgCacheDepIterator_Type_get, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_CompareOp_get", _wrap_pkgCacheDepIterator_CompareOp_get, METH_VARARGS },
	 { (char *)"delete_pkgCacheDepIterator", _wrap_delete_pkgCacheDepIterator, METH_VARARGS },
	 { (char *)"pkgCacheDepIterator_swigregister", pkgCacheDepIterator_swigregister, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator___nonzero__", _wrap_pkgCachePrvIterator___nonzero__, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_next", _wrap_pkgCachePrvIterator_next, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator___iter__", _wrap_pkgCachePrvIterator___iter__, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_end", _wrap_pkgCachePrvIterator_end, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator___eq__", _wrap_pkgCachePrvIterator___eq__, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator___ne__", _wrap_pkgCachePrvIterator___ne__, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator___deref__", _wrap_pkgCachePrvIterator___deref__, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator___mul__", _wrap_pkgCachePrvIterator___mul__, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_Provides", _wrap_pkgCachePrvIterator_Provides, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_Cache", _wrap_pkgCachePrvIterator_Cache, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_Name", _wrap_pkgCachePrvIterator_Name, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_ProvideVersion", _wrap_pkgCachePrvIterator_ProvideVersion, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_ParentPkg", _wrap_pkgCachePrvIterator_ParentPkg, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_OwnerVer", _wrap_pkgCachePrvIterator_OwnerVer, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_OwnerPkg", _wrap_pkgCachePrvIterator_OwnerPkg, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_Index", _wrap_pkgCachePrvIterator_Index, METH_VARARGS },
	 { (char *)"new_pkgCachePrvIterator", _wrap_new_pkgCachePrvIterator, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_Version_get", _wrap_pkgCachePrvIterator_Version_get, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_NextProvides_get", _wrap_pkgCachePrvIterator_NextProvides_get, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_NextPkgProv_get", _wrap_pkgCachePrvIterator_NextPkgProv_get, METH_VARARGS },
	 { (char *)"delete_pkgCachePrvIterator", _wrap_delete_pkgCachePrvIterator, METH_VARARGS },
	 { (char *)"pkgCachePrvIterator_swigregister", pkgCachePrvIterator_swigregister, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator___nonzero__", _wrap_pkgCachePkgFileIterator___nonzero__, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_next", _wrap_pkgCachePkgFileIterator_next, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator___iter__", _wrap_pkgCachePkgFileIterator___iter__, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_end", _wrap_pkgCachePkgFileIterator_end, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator___eq__", _wrap_pkgCachePkgFileIterator___eq__, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator___ne__", _wrap_pkgCachePkgFileIterator___ne__, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator___deref__", _wrap_pkgCachePkgFileIterator___deref__, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator___mul__", _wrap_pkgCachePkgFileIterator___mul__, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_PackageFile", _wrap_pkgCachePkgFileIterator_PackageFile, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Cache", _wrap_pkgCachePkgFileIterator_Cache, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_FileName", _wrap_pkgCachePkgFileIterator_FileName, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Archive", _wrap_pkgCachePkgFileIterator_Archive, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Component", _wrap_pkgCachePkgFileIterator_Component, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Version", _wrap_pkgCachePkgFileIterator_Version, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Origin", _wrap_pkgCachePkgFileIterator_Origin, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Label", _wrap_pkgCachePkgFileIterator_Label, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Site", _wrap_pkgCachePkgFileIterator_Site, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Architecture", _wrap_pkgCachePkgFileIterator_Architecture, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_IndexType", _wrap_pkgCachePkgFileIterator_IndexType, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Index", _wrap_pkgCachePkgFileIterator_Index, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_IsOk", _wrap_pkgCachePkgFileIterator_IsOk, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_RelStr", _wrap_pkgCachePkgFileIterator_RelStr, METH_VARARGS },
	 { (char *)"new_pkgCachePkgFileIterator", _wrap_new_pkgCachePkgFileIterator, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Size_get", _wrap_pkgCachePkgFileIterator_Size_get, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_Flags_get", _wrap_pkgCachePkgFileIterator_Flags_get, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_NextFile_get", _wrap_pkgCachePkgFileIterator_NextFile_get, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_ID_get", _wrap_pkgCachePkgFileIterator_ID_get, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_mtime_get", _wrap_pkgCachePkgFileIterator_mtime_get, METH_VARARGS },
	 { (char *)"delete_pkgCachePkgFileIterator", _wrap_delete_pkgCachePkgFileIterator, METH_VARARGS },
	 { (char *)"pkgCachePkgFileIterator_swigregister", pkgCachePkgFileIterator_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator___nonzero__", _wrap_pkgCacheVerFileIterator___nonzero__, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_next", _wrap_pkgCacheVerFileIterator_next, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator___iter__", _wrap_pkgCacheVerFileIterator___iter__, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_end", _wrap_pkgCacheVerFileIterator_end, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator___eq__", _wrap_pkgCacheVerFileIterator___eq__, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator___ne__", _wrap_pkgCacheVerFileIterator___ne__, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator___deref__", _wrap_pkgCacheVerFileIterator___deref__, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator___mul__", _wrap_pkgCacheVerFileIterator___mul__, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_VerFile", _wrap_pkgCacheVerFileIterator_VerFile, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_Cache", _wrap_pkgCacheVerFileIterator_Cache, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_File", _wrap_pkgCacheVerFileIterator_File, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_Index", _wrap_pkgCacheVerFileIterator_Index, METH_VARARGS },
	 { (char *)"new_pkgCacheVerFileIterator", _wrap_new_pkgCacheVerFileIterator, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_NextFile_get", _wrap_pkgCacheVerFileIterator_NextFile_get, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_Offset_get", _wrap_pkgCacheVerFileIterator_Offset_get, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_Size_get", _wrap_pkgCacheVerFileIterator_Size_get, METH_VARARGS },
	 { (char *)"delete_pkgCacheVerFileIterator", _wrap_delete_pkgCacheVerFileIterator, METH_VARARGS },
	 { (char *)"pkgCacheVerFileIterator_swigregister", pkgCacheVerFileIterator_swigregister, METH_VARARGS },
	 { (char *)"pkgCacheFile_Policy_set", _wrap_pkgCacheFile_Policy_set, METH_VARARGS },
	 { (char *)"pkgCacheFile_Policy_get", _wrap_pkgCacheFile_Policy_get, METH_VARARGS },
	 { (char *)"pkgCacheFile_pkgCache", _wrap_pkgCacheFile_pkgCache, METH_VARARGS },
	 { (char *)"pkgCacheFile_pkgDepCache", _wrap_pkgCacheFile_pkgDepCache, METH_VARARGS },
	 { (char *)"pkgCacheFile___deref__", _wrap_pkgCacheFile___deref__, METH_VARARGS },
	 { (char *)"pkgCacheFile___mul__", _wrap_pkgCacheFile___mul__, METH_VARARGS },
	 { (char *)"pkgCacheFile___getitem__", _wrap_pkgCacheFile___getitem__, METH_VARARGS },
	 { (char *)"pkgCacheFile_BuildCaches", _wrap_pkgCacheFile_BuildCaches, METH_VARARGS },
	 { (char *)"pkgCacheFile_Open", _wrap_pkgCacheFile_Open, METH_VARARGS },
	 { (char *)"pkgCacheFile_Close", _wrap_pkgCacheFile_Close, METH_VARARGS },
	 { (char *)"new_pkgCacheFile", _wrap_new_pkgCacheFile, METH_VARARGS },
	 { (char *)"delete_pkgCacheFile", _wrap_delete_pkgCacheFile, METH_VARARGS },
	 { (char *)"pkgCacheFile_BuildGroupOrs", _wrap_pkgCacheFile_BuildGroupOrs, METH_VARARGS },
	 { (char *)"pkgCacheFile_UpdateVerState", _wrap_pkgCacheFile_UpdateVerState, METH_VARARGS },
	 { (char *)"pkgCacheFile_Head", _wrap_pkgCacheFile_Head, METH_VARARGS },
	 { (char *)"pkgCacheFile_PkgIter", _wrap_pkgCacheFile_PkgIter, METH_VARARGS },
	 { (char *)"pkgCacheFile_FindPkg", _wrap_pkgCacheFile_FindPkg, METH_VARARGS },
	 { (char *)"pkgCacheFile_GetCache", _wrap_pkgCacheFile_GetCache, METH_VARARGS },
	 { (char *)"pkgCacheFile_VS", _wrap_pkgCacheFile_VS, METH_VARARGS },
	 { (char *)"pkgCacheFile_GetCandidateVer", _wrap_pkgCacheFile_GetCandidateVer, METH_VARARGS },
	 { (char *)"pkgCacheFile_IsImportantDep", _wrap_pkgCacheFile_IsImportantDep, METH_VARARGS },
	 { (char *)"pkgCacheFile_GetPolicy", _wrap_pkgCacheFile_GetPolicy, METH_VARARGS },
	 { (char *)"pkgCacheFile_GetPkgPriority", _wrap_pkgCacheFile_GetPkgPriority, METH_VARARGS },
	 { (char *)"pkgCacheFile_MarkKeep", _wrap_pkgCacheFile_MarkKeep, METH_VARARGS },
	 { (char *)"pkgCacheFile_MarkDelete", _wrap_pkgCacheFile_MarkDelete, METH_VARARGS },
	 { (char *)"pkgCacheFile_MarkInstall", _wrap_pkgCacheFile_MarkInstall, METH_VARARGS },
	 { (char *)"pkgCacheFile_SetReInstall", _wrap_pkgCacheFile_SetReInstall, METH_VARARGS },
	 { (char *)"pkgCacheFile_SetCandidateVersion", _wrap_pkgCacheFile_SetCandidateVersion, METH_VARARGS },
	 { (char *)"pkgCacheFile_Update", _wrap_pkgCacheFile_Update, METH_VARARGS },
	 { (char *)"pkgCacheFile_UsrSize", _wrap_pkgCacheFile_UsrSize, METH_VARARGS },
	 { (char *)"pkgCacheFile_DebSize", _wrap_pkgCacheFile_DebSize, METH_VARARGS },
	 { (char *)"pkgCacheFile_DelCount", _wrap_pkgCacheFile_DelCount, METH_VARARGS },
	 { (char *)"pkgCacheFile_KeepCount", _wrap_pkgCacheFile_KeepCount, METH_VARARGS },
	 { (char *)"pkgCacheFile_InstCount", _wrap_pkgCacheFile_InstCount, METH_VARARGS },
	 { (char *)"pkgCacheFile_BrokenCount", _wrap_pkgCacheFile_BrokenCount, METH_VARARGS },
	 { (char *)"pkgCacheFile_BadCount", _wrap_pkgCacheFile_BadCount, METH_VARARGS },
	 { (char *)"pkgCacheFile_Init", _wrap_pkgCacheFile_Init, METH_VARARGS },
	 { (char *)"pkgCacheFile_swigregister", pkgCacheFile_swigregister, METH_VARARGS },
	 { (char *)"pkgProblemResolver_Protect", _wrap_pkgProblemResolver_Protect, METH_VARARGS },
	 { (char *)"pkgProblemResolver_Remove", _wrap_pkgProblemResolver_Remove, METH_VARARGS },
	 { (char *)"pkgProblemResolver_Clear", _wrap_pkgProblemResolver_Clear, METH_VARARGS },
	 { (char *)"pkgProblemResolver_Resolve", _wrap_pkgProblemResolver_Resolve, METH_VARARGS },
	 { (char *)"pkgProblemResolver_ResolveByKeep", _wrap_pkgProblemResolver_ResolveByKeep, METH_VARARGS },
	 { (char *)"pkgProblemResolver_InstallProtect", _wrap_pkgProblemResolver_InstallProtect, METH_VARARGS },
	 { (char *)"pkgProblemResolver_RemoveDepends", _wrap_pkgProblemResolver_RemoveDepends, METH_VARARGS },
	 { (char *)"new_pkgProblemResolver", _wrap_new_pkgProblemResolver, METH_VARARGS },
	 { (char *)"delete_pkgProblemResolver", _wrap_delete_pkgProblemResolver, METH_VARARGS },
	 { (char *)"pkgProblemResolver_swigregister", pkgProblemResolver_swigregister, METH_VARARGS },
	 { (char *)"pkgDistUpgrade", _wrap_pkgDistUpgrade, METH_VARARGS },
	 { (char *)"pkgApplyStatus", _wrap_pkgApplyStatus, METH_VARARGS },
	 { (char *)"pkgFixBroken", _wrap_pkgFixBroken, METH_VARARGS },
	 { (char *)"pkgAllUpgrade", _wrap_pkgAllUpgrade, METH_VARARGS },
	 { (char *)"pkgMinimizeUpgrade", _wrap_pkgMinimizeUpgrade, METH_VARARGS },
	 { (char *)"pkgPrioSortList", _wrap_pkgPrioSortList, METH_VARARGS },
	 { (char *)"pkgSystem_GetSystem", _wrap_pkgSystem_GetSystem, METH_VARARGS },
	 { (char *)"pkgSystem_Label_get", _wrap_pkgSystem_Label_get, METH_VARARGS },
	 { (char *)"pkgSystem_VS_set", _wrap_pkgSystem_VS_set, METH_VARARGS },
	 { (char *)"pkgSystem_VS_get", _wrap_pkgSystem_VS_get, METH_VARARGS },
	 { (char *)"pkgSystem_Lock", _wrap_pkgSystem_Lock, METH_VARARGS },
	 { (char *)"pkgSystem_UnLock", _wrap_pkgSystem_UnLock, METH_VARARGS },
	 { (char *)"pkgSystem_LockRead", _wrap_pkgSystem_LockRead, METH_VARARGS },
	 { (char *)"pkgSystem_CacheBuilt", _wrap_pkgSystem_CacheBuilt, METH_VARARGS },
	 { (char *)"pkgSystem_CreatePM", _wrap_pkgSystem_CreatePM, METH_VARARGS },
	 { (char *)"pkgSystem_Initialize", _wrap_pkgSystem_Initialize, METH_VARARGS },
	 { (char *)"pkgSystem_ArchiveSupported", _wrap_pkgSystem_ArchiveSupported, METH_VARARGS },
	 { (char *)"pkgSystem_AddStatusFiles", _wrap_pkgSystem_AddStatusFiles, METH_VARARGS },
	 { (char *)"pkgSystem_AddSourceFiles", _wrap_pkgSystem_AddSourceFiles, METH_VARARGS },
	 { (char *)"pkgSystem_FindIndex", _wrap_pkgSystem_FindIndex, METH_VARARGS },
	 { (char *)"pkgSystem_Score", _wrap_pkgSystem_Score, METH_VARARGS },
	 { (char *)"pkgSystem_PreProcess", _wrap_pkgSystem_PreProcess, METH_VARARGS },
	 { (char *)"pkgSystem_ProcessCache", _wrap_pkgSystem_ProcessCache, METH_VARARGS },
	 { (char *)"pkgSystem_IgnoreDep", _wrap_pkgSystem_IgnoreDep, METH_VARARGS },
	 { (char *)"pkgSystem_OptionsHash", _wrap_pkgSystem_OptionsHash, METH_VARARGS },
	 { (char *)"delete_pkgSystem", _wrap_delete_pkgSystem, METH_VARARGS },
	 { (char *)"pkgSystem_swigregister", pkgSystem_swigregister, METH_VARARGS },
	 { (char *)"Configuration_Find", _wrap_Configuration_Find, METH_VARARGS },
	 { (char *)"Configuration_FindFile", _wrap_Configuration_FindFile, METH_VARARGS },
	 { (char *)"Configuration_FindDir", _wrap_Configuration_FindDir, METH_VARARGS },
	 { (char *)"Configuration_FindI", _wrap_Configuration_FindI, METH_VARARGS },
	 { (char *)"Configuration_FindB", _wrap_Configuration_FindB, METH_VARARGS },
	 { (char *)"Configuration_FindAny", _wrap_Configuration_FindAny, METH_VARARGS },
	 { (char *)"Configuration_CndSet", _wrap_Configuration_CndSet, METH_VARARGS },
	 { (char *)"Configuration_Set", _wrap_Configuration_Set, METH_VARARGS },
	 { (char *)"Configuration_Exists", _wrap_Configuration_Exists, METH_VARARGS },
	 { (char *)"Configuration_ExistsAny", _wrap_Configuration_ExistsAny, METH_VARARGS },
	 { (char *)"Configuration_Clear", _wrap_Configuration_Clear, METH_VARARGS },
	 { (char *)"Configuration_Tree", _wrap_Configuration_Tree, METH_VARARGS },
	 { (char *)"Configuration_Dump", _wrap_Configuration_Dump, METH_VARARGS },
	 { (char *)"new_Configuration", _wrap_new_Configuration, METH_VARARGS },
	 { (char *)"delete_Configuration", _wrap_delete_Configuration, METH_VARARGS },
	 { (char *)"Configuration_swigregister", Configuration_swigregister, METH_VARARGS },
	 { (char *)"ReadConfigFile", _wrap_ReadConfigFile, METH_VARARGS },
	 { (char *)"ReadConfigDir", _wrap_ReadConfigDir, METH_VARARGS },
	 { (char *)"ConfigurationItem_Tag_set", _wrap_ConfigurationItem_Tag_set, METH_VARARGS },
	 { (char *)"ConfigurationItem_Tag_get", _wrap_ConfigurationItem_Tag_get, METH_VARARGS },
	 { (char *)"ConfigurationItem_Value_set", _wrap_ConfigurationItem_Value_set, METH_VARARGS },
	 { (char *)"ConfigurationItem_Value_get", _wrap_ConfigurationItem_Value_get, METH_VARARGS },
	 { (char *)"ConfigurationItem_Parent_set", _wrap_ConfigurationItem_Parent_set, METH_VARARGS },
	 { (char *)"ConfigurationItem_Parent_get", _wrap_ConfigurationItem_Parent_get, METH_VARARGS },
	 { (char *)"ConfigurationItem_Child_set", _wrap_ConfigurationItem_Child_set, METH_VARARGS },
	 { (char *)"ConfigurationItem_Child_get", _wrap_ConfigurationItem_Child_get, METH_VARARGS },
	 { (char *)"ConfigurationItem_Next_set", _wrap_ConfigurationItem_Next_set, METH_VARARGS },
	 { (char *)"ConfigurationItem_Next_get", _wrap_ConfigurationItem_Next_get, METH_VARARGS },
	 { (char *)"ConfigurationItem_FullTag", _wrap_ConfigurationItem_FullTag, METH_VARARGS },
	 { (char *)"new_ConfigurationItem", _wrap_new_ConfigurationItem, METH_VARARGS },
	 { (char *)"delete_ConfigurationItem", _wrap_delete_ConfigurationItem, METH_VARARGS },
	 { (char *)"ConfigurationItem_swigregister", ConfigurationItem_swigregister, METH_VARARGS },
	 { (char *)"OpProgress_Progress", _wrap_OpProgress_Progress, METH_VARARGS },
	 { (char *)"OpProgress_SubProgress", _wrap_OpProgress_SubProgress, METH_VARARGS },
	 { (char *)"OpProgress_OverallProgress", _wrap_OpProgress_OverallProgress, METH_VARARGS },
	 { (char *)"OpProgress_Done", _wrap_OpProgress_Done, METH_VARARGS },
	 { (char *)"new_OpProgress", _wrap_new_OpProgress, METH_VARARGS },
	 { (char *)"delete_OpProgress", _wrap_delete_OpProgress, METH_VARARGS },
	 { (char *)"OpProgress_swigregister", OpProgress_swigregister, METH_VARARGS },
	 { (char *)"OpTextProgress_Done", _wrap_OpTextProgress_Done, METH_VARARGS },
	 { (char *)"new_OpTextProgress", _wrap_new_OpTextProgress, METH_VARARGS },
	 { (char *)"delete_OpTextProgress", _wrap_delete_OpTextProgress, METH_VARARGS },
	 { (char *)"OpTextProgress_swigregister", OpTextProgress_swigregister, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_GetVS", _wrap_pkgVersioningSystem_GetVS, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_Label_get", _wrap_pkgVersioningSystem_Label_get, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_DoCmpVersion", _wrap_pkgVersioningSystem_DoCmpVersion, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_DoCmpVersionArch", _wrap_pkgVersioningSystem_DoCmpVersionArch, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_CmpVersionArch", _wrap_pkgVersioningSystem_CmpVersionArch, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_CheckDep", _wrap_pkgVersioningSystem_CheckDep, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_DoCmpReleaseVer", _wrap_pkgVersioningSystem_DoCmpReleaseVer, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_UpstreamVersion", _wrap_pkgVersioningSystem_UpstreamVersion, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_TestCompatibility", _wrap_pkgVersioningSystem_TestCompatibility, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_CmpVersion", _wrap_pkgVersioningSystem_CmpVersion, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_CmpReleaseVer", _wrap_pkgVersioningSystem_CmpReleaseVer, METH_VARARGS },
	 { (char *)"delete_pkgVersioningSystem", _wrap_delete_pkgVersioningSystem, METH_VARARGS },
	 { (char *)"pkgVersioningSystem_swigregister", pkgVersioningSystem_swigregister, METH_VARARGS },
	 { (char *)"pkgRecords_Lookup", _wrap_pkgRecords_Lookup, METH_VARARGS },
	 { (char *)"new_pkgRecords", _wrap_new_pkgRecords, METH_VARARGS },
	 { (char *)"delete_pkgRecords", _wrap_delete_pkgRecords, METH_VARARGS },
	 { (char *)"pkgRecords_swigregister", pkgRecords_swigregister, METH_VARARGS },
	 { (char *)"pkgRecordsParser_FileName", _wrap_pkgRecordsParser_FileName, METH_VARARGS },
	 { (char *)"pkgRecordsParser_MD5Hash", _wrap_pkgRecordsParser_MD5Hash, METH_VARARGS },
	 { (char *)"pkgRecordsParser_SHA1Hash", _wrap_pkgRecordsParser_SHA1Hash, METH_VARARGS },
	 { (char *)"pkgRecordsParser_SourcePkg", _wrap_pkgRecordsParser_SourcePkg, METH_VARARGS },
	 { (char *)"pkgRecordsParser_Maintainer", _wrap_pkgRecordsParser_Maintainer, METH_VARARGS },
	 { (char *)"pkgRecordsParser_ShortDesc", _wrap_pkgRecordsParser_ShortDesc, METH_VARARGS },
	 { (char *)"pkgRecordsParser_LongDesc", _wrap_pkgRecordsParser_LongDesc, METH_VARARGS },
	 { (char *)"pkgRecordsParser_Name", _wrap_pkgRecordsParser_Name, METH_VARARGS },
	 { (char *)"pkgRecordsParser_GetRec", _wrap_pkgRecordsParser_GetRec, METH_VARARGS },
	 { (char *)"pkgRecordsParser_HasFile", _wrap_pkgRecordsParser_HasFile, METH_VARARGS },
	 { (char *)"delete_pkgRecordsParser", _wrap_delete_pkgRecordsParser, METH_VARARGS },
	 { (char *)"pkgRecordsParser_swigregister", pkgRecordsParser_swigregister, METH_VARARGS },
	 { (char *)"pkgAcquireItem_DestFile_get", _wrap_pkgAcquireItem_DestFile_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_ErrorText_get", _wrap_pkgAcquireItem_ErrorText_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Status_set", _wrap_pkgAcquireItem_Status_set, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Status_get", _wrap_pkgAcquireItem_Status_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_FileSize_set", _wrap_pkgAcquireItem_FileSize_set, METH_VARARGS },
	 { (char *)"pkgAcquireItem_FileSize_get", _wrap_pkgAcquireItem_FileSize_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_PartialSize_set", _wrap_pkgAcquireItem_PartialSize_set, METH_VARARGS },
	 { (char *)"pkgAcquireItem_PartialSize_get", _wrap_pkgAcquireItem_PartialSize_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Mode_set", _wrap_pkgAcquireItem_Mode_set, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Mode_get", _wrap_pkgAcquireItem_Mode_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_ID_set", _wrap_pkgAcquireItem_ID_set, METH_VARARGS },
	 { (char *)"pkgAcquireItem_ID_get", _wrap_pkgAcquireItem_ID_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Complete_set", _wrap_pkgAcquireItem_Complete_set, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Complete_get", _wrap_pkgAcquireItem_Complete_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Local_set", _wrap_pkgAcquireItem_Local_set, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Local_get", _wrap_pkgAcquireItem_Local_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_QueueCounter_set", _wrap_pkgAcquireItem_QueueCounter_set, METH_VARARGS },
	 { (char *)"pkgAcquireItem_QueueCounter_get", _wrap_pkgAcquireItem_QueueCounter_get, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Failed", _wrap_pkgAcquireItem_Failed, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Done", _wrap_pkgAcquireItem_Done, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Start", _wrap_pkgAcquireItem_Start, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Custom600Headers", _wrap_pkgAcquireItem_Custom600Headers, METH_VARARGS },
	 { (char *)"pkgAcquireItem_DescURI", _wrap_pkgAcquireItem_DescURI, METH_VARARGS },
	 { (char *)"pkgAcquireItem_Finished", _wrap_pkgAcquireItem_Finished, METH_VARARGS },
	 { (char *)"pkgAcquireItem_MD5Sum", _wrap_pkgAcquireItem_MD5Sum, METH_VARARGS },
	 { (char *)"pkgAcquireItem_GetOwner", _wrap_pkgAcquireItem_GetOwner, METH_VARARGS },
	 { (char *)"delete_pkgAcquireItem", _wrap_delete_pkgAcquireItem, METH_VARARGS },
	 { (char *)"pkgAcquireItem_swigregister", pkgAcquireItem_swigregister, METH_VARARGS },
	 { (char *)"pkgAcqIndex_Done", _wrap_pkgAcqIndex_Done, METH_VARARGS },
	 { (char *)"pkgAcqIndex_Custom600Headers", _wrap_pkgAcqIndex_Custom600Headers, METH_VARARGS },
	 { (char *)"pkgAcqIndex_DescURI", _wrap_pkgAcqIndex_DescURI, METH_VARARGS },
	 { (char *)"new_pkgAcqIndex", _wrap_new_pkgAcqIndex, METH_VARARGS },
	 { (char *)"delete_pkgAcqIndex", _wrap_delete_pkgAcqIndex, METH_VARARGS },
	 { (char *)"pkgAcqIndex_swigregister", pkgAcqIndex_swigregister, METH_VARARGS },
	 { (char *)"pkgAcqIndexRel_Failed", _wrap_pkgAcqIndexRel_Failed, METH_VARARGS },
	 { (char *)"pkgAcqIndexRel_Done", _wrap_pkgAcqIndexRel_Done, METH_VARARGS },
	 { (char *)"pkgAcqIndexRel_Custom600Headers", _wrap_pkgAcqIndexRel_Custom600Headers, METH_VARARGS },
	 { (char *)"pkgAcqIndexRel_DescURI", _wrap_pkgAcqIndexRel_DescURI, METH_VARARGS },
	 { (char *)"new_pkgAcqIndexRel", _wrap_new_pkgAcqIndexRel, METH_VARARGS },
	 { (char *)"delete_pkgAcqIndexRel", _wrap_delete_pkgAcqIndexRel, METH_VARARGS },
	 { (char *)"pkgAcqIndexRel_swigregister", pkgAcqIndexRel_swigregister, METH_VARARGS },
	 { (char *)"pkgAcqArchive_Failed", _wrap_pkgAcqArchive_Failed, METH_VARARGS },
	 { (char *)"pkgAcqArchive_Done", _wrap_pkgAcqArchive_Done, METH_VARARGS },
	 { (char *)"pkgAcqArchive_MD5Sum", _wrap_pkgAcqArchive_MD5Sum, METH_VARARGS },
	 { (char *)"pkgAcqArchive_DescURI", _wrap_pkgAcqArchive_DescURI, METH_VARARGS },
	 { (char *)"pkgAcqArchive_Finished", _wrap_pkgAcqArchive_Finished, METH_VARARGS },
	 { (char *)"new_pkgAcqArchive", _wrap_new_pkgAcqArchive, METH_VARARGS },
	 { (char *)"delete_pkgAcqArchive", _wrap_delete_pkgAcqArchive, METH_VARARGS },
	 { (char *)"pkgAcqArchive_swigregister", pkgAcqArchive_swigregister, METH_VARARGS },
	 { (char *)"pkgAcqFile_Failed", _wrap_pkgAcqFile_Failed, METH_VARARGS },
	 { (char *)"pkgAcqFile_Done", _wrap_pkgAcqFile_Done, METH_VARARGS },
	 { (char *)"pkgAcqFile_MD5Sum", _wrap_pkgAcqFile_MD5Sum, METH_VARARGS },
	 { (char *)"pkgAcqFile_DescURI", _wrap_pkgAcqFile_DescURI, METH_VARARGS },
	 { (char *)"new_pkgAcqFile", _wrap_new_pkgAcqFile, METH_VARARGS },
	 { (char *)"delete_pkgAcqFile", _wrap_delete_pkgAcqFile, METH_VARARGS },
	 { (char *)"pkgAcqFile_swigregister", pkgAcqFile_swigregister, METH_VARARGS },
	 { (char *)"pkgAcquire_ItemsIter", _wrap_pkgAcquire_ItemsIter, METH_VARARGS },
	 { (char *)"pkgAcquire_GetConfig", _wrap_pkgAcquire_GetConfig, METH_VARARGS },
	 { (char *)"pkgAcquire_Run", _wrap_pkgAcquire_Run, METH_VARARGS },
	 { (char *)"pkgAcquire_Shutdown", _wrap_pkgAcquire_Shutdown, METH_VARARGS },
	 { (char *)"pkgAcquire_WorkersBegin", _wrap_pkgAcquire_WorkersBegin, METH_VARARGS },
	 { (char *)"pkgAcquire_WorkerStep", _wrap_pkgAcquire_WorkerStep, METH_VARARGS },
	 { (char *)"pkgAcquire_UriBegin", _wrap_pkgAcquire_UriBegin, METH_VARARGS },
	 { (char *)"pkgAcquire_UriEnd", _wrap_pkgAcquire_UriEnd, METH_VARARGS },
	 { (char *)"pkgAcquire_Clean", _wrap_pkgAcquire_Clean, METH_VARARGS },
	 { (char *)"pkgAcquire_TotalNeeded", _wrap_pkgAcquire_TotalNeeded, METH_VARARGS },
	 { (char *)"pkgAcquire_FetchNeeded", _wrap_pkgAcquire_FetchNeeded, METH_VARARGS },
	 { (char *)"pkgAcquire_PartialPresent", _wrap_pkgAcquire_PartialPresent, METH_VARARGS },
	 { (char *)"new_pkgAcquire", _wrap_new_pkgAcquire, METH_VARARGS },
	 { (char *)"delete_pkgAcquire", _wrap_delete_pkgAcquire, METH_VARARGS },
	 { (char *)"pkgAcquire_swigregister", pkgAcquire_swigregister, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_Update_set", _wrap_pkgAcquireStatus_Update_set, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_Update_get", _wrap_pkgAcquireStatus_Update_get, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_MorePulses_set", _wrap_pkgAcquireStatus_MorePulses_set, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_MorePulses_get", _wrap_pkgAcquireStatus_MorePulses_get, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_Fetched", _wrap_pkgAcquireStatus_Fetched, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_MediaChange", _wrap_pkgAcquireStatus_MediaChange, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_IMSHit", _wrap_pkgAcquireStatus_IMSHit, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_Fetch", _wrap_pkgAcquireStatus_Fetch, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_Done", _wrap_pkgAcquireStatus_Done, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_Fail", _wrap_pkgAcquireStatus_Fail, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_Pulse", _wrap_pkgAcquireStatus_Pulse, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_Start", _wrap_pkgAcquireStatus_Start, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_Stop", _wrap_pkgAcquireStatus_Stop, METH_VARARGS },
	 { (char *)"delete_pkgAcquireStatus", _wrap_delete_pkgAcquireStatus, METH_VARARGS },
	 { (char *)"pkgAcquireStatus_swigregister", pkgAcquireStatus_swigregister, METH_VARARGS },
	 { (char *)"pkgPackageManager_GetArchives", _wrap_pkgPackageManager_GetArchives, METH_VARARGS },
	 { (char *)"pkgPackageManager_DoInstall", _wrap_pkgPackageManager_DoInstall, METH_VARARGS },
	 { (char *)"pkgPackageManager_FixMissing", _wrap_pkgPackageManager_FixMissing, METH_VARARGS },
	 { (char *)"new_pkgPackageManager", _wrap_new_pkgPackageManager, METH_VARARGS },
	 { (char *)"delete_pkgPackageManager", _wrap_delete_pkgPackageManager, METH_VARARGS },
	 { (char *)"pkgPackageManager_swigregister", pkgPackageManager_swigregister, METH_VARARGS },
	 { (char *)"pkgSourceList_ReadMainList", _wrap_pkgSourceList_ReadMainList, METH_VARARGS },
	 { (char *)"pkgSourceList_Read", _wrap_pkgSourceList_Read, METH_VARARGS },
	 { (char *)"pkgSourceList_ReadVendors", _wrap_pkgSourceList_ReadVendors, METH_VARARGS },
	 { (char *)"pkgSourceList_Reset", _wrap_pkgSourceList_Reset, METH_VARARGS },
	 { (char *)"pkgSourceList_ReadAppend", _wrap_pkgSourceList_ReadAppend, METH_VARARGS },
	 { (char *)"pkgSourceList_ReadSourceDir", _wrap_pkgSourceList_ReadSourceDir, METH_VARARGS },
	 { (char *)"pkgSourceList_begin", _wrap_pkgSourceList_begin, METH_VARARGS },
	 { (char *)"pkgSourceList_end", _wrap_pkgSourceList_end, METH_VARARGS },
	 { (char *)"pkgSourceList_size", _wrap_pkgSourceList_size, METH_VARARGS },
	 { (char *)"pkgSourceList_empty", _wrap_pkgSourceList_empty, METH_VARARGS },
	 { (char *)"pkgSourceList_FindIndex", _wrap_pkgSourceList_FindIndex, METH_VARARGS },
	 { (char *)"pkgSourceList_GetIndexes", _wrap_pkgSourceList_GetIndexes, METH_VARARGS },
	 { (char *)"pkgSourceList_GetReleases", _wrap_pkgSourceList_GetReleases, METH_VARARGS },
	 { (char *)"new_pkgSourceList", _wrap_new_pkgSourceList, METH_VARARGS },
	 { (char *)"delete_pkgSourceList", _wrap_delete_pkgSourceList, METH_VARARGS },
	 { (char *)"pkgSourceList_swigregister", pkgSourceList_swigregister, METH_VARARGS },
	 { (char *)"GlobalError_PushState", _wrap_GlobalError_PushState, METH_VARARGS },
	 { (char *)"GlobalError_PopState", _wrap_GlobalError_PopState, METH_VARARGS },
	 { (char *)"GlobalError_PopBackState", _wrap_GlobalError_PopBackState, METH_VARARGS },
	 { (char *)"GlobalError_Errno", _wrap_GlobalError_Errno, METH_VARARGS },
	 { (char *)"GlobalError_WarningE", _wrap_GlobalError_WarningE, METH_VARARGS },
	 { (char *)"GlobalError_Error", _wrap_GlobalError_Error, METH_VARARGS },
	 { (char *)"GlobalError_Warning", _wrap_GlobalError_Warning, METH_VARARGS },
	 { (char *)"GlobalError_PendingError", _wrap_GlobalError_PendingError, METH_VARARGS },
	 { (char *)"GlobalError_empty", _wrap_GlobalError_empty, METH_VARARGS },
	 { (char *)"GlobalError_PopMessage", _wrap_GlobalError_PopMessage, METH_VARARGS },
	 { (char *)"GlobalError_Discard", _wrap_GlobalError_Discard, METH_VARARGS },
	 { (char *)"GlobalError_DumpErrors", _wrap_GlobalError_DumpErrors, METH_VARARGS },
	 { (char *)"new_GlobalError", _wrap_new_GlobalError, METH_VARARGS },
	 { (char *)"delete_GlobalError", _wrap_delete_GlobalError, METH_VARARGS },
	 { (char *)"GlobalError_swigregister", GlobalError_swigregister, METH_VARARGS },
	 { (char *)"_GetErrorObj", _wrap__GetErrorObj, METH_VARARGS },
	 { (char *)"LuaCacheControl_Open", _wrap_LuaCacheControl_Open, METH_VARARGS },
	 { (char *)"LuaCacheControl_Close", _wrap_LuaCacheControl_Close, METH_VARARGS },
	 { (char *)"delete_LuaCacheControl", _wrap_delete_LuaCacheControl, METH_VARARGS },
	 { (char *)"LuaCacheControl_swigregister", LuaCacheControl_swigregister, METH_VARARGS },
	 { (char *)"Lua_RunInteractive", _wrap_Lua_RunInteractive, METH_VARARGS },
	 { (char *)"Lua_RunScript", _wrap_Lua_RunScript, METH_VARARGS },
	 { (char *)"Lua_RunScripts", _wrap_Lua_RunScripts, METH_VARARGS },
	 { (char *)"Lua_HasScripts", _wrap_Lua_HasScripts, METH_VARARGS },
	 { (char *)"Lua_ResetScript", _wrap_Lua_ResetScript, METH_VARARGS },
	 { (char *)"Lua_SetGlobal", _wrap_Lua_SetGlobal, METH_VARARGS },
	 { (char *)"Lua_ResetGlobals", _wrap_Lua_ResetGlobals, METH_VARARGS },
	 { (char *)"Lua_GetGlobalStr", _wrap_Lua_GetGlobalStr, METH_VARARGS },
	 { (char *)"Lua_GetGlobalStrList", _wrap_Lua_GetGlobalStrList, METH_VARARGS },
	 { (char *)"Lua_GetGlobalNum", _wrap_Lua_GetGlobalNum, METH_VARARGS },
	 { (char *)"Lua_GetGlobalBool", _wrap_Lua_GetGlobalBool, METH_VARARGS },
	 { (char *)"Lua_GetGlobalPtr", _wrap_Lua_GetGlobalPtr, METH_VARARGS },
	 { (char *)"Lua_GetGlobalPkg", _wrap_Lua_GetGlobalPkg, METH_VARARGS },
	 { (char *)"Lua_GetGlobalPkgList", _wrap_Lua_GetGlobalPkgList, METH_VARARGS },
	 { (char *)"Lua_SetDepCache", _wrap_Lua_SetDepCache, METH_VARARGS },
	 { (char *)"Lua_SetCache", _wrap_Lua_SetCache, METH_VARARGS },
	 { (char *)"Lua_SetCacheControl", _wrap_Lua_SetCacheControl, METH_VARARGS },
	 { (char *)"Lua_SetProblemResolver", _wrap_Lua_SetProblemResolver, METH_VARARGS },
	 { (char *)"Lua_SetDontFix", _wrap_Lua_SetDontFix, METH_VARARGS },
	 { (char *)"Lua_ResetCaches", _wrap_Lua_ResetCaches, METH_VARARGS },
	 { (char *)"Lua_GetDepCache", _wrap_Lua_GetDepCache, METH_VARARGS },
	 { (char *)"Lua_GetCache", _wrap_Lua_GetCache, METH_VARARGS },
	 { (char *)"Lua_GetCacheControl", _wrap_Lua_GetCacheControl, METH_VARARGS },
	 { (char *)"Lua_GetProblemResolver", _wrap_Lua_GetProblemResolver, METH_VARARGS },
	 { (char *)"Lua_GetDontFix", _wrap_Lua_GetDontFix, METH_VARARGS },
	 { (char *)"new_Lua", _wrap_new_Lua, METH_VARARGS },
	 { (char *)"delete_Lua", _wrap_delete_Lua, METH_VARARGS },
	 { (char *)"Lua_swigregister", Lua_swigregister, METH_VARARGS },
	 { (char *)"_GetLuaObj", _wrap__GetLuaObj, METH_VARARGS },
	 { (char *)"new_pkgAcquireStatusDumb", _wrap_new_pkgAcquireStatusDumb, METH_VARARGS },
	 { (char *)"delete_pkgAcquireStatusDumb", _wrap_delete_pkgAcquireStatusDumb, METH_VARARGS },
	 { (char *)"pkgAcquireStatusDumb_swigregister", pkgAcquireStatusDumb_swigregister, METH_VARARGS },
	 { (char *)"ROpPyProgress_Op_set", _wrap_ROpPyProgress_Op_set, METH_VARARGS },
	 { (char *)"ROpPyProgress_Op_get", _wrap_ROpPyProgress_Op_get, METH_VARARGS },
	 { (char *)"ROpPyProgress_SubOp_set", _wrap_ROpPyProgress_SubOp_set, METH_VARARGS },
	 { (char *)"ROpPyProgress_SubOp_get", _wrap_ROpPyProgress_SubOp_get, METH_VARARGS },
	 { (char *)"ROpPyProgress_Percent_set", _wrap_ROpPyProgress_Percent_set, METH_VARARGS },
	 { (char *)"ROpPyProgress_Percent_get", _wrap_ROpPyProgress_Percent_get, METH_VARARGS },
	 { (char *)"ROpPyProgress_MajorChange_set", _wrap_ROpPyProgress_MajorChange_set, METH_VARARGS },
	 { (char *)"ROpPyProgress_MajorChange_get", _wrap_ROpPyProgress_MajorChange_get, METH_VARARGS },
	 { (char *)"ROpPyProgress_CheckChange", _wrap_ROpPyProgress_CheckChange, METH_VARARGS },
	 { (char *)"new_ROpPyProgress", _wrap_new_ROpPyProgress, METH_VARARGS },
	 { (char *)"delete_ROpPyProgress", _wrap_delete_ROpPyProgress, METH_VARARGS },
	 { (char *)"ROpPyProgress_swigregister", ROpPyProgress_swigregister, METH_VARARGS },
	 { NULL, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_pkgAcqArchiveTo_p_pkgAcquire__Item(void *x) {
    return (void *)((pkgAcquire::Item *)  ((pkgAcqArchive *) x));
}
static void *_p_pkgAcqFileTo_p_pkgAcquire__Item(void *x) {
    return (void *)((pkgAcquire::Item *)  ((pkgAcqFile *) x));
}
static void *_p_pkgAcqIndexTo_p_pkgAcquire__Item(void *x) {
    return (void *)((pkgAcquire::Item *)  ((pkgAcqIndex *) x));
}
static void *_p_pkgAcqIndexRelTo_p_pkgAcquire__Item(void *x) {
    return (void *)((pkgAcquire::Item *)  ((pkgAcqIndexRel *) x));
}
static void *_p_pkgAcquireStatusDumbTo_p_pkgAcquireStatus(void *x) {
    return (void *)((pkgAcquireStatus *)  ((pkgAcquireStatusDumb *) x));
}
static void *_p_OpTextProgressTo_p_OpProgress(void *x) {
    return (void *)((OpProgress *)  ((OpTextProgress *) x));
}
static void *_p_ROpPyProgressTo_p_OpProgress(void *x) {
    return (void *)((OpProgress *)  ((ROpPyProgress *) x));
}
static swig_type_info _swigt__p_PackageFile[] = {{"_p_PackageFile", 0, "PackageFile *", 0},{"_p_PackageFile"},{"_p_pkgCache__PackageFile"},{0}};
static swig_type_info _swigt__p_pkgCache__PackageFile[] = {{"_p_pkgCache__PackageFile", 0, "pkgCache::PackageFile *", 0},{"_p_pkgCache__PackageFile"},{"_p_PackageFile"},{0}};
static swig_type_info _swigt__p_pkgAcquire__UriIterator[] = {{"_p_pkgAcquire__UriIterator", 0, "pkgAcquire::UriIterator *", 0},{"_p_pkgAcquire__UriIterator"},{0}};
static swig_type_info _swigt__p_pkgCache__VerFileIterator[] = {{"_p_pkgCache__VerFileIterator", 0, "pkgCache::VerFileIterator *", 0},{"_p_pkgCache__VerFileIterator"},{"_p_VerFileIterator"},{0}};
static swig_type_info _swigt__p_PkgFileIterator[] = {{"_p_PkgFileIterator", 0, "PkgFileIterator *", 0},{"_p_PkgFileIterator"},{"_p_pkgCache__PkgFileIterator"},{0}};
static swig_type_info _swigt__p_pkgCache__PrvIterator[] = {{"_p_pkgCache__PrvIterator", 0, "pkgCache::PrvIterator *", 0},{"_p_pkgCache__PrvIterator"},{"_p_PrvIterator"},{0}};
static swig_type_info _swigt__p_pkgCache__DepIterator[] = {{"_p_pkgCache__DepIterator", 0, "pkgCache::DepIterator *", 0},{"_p_pkgCache__DepIterator"},{"_p_DepIterator"},{0}};
static swig_type_info _swigt__p_VerFileIterator[] = {{"_p_VerFileIterator", 0, "VerFileIterator const *", 0},{"_p_VerFileIterator"},{"_p_pkgCache__VerFileIterator"},{0}};
static swig_type_info _swigt__p_pkgCache__VerIterator[] = {{"_p_pkgCache__VerIterator", 0, "pkgCache::VerIterator *", 0},{"_p_pkgCache__VerIterator"},{"_p_VerIterator"},{0}};
static swig_type_info _swigt__p_PrvIterator[] = {{"_p_PrvIterator", 0, "PrvIterator const *", 0},{"_p_PrvIterator"},{"_p_pkgCache__PrvIterator"},{0}};
static swig_type_info _swigt__p_pkgCache__PkgIterator[] = {{"_p_pkgCache__PkgIterator", 0, "pkgCache::PkgIterator *", 0},{"_p_pkgCache__PkgIterator"},{"_p_PkgIterator"},{0}};
static swig_type_info _swigt__p_pkgCache__PkgFileIterator[] = {{"_p_pkgCache__PkgFileIterator", 0, "pkgCache::PkgFileIterator *", 0},{"_p_pkgCache__PkgFileIterator"},{"_p_PkgFileIterator"},{0}};
static swig_type_info _swigt__p_VerIterator[] = {{"_p_VerIterator", 0, "VerIterator *", 0},{"_p_VerIterator"},{"_p_pkgCache__VerIterator"},{0}};
static swig_type_info _swigt__p_PkgIterator[] = {{"_p_PkgIterator", 0, "PkgIterator const *", 0},{"_p_PkgIterator"},{"_p_pkgCache__PkgIterator"},{0}};
static swig_type_info _swigt__p_DepIterator[] = {{"_p_DepIterator", 0, "DepIterator *", 0},{"_p_DepIterator"},{"_p_pkgCache__DepIterator"},{0}};
static swig_type_info _swigt__p_pkgSourceList__const_iterator[] = {{"_p_pkgSourceList__const_iterator", 0, "pkgSourceList::const_iterator *", 0},{"_p_pkgSourceList__const_iterator"},{0}};
static swig_type_info _swigt__p_Configuration__Item[] = {{"_p_Configuration__Item", 0, "Configuration::Item *", 0},{"_p_Configuration__Item"},{"_p_Item"},{0}};
static swig_type_info _swigt__p_pkgCache__Header[] = {{"_p_pkgCache__Header", 0, "pkgCache::Header *", 0},{"_p_pkgCache__Header"},{"_p_Header"},{0}};
static swig_type_info _swigt__p_Header[] = {{"_p_Header", 0, "Header *", 0},{"_p_Header"},{"_p_pkgCache__Header"},{0}};
static swig_type_info _swigt__p_pkgPolicy[] = {{"_p_pkgPolicy", 0, "pkgPolicy *", 0},{"_p_pkgPolicy"},{0}};
static swig_type_info _swigt__p_Policy[] = {{"_p_Policy", 0, "Policy *", 0},{"_p_Policy"},{0}};
static swig_type_info _swigt__p_Lua[] = {{"_p_Lua", 0, "Lua *", 0},{"_p_Lua"},{0}};
static swig_type_info _swigt__p_Configuration[] = {{"_p_Configuration", 0, "Configuration *", 0},{"_p_Configuration"},{0}};
static swig_type_info _swigt__p_pkgAcqIndexRel[] = {{"_p_pkgAcqIndexRel", 0, "pkgAcqIndexRel *", 0},{"_p_pkgAcqIndexRel"},{0}};
static swig_type_info _swigt__p_pkgAcquire[] = {{"_p_pkgAcquire", 0, "pkgAcquire *", 0},{"_p_pkgAcquire"},{0}};
static swig_type_info _swigt__p_map_ptrloc[] = {{"_p_map_ptrloc", 0, "map_ptrloc *", 0},{"_p_map_ptrloc"},{0}};
static swig_type_info _swigt__p_Dependency[] = {{"_p_Dependency", 0, "Dependency *", 0},{"_p_Dependency"},{"_p_pkgCache__Dependency"},{0}};
static swig_type_info _swigt__p_pkgCache__Dependency[] = {{"_p_pkgCache__Dependency", 0, "pkgCache::Dependency *", 0},{"_p_pkgCache__Dependency"},{"_p_Dependency"},{0}};
static swig_type_info _swigt__p_GlobalError[] = {{"_p_GlobalError", 0, "GlobalError *", 0},{"_p_GlobalError"},{0}};
static swig_type_info _swigt__p_pkgAcqIndex[] = {{"_p_pkgAcqIndex", 0, "pkgAcqIndex *", 0},{"_p_pkgAcqIndex"},{0}};
static swig_type_info _swigt__p_LuaCacheControl[] = {{"_p_LuaCacheControl", 0, "LuaCacheControl *", 0},{"_p_LuaCacheControl"},{0}};
static swig_type_info _swigt__p_std__vectorTpkgCache__Package_p_t[] = {{"_p_std__vectorTpkgCache__Package_p_t", 0, "std::vector<pkgCache::Package * > *", 0},{"_p_std__vectorTpkgCache__Package_p_t"},{0}};
static swig_type_info _swigt__p_StateCache[] = {{"_p_StateCache", 0, "StateCache *", 0},{"_p_StateCache"},{"_p_pkgDepCache__StateCache"},{0}};
static swig_type_info _swigt__p_pkgDepCache__StateCache[] = {{"_p_pkgDepCache__StateCache", 0, "pkgDepCache::StateCache *", 0},{"_p_pkgDepCache__StateCache"},{"_p_StateCache"},{0}};
static swig_type_info _swigt__p_Item[] = {{"_p_Item", 0, "Item const *", 0},{"_p_Configuration__Item"},{"_p_Item"},{0}};
static swig_type_info _swigt__p_void[] = {{"_p_void", 0, "void *", 0},{"_p_void"},{0}};
static swig_type_info _swigt__p_pkgAcquire__Item[] = {{"_p_pkgAcquire__Item", 0, "pkgAcquire::Item *", 0},{"_p_pkgAcqArchive", _p_pkgAcqArchiveTo_p_pkgAcquire__Item},{"_p_pkgAcqFile", _p_pkgAcqFileTo_p_pkgAcquire__Item},{"_p_pkgAcqIndex", _p_pkgAcqIndexTo_p_pkgAcquire__Item},{"_p_pkgAcqIndexRel", _p_pkgAcqIndexRelTo_p_pkgAcquire__Item},{"_p_pkgAcquire__Item"},{0}};
static swig_type_info _swigt__p_MMap[] = {{"_p_MMap", 0, "MMap *", 0},{"_p_MMap"},{0}};
static swig_type_info _swigt__p_std__vectorTchar_const_p_t[] = {{"_p_std__vectorTchar_const_p_t", 0, "std::vector<char const * > *", 0},{"_p_std__vectorTchar_const_p_t"},{0}};
static swig_type_info _swigt__p_lua_State[] = {{"_p_lua_State", 0, "lua_State *", 0},{"_p_lua_State"},{0}};
static swig_type_info _swigt__p_pkgRecords__Parser[] = {{"_p_pkgRecords__Parser", 0, "pkgRecords::Parser *", 0},{"_p_pkgRecords__Parser"},{0}};
static swig_type_info _swigt__p_p_pkgCache__Version[] = {{"_p_p_pkgCache__Version", 0, "pkgCache::Version **", 0},{"_p_p_pkgCache__Version"},{"_p_p_Version"},{0}};
static swig_type_info _swigt__p_p_Version[] = {{"_p_p_Version", 0, "Version **", 0},{"_p_p_Version"},{"_p_p_pkgCache__Version"},{0}};
static swig_type_info _swigt__p_pkgCache__Version[] = {{"_p_pkgCache__Version", 0, "pkgCache::Version *", 0},{"_p_pkgCache__Version"},{"_p_Version"},{0}};
static swig_type_info _swigt__p_Version[] = {{"_p_Version", 0, "Version *", 0},{"_p_Version"},{"_p_pkgCache__Version"},{0}};
static swig_type_info _swigt__p_std__vectorTpkgIndexFile_p_t[] = {{"_p_std__vectorTpkgIndexFile_p_t", 0, "std::vector<pkgIndexFile * > *", 0},{"_p_std__vectorTpkgIndexFile_p_t"},{0}};
static swig_type_info _swigt__p_time_t[] = {{"_p_time_t", 0, "time_t *", 0},{"_p_time_t"},{0}};
static swig_type_info _swigt__p_p_pkgIndexFile[] = {{"_p_p_pkgIndexFile", 0, "pkgIndexFile **", 0},{"_p_p_pkgIndexFile"},{0}};
static swig_type_info _swigt__p_pkgProblemResolver[] = {{"_p_pkgProblemResolver", 0, "pkgProblemResolver *", 0},{"_p_pkgProblemResolver"},{0}};
static swig_type_info _swigt__p_pkgAcqArchive[] = {{"_p_pkgAcqArchive", 0, "pkgAcqArchive *", 0},{"_p_pkgAcqArchive"},{0}};
static swig_type_info _swigt__p_std__vectorTstd__string_t[] = {{"_p_std__vectorTstd__string_t", 0, "std::vector<string > *", 0},{"_p_std__vectorTstd__string_t"},{0}};
static swig_type_info _swigt__p_p_char[] = {{"_p_p_char", 0, "char **", 0},{"_p_p_char"},{0}};
static swig_type_info _swigt__p_pkgAcquireStatusDumb[] = {{"_p_pkgAcquireStatusDumb", 0, "pkgAcquireStatusDumb *", 0},{"_p_pkgAcquireStatusDumb"},{0}};
static swig_type_info _swigt__p_pkgCacheFile[] = {{"_p_pkgCacheFile", 0, "pkgCacheFile *", 0},{"_p_pkgCacheFile"},{0}};
static swig_type_info _swigt__p_pkgAcquire__ItemDesc[] = {{"_p_pkgAcquire__ItemDesc", 0, "pkgAcquire::ItemDesc *", 0},{"_p_pkgAcquire__ItemDesc"},{0}};
static swig_type_info _swigt__p_pkgAcquireStatus[] = {{"_p_pkgAcquireStatus", 0, "pkgAcquireStatus *", 0},{"_p_pkgAcquireStatus"},{"_p_pkgAcquireStatusDumb", _p_pkgAcquireStatusDumbTo_p_pkgAcquireStatus},{0}};
static swig_type_info _swigt__lua_CFunction[] = {{"_lua_CFunction", 0, "lua_CFunction", 0},{"_lua_CFunction"},{0}};
static swig_type_info _swigt__p_pkgDepCache[] = {{"_p_pkgDepCache", 0, "pkgDepCache *", 0},{"_p_pkgDepCache"},{0}};
static swig_type_info _swigt__p_DynamicMMap__Pool[] = {{"_p_DynamicMMap__Pool", 0, "DynamicMMap::Pool *", 0},{"_p_DynamicMMap__Pool"},{0}};
static swig_type_info _swigt__p_pkgPackageManager[] = {{"_p_pkgPackageManager", 0, "pkgPackageManager *", 0},{"_p_pkgPackageManager"},{0}};
static swig_type_info _swigt__p_OpTextProgress[] = {{"_p_OpTextProgress", 0, "OpTextProgress *", 0},{"_p_OpTextProgress"},{0}};
static swig_type_info _swigt__p_OpProgress[] = {{"_p_OpProgress", 0, "OpProgress *", 0},{"_p_OpProgress"},{"_p_OpTextProgress", _p_OpTextProgressTo_p_OpProgress},{"_p_ROpPyProgress", _p_ROpPyProgressTo_p_OpProgress},{0}};
static swig_type_info _swigt__p_ROpPyProgress[] = {{"_p_ROpPyProgress", 0, "ROpPyProgress *", 0},{"_p_ROpPyProgress"},{0}};
static swig_type_info _swigt__p_Provides[] = {{"_p_Provides", 0, "Provides *", 0},{"_p_Provides"},{"_p_pkgCache__Provides"},{0}};
static swig_type_info _swigt__p_pkgCache__Provides[] = {{"_p_pkgCache__Provides", 0, "pkgCache::Provides *", 0},{"_p_pkgCache__Provides"},{"_p_Provides"},{0}};
static swig_type_info _swigt__p_pkgRepository[] = {{"_p_pkgRepository", 0, "pkgRepository *", 0},{"_p_pkgRepository"},{0}};
static swig_type_info _swigt__p_std__ostream[] = {{"_p_std__ostream", 0, "std::ostream *", 0},{"_p_std__ostream"},{0}};
static swig_type_info _swigt__p_pkgAcqFile[] = {{"_p_pkgAcqFile", 0, "pkgAcqFile *", 0},{"_p_pkgAcqFile"},{0}};
static swig_type_info _swigt__p_pkgSourceList[] = {{"_p_pkgSourceList", 0, "pkgSourceList *", 0},{"_p_pkgSourceList"},{0}};
static swig_type_info _swigt__p_string[] = {{"_p_string", 0, "string *", 0},{"_p_string"},{0}};
static swig_type_info _swigt__p_p_pkgVersioningSystem[] = {{"_p_p_pkgVersioningSystem", 0, "pkgVersioningSystem **", 0},{"_p_p_pkgVersioningSystem"},{0}};
static swig_type_info _swigt__p_pkgSystem[] = {{"_p_pkgSystem", 0, "pkgSystem *", 0},{"_p_pkgSystem"},{0}};
static swig_type_info _swigt__p_p_pkgSystem[] = {{"_p_p_pkgSystem", 0, "pkgSystem **", 0},{"_p_p_pkgSystem"},{0}};
static swig_type_info _swigt__p_pkgVersioningSystem[] = {{"_p_pkgVersioningSystem", 0, "pkgVersioningSystem *", 0},{"_p_pkgVersioningSystem"},{0}};
static swig_type_info _swigt__p_VerFile[] = {{"_p_VerFile", 0, "VerFile *", 0},{"_p_VerFile"},{"_p_pkgCache__VerFile"},{0}};
static swig_type_info _swigt__p_pkgCache__VerFile[] = {{"_p_pkgCache__VerFile", 0, "pkgCache::VerFile *", 0},{"_p_pkgCache__VerFile"},{"_p_VerFile"},{0}};
static swig_type_info _swigt__p_pkgAcquire__MethodConfig[] = {{"_p_pkgAcquire__MethodConfig", 0, "pkgAcquire::MethodConfig *", 0},{"_p_pkgAcquire__MethodConfig"},{0}};
static swig_type_info _swigt__p_Package[] = {{"_p_Package", 0, "Package *", 0},{"_p_Package"},{"_p_pkgCache__Package"},{0}};
static swig_type_info _swigt__p_pkgCache__Package[] = {{"_p_pkgCache__Package", 0, "pkgCache::Package *", 0},{"_p_pkgCache__Package"},{"_p_Package"},{0}};
static swig_type_info _swigt__p_unsigned_char[] = {{"_p_unsigned_char", 0, "unsigned char *", 0},{"_p_unsigned_char"},{0}};
static swig_type_info _swigt__p_pkgRecords[] = {{"_p_pkgRecords", 0, "pkgRecords *", 0},{"_p_pkgRecords"},{0}};
static swig_type_info _swigt__p_pkgAcquire__Worker[] = {{"_p_pkgAcquire__Worker", 0, "pkgAcquire::Worker *", 0},{"_p_pkgAcquire__Worker"},{0}};
static swig_type_info _swigt__p_pkgCache[] = {{"_p_pkgCache", 0, "pkgCache *", 0},{"_p_pkgCache"},{0}};
static swig_type_info _swigt__p_pkgCache__StringItem[] = {{"_p_pkgCache__StringItem", 0, "pkgCache::StringItem *", 0},{"_p_pkgCache__StringItem"},{0}};

static swig_type_info *swig_types_initial[] = {
_swigt__p_PackageFile, 
_swigt__p_pkgCache__PackageFile, 
_swigt__p_pkgAcquire__UriIterator, 
_swigt__p_pkgCache__VerFileIterator, 
_swigt__p_PkgFileIterator, 
_swigt__p_pkgCache__PrvIterator, 
_swigt__p_pkgCache__DepIterator, 
_swigt__p_VerFileIterator, 
_swigt__p_pkgCache__VerIterator, 
_swigt__p_PrvIterator, 
_swigt__p_pkgCache__PkgIterator, 
_swigt__p_pkgCache__PkgFileIterator, 
_swigt__p_VerIterator, 
_swigt__p_PkgIterator, 
_swigt__p_DepIterator, 
_swigt__p_pkgSourceList__const_iterator, 
_swigt__p_Configuration__Item, 
_swigt__p_pkgCache__Header, 
_swigt__p_Header, 
_swigt__p_pkgPolicy, 
_swigt__p_Policy, 
_swigt__p_Lua, 
_swigt__p_Configuration, 
_swigt__p_pkgAcqIndexRel, 
_swigt__p_pkgAcquire, 
_swigt__p_map_ptrloc, 
_swigt__p_Dependency, 
_swigt__p_pkgCache__Dependency, 
_swigt__p_GlobalError, 
_swigt__p_pkgAcqIndex, 
_swigt__p_LuaCacheControl, 
_swigt__p_std__vectorTpkgCache__Package_p_t, 
_swigt__p_StateCache, 
_swigt__p_pkgDepCache__StateCache, 
_swigt__p_Item, 
_swigt__p_void, 
_swigt__p_pkgAcquire__Item, 
_swigt__p_MMap, 
_swigt__p_std__vectorTchar_const_p_t, 
_swigt__p_lua_State, 
_swigt__p_pkgRecords__Parser, 
_swigt__p_p_pkgCache__Version, 
_swigt__p_p_Version, 
_swigt__p_pkgCache__Version, 
_swigt__p_Version, 
_swigt__p_std__vectorTpkgIndexFile_p_t, 
_swigt__p_time_t, 
_swigt__p_p_pkgIndexFile, 
_swigt__p_pkgProblemResolver, 
_swigt__p_pkgAcqArchive, 
_swigt__p_std__vectorTstd__string_t, 
_swigt__p_p_char, 
_swigt__p_pkgAcquireStatusDumb, 
_swigt__p_pkgCacheFile, 
_swigt__p_pkgAcquire__ItemDesc, 
_swigt__p_pkgAcquireStatus, 
_swigt__lua_CFunction, 
_swigt__p_pkgDepCache, 
_swigt__p_DynamicMMap__Pool, 
_swigt__p_pkgPackageManager, 
_swigt__p_OpTextProgress, 
_swigt__p_OpProgress, 
_swigt__p_ROpPyProgress, 
_swigt__p_Provides, 
_swigt__p_pkgCache__Provides, 
_swigt__p_pkgRepository, 
_swigt__p_std__ostream, 
_swigt__p_pkgAcqFile, 
_swigt__p_pkgSourceList, 
_swigt__p_string, 
_swigt__p_p_pkgVersioningSystem, 
_swigt__p_pkgSystem, 
_swigt__p_p_pkgSystem, 
_swigt__p_pkgVersioningSystem, 
_swigt__p_VerFile, 
_swigt__p_pkgCache__VerFile, 
_swigt__p_pkgAcquire__MethodConfig, 
_swigt__p_Package, 
_swigt__p_pkgCache__Package, 
_swigt__p_unsigned_char, 
_swigt__p_pkgRecords, 
_swigt__p_pkgAcquire__Worker, 
_swigt__p_pkgCache, 
_swigt__p_pkgCache__StringItem, 
0
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{ SWIG_PY_INT,     (char *)"APT_PKG_MAJOR", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APT_PKG_MINOR", (long) 3, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"APT_PKG_RELEASE", (long) 0, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepDepends", (long) pkgCache::DepDepends, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepPreDepends", (long) pkgCache::DepPreDepends, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepSuggests", (long) pkgCache::DepSuggests, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepRecommends", (long) pkgCache::DepRecommends, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepConflicts", (long) pkgCache::DepConflicts, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepReplaces", (long) pkgCache::DepReplaces, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepObsoletes", (long) pkgCache::DepObsoletes, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepOr", (long) pkgCache::DepOr, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepNoOp", (long) pkgCache::DepNoOp, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepLessEq", (long) pkgCache::DepLessEq, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepGreaterEq", (long) pkgCache::DepGreaterEq, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepLess", (long) pkgCache::DepLess, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepGreater", (long) pkgCache::DepGreater, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepEquals", (long) pkgCache::DepEquals, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_DepNotEquals", (long) pkgCache::DepNotEquals, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateImportant", (long) pkgCache::StateImportant, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateRequired", (long) pkgCache::StateRequired, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateStandard", (long) pkgCache::StateStandard, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateOptional", (long) pkgCache::StateOptional, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateExtra", (long) pkgCache::StateExtra, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateUnknown", (long) pkgCache::StateUnknown, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateInstall", (long) pkgCache::StateInstall, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateHold", (long) pkgCache::StateHold, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateDeInstall", (long) pkgCache::StateDeInstall, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StatePurge", (long) pkgCache::StatePurge, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateOk", (long) pkgCache::StateOk, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateReInstReq", (long) pkgCache::StateReInstReq, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateHoldInst", (long) pkgCache::StateHoldInst, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateHoldReInstReq", (long) pkgCache::StateHoldReInstReq, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateNotInstalled", (long) pkgCache::StateNotInstalled, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateUnPacked", (long) pkgCache::StateUnPacked, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateHalfConfigured", (long) pkgCache::StateHalfConfigured, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateHalfInstalled", (long) pkgCache::StateHalfInstalled, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateConfigFiles", (long) pkgCache::StateConfigFiles, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_StateInstalled", (long) pkgCache::StateInstalled, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_FlagAuto", (long) pkgCache::FlagAuto, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_FlagEssential", (long) pkgCache::FlagEssential, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_FlagImportant", (long) pkgCache::FlagImportant, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_FlagNotSource", (long) pkgCache::FlagNotSource, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCache_FlagNotAutomatic", (long) pkgCache::FlagNotAutomatic, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepNow", (long) pkgDepCache::DepNow, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepInstall", (long) pkgDepCache::DepInstall, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepCVer", (long) pkgDepCache::DepCVer, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepGNow", (long) pkgDepCache::DepGNow, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepGInstall", (long) pkgDepCache::DepGInstall, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepGCVer", (long) pkgDepCache::DepGCVer, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepNowPolicy", (long) pkgDepCache::DepNowPolicy, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepNowMin", (long) pkgDepCache::DepNowMin, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepInstPolicy", (long) pkgDepCache::DepInstPolicy, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepInstMin", (long) pkgDepCache::DepInstMin, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepCandPolicy", (long) pkgDepCache::DepCandPolicy, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_DepCandMin", (long) pkgDepCache::DepCandMin, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_AutoKept", (long) pkgDepCache::AutoKept, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_Purge", (long) pkgDepCache::Purge, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_ReInstall", (long) pkgDepCache::ReInstall, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_NowVersion", (long) pkgDepCache::NowVersion, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_InstallVersion", (long) pkgDepCache::InstallVersion, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_CandidateVersion", (long) pkgDepCache::CandidateVersion, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_ModeDelete", (long) pkgDepCache::ModeDelete, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_ModeKeep", (long) pkgDepCache::ModeKeep, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgDepCache_ModeInstall", (long) pkgDepCache::ModeInstall, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCachePkgIterator_NeedsNothing", (long) pkgCache::PkgIterator::NeedsNothing, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCachePkgIterator_NeedsUnpack", (long) pkgCache::PkgIterator::NeedsUnpack, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgCachePkgIterator_NeedsConfigure", (long) pkgCache::PkgIterator::NeedsConfigure, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgAcquireItem_StatIdle", (long) pkgAcquire::Item::StatIdle, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgAcquireItem_StatFetching", (long) pkgAcquire::Item::StatFetching, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgAcquireItem_StatDone", (long) pkgAcquire::Item::StatDone, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgAcquireItem_StatError", (long) pkgAcquire::Item::StatError, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgAcquire_Continue", (long) pkgAcquire::Continue, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgAcquire_Failed", (long) pkgAcquire::Failed, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgAcquire_Cancelled", (long) pkgAcquire::Cancelled, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgPackageManager_Completed", (long) pkgPackageManager::Completed, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgPackageManager_Failed", (long) pkgPackageManager::Failed, 0, 0, 0},
{ SWIG_PY_INT,     (char *)"pkgPackageManager_Incomplete", (long) pkgPackageManager::Incomplete, 0, 0, 0},
{0}};

#ifdef __cplusplus
}
#endif

#ifdef __cplusplus
extern "C"
#endif
SWIGEXPORT(void) SWIG_init(void) {
    static PyObject *SWIG_globals = 0; 
    static int       typeinit = 0;
    PyObject *m, *d;
    int       i;
    if (!SWIG_globals) SWIG_globals = SWIG_newvarlink();
    m = Py_InitModule((char *) SWIG_name, SwigMethods);
    d = PyModule_GetDict(m);
    
    if (!typeinit) {
        for (i = 0; swig_types_initial[i]; i++) {
            swig_types[i] = SWIG_TypeRegister(swig_types_initial[i]);
        }
        typeinit = 1;
    }
    SWIG_InstallConstants(d,swig_const_table);
    
    PyDict_SetItemString(d,(char*)"cvar", SWIG_globals);
    SWIG_addvarlink(SWIG_globals,(char*)"_error",_wrap__error_get, _wrap__error_set);
    SWIG_addvarlink(SWIG_globals,(char*)"_lua",_wrap__lua_get, _wrap__lua_set);
    SWIG_addvarlink(SWIG_globals,(char*)"pkgVersion",_wrap_pkgVersion_get, _wrap_pkgVersion_set);
    SWIG_addvarlink(SWIG_globals,(char*)"pkgLibVersion",_wrap_pkgLibVersion_get, _wrap_pkgLibVersion_set);
    SWIG_addvarlink(SWIG_globals,(char*)"pkgOS",_wrap_pkgOS_get, _wrap_pkgOS_set);
    SWIG_addvarlink(SWIG_globals,(char*)"pkgCPU",_wrap_pkgCPU_get, _wrap_pkgCPU_set);
    SWIG_addvarlink(SWIG_globals,(char*)"pkgSystem_GlobalList",_wrap_pkgSystem_GlobalList_get, _wrap_pkgSystem_GlobalList_set);
    SWIG_addvarlink(SWIG_globals,(char*)"pkgSystem_GlobalListLen",_wrap_pkgSystem_GlobalListLen_get, _wrap_pkgSystem_GlobalListLen_set);
    SWIG_addvarlink(SWIG_globals,(char*)"_system",_wrap__system_get, _wrap__system_set);
    SWIG_addvarlink(SWIG_globals,(char*)"_config",_wrap__config_get, _wrap__config_set);
    SWIG_addvarlink(SWIG_globals,(char*)"pkgVersioningSystem_GlobalList",_wrap_pkgVersioningSystem_GlobalList_get, _wrap_pkgVersioningSystem_GlobalList_set);
    SWIG_addvarlink(SWIG_globals,(char*)"pkgVersioningSystem_GlobalListLen",_wrap_pkgVersioningSystem_GlobalListLen_get, _wrap_pkgVersioningSystem_GlobalListLen_set);
}

