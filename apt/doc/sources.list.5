.TH "sources\&.list" "5" "25 Oct 2000" "apt" "" 
.SH "NAME" 
sources\&.list \- package resource list for APT
.PP 
.SH "DESCRIPTION" 
The package resource list is used to locate archives of the package
distribution system in use on the system\&. 
.PP 
The source list is designed to support any number of active sources and a
variety of source media\&. The file lists one source per line, with the
most preferred source listed first\&. The format of each line is:
\fItype uri args\fP The first item, \fItype\fP, determines the format for
\fIargs\fP\&. \fIuri\fP is a Universal Resource Identifier (URI), which is a 
superset of the more specific and well-known Universal Resource Locator, or 
URL\&. 
.PP 
.SH "The deb and deb-src types" 
The \fBdeb\fP type describes a typical two-level Debian archive,
\fIdistribution/component\fP\&. Typically, \fIdistribution\fP is one of
\fIstable\fP, \fIunstable\fP, or \fIfrozen\fP, while component is one of
\fImain\fP, \fIcontrib\fP, \fInon-free\fP, or \fInon-us\fP\&. The \fBdeb-src\fP type
describes a debian distribution\'s source code in the same form as the \fBdeb\fP
type\&. A \fBdeb-src\fP line is required to fetch source indexes\&.
The format for a \fBsources\&.list\fP entry using the \fIdeb\fP and \fIdeb-src\fP
types are:

.nf 
 
deb uri distribution [component1] [componenent2] [\&.\&.\&.]
.fi 
 

The URI for the \fIdeb\fP type must specify the base of the Debian distribution, 
from which \fBAPT\fP will find the information it needs\&. \fIdistribution\fP
can specify an exact path, in which case the \fIcomponent\fPs
must be omitted and \fBdistribution\fP must end with a slash (/)\&. This is 
useful for when only a particular sub-section of the archive denoted by the 
URI is of interest\&. If \fBdistribution\fP does not specify an exact path, at 
least one \fBcomponent\fP must be present\&.
.PP 
\fBdistribution\fP may also contain a variable, \fB$(ARCH)\fP,
which expands to the Debian architecture (i386, m68k, powerpc, \&.\&.\&.)     
used on the system\&. This permits archiecture-independent                
\fBsources\&.list\fP files to be used\&. In general this is only of interest
when specifying an exact path, \fBAPT\fP will automatically generate a URI
with the current architecture otherwise\&.
.PP 
Since only one distribution can be specified per line it may be necessary
to have multiple lines for the same URI, if a subset of all available
distributions or components at that location is desired\&.
\fBAPT\fP will sort the URI list after it has generated a complete set 
internally, and will collapse multiple references to the same Internet host, 
for instance, into a single connection, so that it does not inefficiently
establish an FTP connection, close it, do something else, and then
re-establish a connection to that same host\&. This feature is useful
for accessing busy FTP sites with limits on the number of simultaneous
anonymous users\&. \fBAPT\fP also parallizes connections to different hosts
to more effectively deal with sites with low bandwidth\&.
.PP 
It is important to list sources in order of preference, with the most
preferred source listed first\&. Typically this will result in sorting
by speed from fastest to slowest (CD-ROM followed by hosts on a local
network, followed by distant Internet hosts, for example)\&.
.PP 
Some examples:

.nf 
 
deb http://http\&.us\&.debian\&.org/debian stable main contrib non-free
.fi 
 


.nf 
 
deb http://http\&.us\&.debian\&.org/debian dists/stable-updates
.fi 
 
.PP 
.SH "The rpm and rpm-src types" 
The \fBrpm\fP type describes a RPM based distribution repository,
divided in two levels, \fIdistribution\fP and \fIcomponent\fP.
\fIdistribution\fP is typically composed by the version of the
distribution and the vendor name, such as \fI6.0/conectiva\fP.
\fIcomponent\fP is the name of the component, such as
The \fBrpm-src\fP type describes the distribution\'s source code in 
the same form as the \fBrpm\fP
type\&. A \fBrpm-src\fP line is required to fetch source indexes\&.
The format for a \fBsources\&.list\fP entry using the \fIrpm\fP 
and \fIrpm-src\fP types are:

.nf 
 
rpm [\&[vendor\&]] uri distribution [component1] [componenent2] [\&.\&.\&.]
.fi 
 

The URI for the \fIrpm\fP type must specify the base of the distribution, 
from which \fBAPT\fP will find the information it needs\&. 
At least one \fBcomponent\fP must be present\&.
.PP 
Since only one distribution can be specified per line it may be necessary
to have multiple lines for the same URI, if a subset of all available
distributions or components at that location is desired\&.
\fBAPT\fP will sort the URI list after it has generated a complete set 
internally, and will collapse multiple references to the same Internet host, 
for instance, into a single connection, so that it does not inefficiently
establish an FTP connection, close it, do something else, and then
re-establish a connection to that same host\&. This feature is useful
for accessing busy FTP sites with limits on the number of simultaneous
anonymous users\&. \fBAPT\fP also parallizes connections to different hosts
to more effectively deal with sites with low bandwidth\&.
.PP 
It is important to list sources in order of preference, with the most
preferred source listed first\&. Typically this will result in sorting
by speed from fastest to slowest (CD-ROM followed by hosts on a local
network, followed by distant Internet hosts, for example)\&.
.PP 
Some examples:

.nf 
 
rpm ftp://ftp\&.conectiva\&.com/pub/conectiva/.0 6.0/conectiva main extra non-us non-free
.fi 
 

.PP 
.SH "Repository Mirror Authentication"
When you use a mirror for a distribution, there is the risk
that a site keeper infiltrates malicious packages in it,
compromising the security of all systems that use such site
as a package source. To reduce possibility of situations like
that, apt can authenticate package repositories. Note that
authentication DOES NOT guarantee that the contents of a repository
is completely secure. It can only verify that:
.IP o
all packages in the repository have a valid checksum, in relation
to what is contained in the package list;

.IP o
only packages that are known to the package list are downloadable
by apt-get;

.IP o
all package lists have a correct checksum, in relation to what
is contained in a index file;

.IP o
the index file is digitally signed by the vendor identified in
\fBsources.list\fP and the corresponding gpg fingerprint in 
\fBvendors.list\fP\&.

.PP
That can verify that a site that mirrors a repository 
has the same contents as the original site.
.PP
See \fBvendors.list\fP (5) for more information about how to setup
authentication.


.PP 
.SH "URI specification" 
The currently recognized URI types are cdrom, file, http, and ftp\&.
.PP 
.IP "\fBfile\fP" 
The file scheme allows an arbitrary directory in the file system to be
considered an archive\&. This is useful for NFS mounts and local mirrors or
archives\&.
.IP 
.IP "\fBcdrom\fP" 
The cdrom scheme allows \fBAPT\fP to use a local CDROM drive with media
swapping\&. Use the \fBapt-cdrom(8)\fP program to create cdrom entires in the
source list\&.
.IP 
.IP "\fBhttp\fP" 
The http scheme specifies an HTTP server for the archive\&. If an environment
variable \fB$http_proxy\fP is set with the format 
\fBhttp://server:port/\fP, the proxy server specified in
\fB$http_proxy\fP will be used\&. Users of authenticated HTTP/1\&.1 proxies may 
use a string of the format \fBhttp://user:pass@server:port/\fP
Note that this is an insecure method of authentication\&.
.IP 
.IP "\fBftp\fP" 
The ftp scheme specifies an FTP server for the archive\&. APT\'s FTP behavior
is highly configurable; for more information see the
\fBapt\&.conf(5)\fP manual page\&. Please note that a ftp proxy can be specified
by using the ftp_proxy environment variable\&. It is possible to specify a http
proxy (http proxy servers often understand ftp urls) using this method and 
ONLY this method\&. ftp proxies using http specified in the configuration 
file will be ignored\&.
.IP 
.IP "\fBcopy\fP" 
The copy scheme is identical to the file scheme except that packages are
copied into the cache directory instead of used directly at their location\&.
This is usefull for people using a zip disk to copy files around with APT\&.
.IP 
.PP 
.SH "EXAMPLES" 
Uses the archive stored locally (or NFS mounted) at /home/jason/debian
for stable/main, stable/contrib, and stable/non-free\&.
.RS 
"deb file:/home/jason/debian stable main contrib non-free"
.RE 
.PP 
As above, except this uses the unstable (development) distribution\&.
.RS 
"deb file:/home/jason/debian unstable main contrib non-free"
.RE 
.PP 
Source line for the above
.RS 
"deb-src file:/home/jason/debian unstable main contrib non-free"
.RE 
.PP 
Uses HTTP to access the archive at archive\&.debian\&.org, and uses only the
hamm/main area\&.
.RS 
"deb http://archive\&.debian\&.org/debian-archive hamm main"
.RE 
.PP 
Uses FTP to access the archive at ftp\&.debian\&.org, under the debian
directory, and uses only the stable/contrib area\&.
.RS 
"deb ftp://ftp\&.debian\&.org/debian stable contrib"
.RE
.PP 
Uses FTP to access the archive at ftp\&.conectiva\&.com, under the 
/pub/conectiva directory, for version 6.0 of the conectiva distribution
and the main component\&.
.RS 
"rpm ftp://ftp\&.conectiva\&.cpm/pub/conectiva 6.0/conectiva main"
.RE 
.PP 
Uses FTP to access the archive at ftp\&.debian\&.org, under the debian
directory, and uses only the unstable/contrib area\&. If this line appears as
well as the one in the previous example in \fBsources\&.list\fP,
a single FTP session will be used for both resource lines\&.
.RS 
"deb ftp://ftp\&.debian\&.org/debian unstable contrib"
.RE 
.PP 
Uses HTTP to access the archive at nonus\&.debian\&.org, under the debian-non-US
directory\&.
.RS 
"deb http://nonus\&.debian\&.org/debian-non-US stable/non-US main contrib non-free"
.RE 
.PP
Same as above, but with authentication against the vendor named \fIbla\fP,
which should be listed in \fBvendors\&.list\fP\&.
.RS
"deb [bla] http://nonus\&.debian\&.org/debian-non-US stable/non-US main contrib non-free"
.RE
.PP 
Uses HTTP to access the archive at nonus\&.debian\&.org, under the
debian-non-US directory, and uses only files found under
unstable/binary-i386 on i386 machines, unstable/binary-m68k on m68k, and so
forth for other supported architectures\&. [Note this example only illustrates
how to use the substitution variable non-us is no longer structured like this]
.RS 
"deb http://ftp\&.de\&.debian\&.org/debian-non-US unstable/binary-$(ARCH)/"
.RE 
.PP 
.SH "SEE ALSO" 
apt-cache (8),
apt\&.conf (5)
vendors\&.list (5)
.PP 
.SH "BUGS" 
See http://bugs\&.debian\&.org/apt\&.  If you wish to report a
bug in \fBapt-get\fP, please see \fB/usr/doc/debian/bug-reporting\&.txt\fP
or the \fBbug(1)\fP command\&. If you are using apt on a RPM based
system, please use http://distro\&.conectiva\&.com\&.br/bugzilla/\&.
.PP 
.SH "AUTHOR" 
apt was written by the APT team <apt@packages\&.debian\&.org>
and updated for RPM based systems by
Alfredo K. Kojima, Conectiva S.A. <kojima@conectiva\&.com\&.br>

